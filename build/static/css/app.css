h1,h2,h3,h4,h5,h6,ul,ol,dd,p,address,pre,blockquote,table,.embed,figure,.alpha,.beta,.gamma{margin:0;padding:0}h1,h2,h3,h4,h5,h6,ul,ol,dd,p,address,pre,blockquote,table,.embed,figure,.alpha,.beta,.gamma{margin-bottom:30px;margin-bottom:1.5rem}html{font-size:1.25em;line-height:1.5}body{margin:0}h1{font-size:60px;font-size:3rem;line-height:1}h2{font-size:45px;font-size:2.25rem;line-height:1.33333}h3{font-size:37.5px;font-size:1.875rem;line-height:1.6}h4{font-size:30px;font-size:1.5rem;line-height:1}h5{font-size:25px;font-size:1.25rem;line-height:1.2}h6{font-size:22.5px;font-size:1.125rem;line-height:1.33333}ul,ol,dd{margin-left:60px;margin-left:3rem}li>ul,li>ol{margin-bottom:0}code,kbd,pre,samp{font-family:monospace, monospace}blockquote{text-indent:-0.41em}blockquote{quotes:"“" "”";margin-left:60px;margin-left:3rem}blockquote p:before{content:"“";content:open-quote}blockquote p:after{content:"";content:no-close-quote}blockquote p:last-of-type:after{content:"”";content:close-quote}q{quotes:"‘" "’" "“" "”"}q:before{content:"‘";content:open-quote}q:after{content:"’";content:close-quote}q q:before{content:"“";content:open-quote}q q:after{content:"”";content:close-quote}q:first-child{display:inline-block;text-indent:-0.22em}table{width:100%;border-collapse:collapse;border-spacing:0}th,td{padding:15px}*{box-sizing:border-box}body{padding:30px;background:#f9f9f9;color:#4c4c4c}@media screen and (min-width: 1000px){body{padding:30px 0}}a{color:#4c4c4c;text-decoration:none}img{max-width:100%}body{font-family:"Chronicle Display A","Chronicle Display B";font-weight:300}@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){body{font-size:55px;font-size:2.75rem;line-height:1.275}}@media (-webkit-min-device-pixel-ratio: 2) and (min-device-width: 1000px), (min-resolution: 192dpi) and (min-device-width: 1000px){body{font-size:20px;font-size:1rem;line-height:1.5}}h1,h2,h3,h4,h5,h6{font-weight:400}strong{font-weight:700}h1,.alpha{font-size:60px;font-size:3rem;line-height:1}@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){h1,.alpha{font-size:105px;font-size:5.25rem;line-height:1.14286;line-height:1.275}}@media (-webkit-min-device-pixel-ratio: 2) and (min-device-width: 1000px), (min-resolution: 192dpi) and (min-device-width: 1000px){h1,.alpha{font-size:60px;font-size:3rem;line-height:1}}h2,.beta{font-size:45px;font-size:2.25rem;line-height:1.33333}@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){h2,.beta{font-size:78.75px;font-size:3.9375rem;line-height:1.14286;line-height:1.275}}@media (-webkit-min-device-pixel-ratio: 2) and (min-device-width: 1000px), (min-resolution: 192dpi) and (min-device-width: 1000px){h2,.beta{font-size:45px;font-size:2.25rem;line-height:1.33333}}h3,.gamma{font-size:37.5px;font-size:1.875rem;line-height:1.6}@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){h3,.gamma{font-size:65.625px;font-size:3.28125rem;line-height:1.37143;line-height:1.275}}@media (-webkit-min-device-pixel-ratio: 2) and (min-device-width: 1000px), (min-resolution: 192dpi) and (min-device-width: 1000px){h3,.gamma{font-size:37.5px;font-size:1.875rem;line-height:1.6}}footer,.post header,.post article>*:not(pre){max-width:700px;margin-left:auto;margin-right:auto}@media screen and (min-width: 1000px){footer,.post header,.post article>*:not(pre){margin-left:60px;margin-left:3rem;max-width:700px}}.posts,nav{max-width:700px;margin-left:auto;margin-right:auto}@media screen and (min-width: 1000px){.posts,nav{margin-left:60px;margin-left:3rem;max-width:700px}}.intro{max-width:700px;margin-left:auto;margin-right:auto}@media screen and (min-width: 1000px){.intro{margin-left:60px;margin-left:3rem;max-width:1100px}}nav{margin-bottom:60px;margin-bottom:3rem}nav .site-logo{border:none}nav .site-logo img{border-radius:50%;max-width:60px}main{margin-bottom:60px;margin-bottom:3rem}footer{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}footer a{display:block;padding:15px 0}footer .site-logo{padding-right:15px}footer .social{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-ms-flex-align:center;align-items:center}footer .social a{width:100%;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:0 30px}.post header{margin-bottom:30px}.home .intro{margin-bottom:60px;margin-bottom:3rem}.home .posts a{margin-bottom:60px;margin-bottom:3rem;display:block}.post-summary>.header{margin-bottom:0}.post-summary em,.post-summary small{display:block;margin-bottom:30px}.intro a,article a{transition:border 200ms, color 200ms;border-bottom:2px solid #4c4c4c}.intro a:hover,article a:hover{border-bottom:2px solid #ce6d7c;color:#ce6d7c}.post-summary small{color:#ce6d7c}.post header{border-bottom:1px solid #d9d9d9}.post img{box-shadow:0px 0px 40px -15px #4c4c4c}.post figure{padding:30px}.post figure figcaption{font-size:16px;font-size:0.8rem;line-height:1.875}.posts h1{font-size:25px;margin-bottom:0;color:#d9d9d9;text-transform:uppercase}.posts a{transition:color 200ms}.posts a>h2{font-size:37.5px;font-size:1.875rem;line-height:1.6}.posts a:after{content:"";display:block;width:100px;height:1px;background:#d9d9d9;transition:color 200ms, width 200ms}.posts a:hover{color:#ce6d7c}.posts a:hover:after{background:#ce6d7c;width:120px}footer{border-top:1px solid #d9d9d9;transition:border 200ms}footer:hover{border-top:1px solid #ce6d7c}footer .site-logo img{max-width:35px}.social a{display:inline-block;height:100%}.social img{transition:opacity 200ms;opacity:0.8;width:20px}.social img:hover{opacity:1}blockquote{text-indent:0;padding-left:30px;border-left:3px solid #d9d9d9;font-style:italic;color:#666}nav{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-ms-flex-align:center;align-items:center}nav .site-logo{padding-right:15px}nav .site-logo img{transition:box-shadow 200ms}nav .social a{transition:-webkit-transform 200ms, opacity 200ms;transition:transform 200ms, opacity 200ms;opacity:0;-webkit-transform:translateX(-20px);transform:translateX(-20px);padding:0 15px}nav .social a:first-child{transition-delay:50ms}nav .social a:nth-child(2){transition-delay:100ms}nav .social a:last-child{transition-delay:150ms}nav:hover .site-logo img{box-shadow:0px 0px 0px 3px #f9f9f9,0px 0px 0px 4px #ce6d7c}nav:hover .social a{opacity:1;-webkit-transform:translateX(0);transform:translateX(0)}code{font-size:14px;font-size:0.7rem;line-height:2.14286;font-family:Menlo, Monaco, Consolas, monospace;-webkit-text-size-adjust:none;background:#2d2d2d;border-radius:3px;color:#839496;overflow-x:auto;padding:4px 6px}pre code{border-radius:0;display:block;padding:15px;padding-left:60px;padding-left:3rem;font-size:14px;font-size:0.7rem}.tomorrow-comment,pre .comment,pre .title,.hljs-comment{color:#999999}.tomorrow-red,pre .variable,pre .attribute,pre .tag,pre .regexp,pre .ruby .constant,pre .xml .tag .title,pre .xml .pi,pre .xml .doctype,pre .html .doctype,pre .css .id,pre .css .class,pre .css .pseudo{color:#f2777a}.tomorrow-orange,pre .number,pre .preprocessor,pre .built_in,pre .literal,pre .params,pre .constant{color:#f99157}.tomorrow-yellow,pre .class,pre .ruby .class .title,pre .css .rules .attribute{color:#ffcc66}.tomorrow-green,pre .string,pre .value,pre .inheritance,pre .header,pre .ruby .symbol,pre .xml .cdata{color:#99cc99}.tomorrow-aqua,pre .css .hexcolor{color:#66cccc}.tomorrow-blue,pre .function,pre .python .decorator,pre .python .title,pre .ruby .function .title,pre .ruby .title .keyword,pre .perl .sub,pre .javascript .title,pre .coffeescript .title{color:#6699cc}.tomorrow-purple,pre .keyword,pre .javascript .function{color:#cc99cc}.resume section{max-width:700px;margin-left:auto;margin-right:auto}@media screen and (min-width: 1000px){.resume section{margin-left:60px;margin-left:3rem;max-width:700px}}.resume .contact-info{margin-bottom:60px;margin-bottom:3rem;list-style:none;margin-left:0;font-style:italic}.resume .experience{margin-bottom:60px;margin-bottom:3rem}.resume .experience h3{margin-bottom:7.5px}.resume .experience__meta{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.resume .experience__meta strong,.resume .experience__meta em{font-size:16px;font-size:0.8rem;line-height:1.875}.resume .experience__group{margin-bottom:30px}.resume .education p{margin-bottom:0}.resume .loudr a{color:#00B1C6}.resume .say a{color:#DB122E}.resume .self a{color:#ce6d7c}


/*# sourceMappingURL=data:application/json;base64, */