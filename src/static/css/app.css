h1,h2,h3,h4,h5,h6,ul,ol,dd,p,address,pre,blockquote,table{margin:0;padding:0}h1,h2,h3,h4,h5,h6,ul,ol,dd,p,address,pre,blockquote,table{margin-bottom:30px;margin-bottom:1.5rem}html{font-size:1.25em;line-height:1.5}body{margin:0}h1{font-size:38px;font-size:1.9rem;line-height:1.57895}h2{font-size:32px;font-size:1.6rem;line-height:1.875}h3{font-size:30px;font-size:1.5rem;line-height:1}h4{font-size:26px;font-size:1.3rem;line-height:1.15385}h5{font-size:22px;font-size:1.1rem;line-height:1.36364}h6{font-size:26px;font-size:1.3rem;line-height:1.15385}ul,ol,dd{margin-left:60px;margin-left:3rem}li>ul,li>ol{margin-bottom:0}code,kbd,pre,samp{font-family:monospace, monospace}blockquote{text-indent:-0.41em}blockquote{quotes:"“" "”";margin-left:60px;margin-left:3rem}blockquote p:before{content:"“";content:open-quote}blockquote p:after{content:"";content:no-close-quote}blockquote p:last-of-type:after{content:"”";content:close-quote}q{quotes:"‘" "’" "“" "”"}q:before{content:"‘";content:open-quote}q:after{content:"’";content:close-quote}q q:before{content:"“";content:open-quote}q q:after{content:"”";content:close-quote}q:first-child{display:inline-block;text-indent:-0.22em}table{width:100%;border-collapse:collapse;border-spacing:0}th,td{padding:15px}*{box-sizing:border-box}html,body{font-family:"Chronicle Display A","Chronicle Display B";font-weight:200;font-style:normal;color:#4c4c4c}@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){html,body{font-size:50px}}@media screen and (min-width: 1000px){html,body{font-size:20px}}@media (-webkit-min-device-pixel-ratio: 2) and (min-device-width: 1000px), (min-resolution: 192dpi) and (min-device-width: 1000px){html,body{font-size:20px}}body{background:#f9f9f9;color:#4c4c4c;padding:0 30px}img{max-width:100%}h1,h2,h3,h4,h5,h6{font-family:"Landmark Regular A","Landmark Regular B";font-weight:400;font-style:normal}figure{margin:0 auto 30px}figcaption{text-align:center;font-size:14px;font-weight:200}a{text-decoration:none;color:inherit;transition:color 200ms, border-bottom 200ms}a:hover,a.active{color:#ce6d7c}.text-link,.text-wrapper a{border-bottom:2px solid #4c4c4c}.text-link:hover,.text-wrapper a:hover{border-bottom:3px solid #ce6d7c}hr{border:none;outline:none;height:1px;background:#d9d9d9;margin-top:30px;margin-bottom:30px}.rule--small{background:#4c4c4c;width:50px;margin-left:0}blockquote{border-left:3px solid #4c4c4c;margin:45px 0;padding:0 0 0 30px;text-indent:0;font-style:italic;color:#999}body{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;min-height:100vh}.text-wrapper{margin-left:auto;margin-right:auto;max-width:90%}@media screen and (min-width: 1000px){.text-wrapper{max-width:600px}}.posts{text-align:center}.posts h2{margin-bottom:0}.posts>a{display:block;margin-bottom:45px;border:none}.posts>a:hover{border:none}footer{text-align:center;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;min-height:75px;padding:30px}footer:before{transition:width 300ms,background 300ms;content:'';width:100px;height:1px;background:#d9d9d9;margin:0 auto;display:block}footer:hover:before{background:#ce6d7c;width:150px}footer .social{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;padding:30px 0;width:100%}@media screen and (min-width: 1000px){footer .social{max-width:200px}}footer .social a{-webkit-flex:1;-ms-flex:1;flex:1}@media screen and (min-width: 1000px){footer .social a{display:inline-block}}.post header{text-align:center}.post header h1{font-family:"Landmark Inline A","Landmark Inline B";margin-bottom:15px}.post header .excerpt{margin-bottom:3.75px}@media screen and (min-width: 1000px){.post header em{font-size:16px}}nav{margin:15px 0;padding:15px;text-align:center}nav a{display:block}.site-logo:before,.site-logo:after{color:#d9d9d9;display:inline-block;font-size:1.5em;padding:0 15px;transition:color 300ms;vertical-align:top}@media screen and (min-width: 1000px){.site-logo:before,.site-logo:after{font-size:2em}}.site-logo:before{content:'\2329'}.site-logo:after{content:'\232A'}.site-logo:hover:before,.site-logo:hover:after{color:#ce6d7c}.site-logo img{max-width:40px;min-width:auto}@media screen and (min-width: 1000px){.site-logo img{max-width:50px}}.avatar{text-align:center}.avatar>img{border-radius:50%;margin-bottom:15px;max-width:200px}.avatar h1{font-family:"Landmark Inline A","Landmark Inline B";font-weight:200;margin-bottom:15px}.avatar__info h2,.avatar__info p{margin-bottom:5px}.icon{min-width:60px}@media screen and (min-width: 1000px){.icon{min-width:30px}}.github-link img{max-width:20px}pre code{display:block;background:#2d2d2d;color:#cccccc;font-family:Menlo, Monaco, Consolas, monospace;display:block;overflow-x:auto;padding:15px 30px;color:#839496;-webkit-text-size-adjust:none;font-size:14px}@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){pre code{font-size:20px}}@media (-webkit-min-device-pixel-ratio: 2) and (min-device-width: 1000px), (min-resolution: 192dpi) and (min-device-width: 1000px){pre code{font-size:14px}}code{background:#d9d9d9;border-radius:3px;padding:0 15px;display:inline-block;font-size:16px}@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){code{font-size:40px}}@media (-webkit-min-device-pixel-ratio: 2) and (min-device-width: 1000px), (min-resolution: 192dpi) and (min-device-width: 1000px){code{font-size:14px}}.tomorrow-comment,pre .comment,pre .title,.hljs-comment{color:#999999}.tomorrow-red,pre .variable,pre .attribute,pre .tag,pre .regexp,pre .ruby .constant,pre .xml .tag .title,pre .xml .pi,pre .xml .doctype,pre .html .doctype,pre .css .id,pre .css .class,pre .css .pseudo{color:#f2777a}.tomorrow-orange,pre .number,pre .preprocessor,pre .built_in,pre .literal,pre .params,pre .constant{color:#f99157}.tomorrow-yellow,pre .class,pre .ruby .class .title,pre .css .rules .attribute{color:#ffcc66}.tomorrow-green,pre .string,pre .value,pre .inheritance,pre .header,pre .ruby .symbol,pre .xml .cdata{color:#99cc99}.tomorrow-aqua,pre .css .hexcolor{color:#66cccc}.tomorrow-blue,pre .function,pre .python .decorator,pre .python .title,pre .ruby .function .title,pre .ruby .title .keyword,pre .perl .sub,pre .javascript .title,pre .coffeescript .title{color:#6699cc}.tomorrow-purple,pre .keyword,pre .javascript .function{color:#cc99cc}.resume{font-family:"Chronicle Display A","Chronicle Display B"}.resume h1:first-of-type{font-size:45.6px;margin-bottom:7.5px}.resume h1,.resume h2,.resume h3,.resume h4,.resume h5,.resume h6{font-family:"Chronicle Display A","Chronicle Display B"}.resume h2{border-bottom:1px solid #d9d9d9;font-size:41.6px;line-height:62.4px}.resume h3{font-size:36px;line-height:36px}.resume h4{font-size:26px;line-height:26px}.resume .contact-info{list-style:none;margin:0;padding:0}.resume section{margin-bottom:60px}.resume .experience .experience__meta{margin-bottom:30px;font-size:18px}.resume .experience .experience__meta:last-child p{margin-bottom:inherit}.resume .experience .experience__meta h3{margin-bottom:7.5px}.resume .experience .experience__meta p{display:inline-block;margin-bottom:5px;width:50%}.resume .experience .experience__meta p:first-child{font-style:italic}.resume .experience .experience__meta p:nth-child(even){text-align:right}.resume .education p{margin-bottom:7.5px}


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jc3MiLCJsaWIvdHlwZWNzc2V0L3R5cGVjc3NldC5zY3NzIiwiX2NvbmZpZy5zY3NzIiwiX2Jhc2Uuc2NzcyIsIm1peGlucy9fYnJlYWtwb2ludC5zY3NzIiwiX2xheW91dC5zY3NzIiwiX25hdi5zY3NzIiwiX2F2YXRhci5zY3NzIiwiX21pc2Muc2NzcyIsIl9jb2RlLnNjc3MiLCJfcmVzdW1lLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMERDbUdpQixTQUNILFNBQ0EsQ0FBQSwwREFHYSxtQkEvRGdDLG9CQWtFWixDQUFBLEtBd0IxQyxpQkFDK0MsZUFDb0IsQ0FBQSxLQVluRSxRQUNRLENBQUEsR0FVVixlQy9JcUIsaUJEa0RzQyxtQkFHa0QsQ0FBQSxHQStGN0csZUNuSnFCLGlCRGlEc0MsaUJBR2tELENBQUEsR0FvRzdHLGVDdkpxQixpQkRnRHNDLGFBR2tELENBQUEsR0F5RzdHLGVDM0pxQixpQkQrQ3NDLG1CQUdrRCxDQUFBLEdBOEc3RyxlQy9KcUIsaUJEOENzQyxtQkFHa0QsQ0FBQSxHQW1IN0csZUNuS3FCLGlCRDZDc0MsbUJBR2tELENBQUEsU0ErSHJHLGlCQWxIa0MsZ0JBQ0ssQ0FBQSxZQXVIMUMsZUFDVyxDQUFDLGtCQWtEZixnQ0FDZ0MsQ0FBQSxXQWExQixtQkFDYSxDQUFBLFdBT2IsZUFFUSxpQkFuTTBCLGdCQUNLLENBQUEsb0JBdU1qQyxZQUNPLGtCQUNPLENBQUEsbUJBR2YsV0FDTyxzQkFDWSxDQUFBLGdDQUdOLFlBQ0wsbUJBQ1EsQ0FBQSxFQU81QixzQkFDdUIsQ0FBQSxTQUVkLFlBQ08sa0JBQ08sQ0FBQSxRQUdmLFlBQ1EsbUJBQ1EsQ0FBQSxXQUdmLFlBQ08sa0JBQ08sQ0FBQSxVQUdoQixZQUNTLG1CQUNRLENBQUEsY0FNVixxQkFDVyxtQkFDRCxDQUFBLE1BZXRCLFdBRVMseUJBQ2MsZ0JBQ1QsQ0FBQyxNQUlsQixZQUN5QyxDQUFBLEVFM1YxQyxxQkFDd0IsQ0FBQSxVQUdmLHdERG9DNkMs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bEUsQ0FBQSxzR0FHNEYsYUFDNUYsQ0FBQSxrQ0FHbUIsYUFDbkIsQ0FBQSwyTEFHbUwsYUFDbkwsQ0FBQSx3REFHMEMsYUFDMUMsQ0FBQSxRQ25FUix1RFJxQ2dELENBQUEseUJRbkNuQyxpQkFDc0IsbUJBQ0UsQ0FBQSxrRUFFbEIsdURSK0I2QixDQUFBLFdRNUJqRCxnQ0FDK0IsaUJBQ0ssa0JBQ1EsQ0FBQSxXQUU1QyxlQUNvQyxnQkFDRSxDQUFBLFdBRXRDLGVSUmlCLGdCQUFBLENBQUEsc0JRWU4sZ0JBQ00sU0FDUCxTQUNDLENBQUEsZ0JBR04sa0JBQytCLENBQUEsc0NBSWpCLG1CUjNCTyxjUWdDcUIsQ0FBQSxtREFIM0IscUJBQ1csQ0FBQSx5Q0FHdkIsbUJBQ3NDLENBQUEsd0NBRXZDLHFCQUN1QixrQkFDSCxTQUNSLENBQUEsb0RBQ0ksaUJBQ1EsQ0FBQSx3REFFSixnQkFDRyxDQUFBLHFCQU8zQixtQkFDdUMsQ0FBQSIsImZpbGUiOiJhcHAuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDEsaDIsaDMsaDQsaDUsaDYsdWwsb2wsZGQscCxhZGRyZXNzLHByZSxibG9ja3F1b3RlLHRhYmxle21hcmdpbjowO3BhZGRpbmc6MH1oMSxoMixoMyxoNCxoNSxoNix1bCxvbCxkZCxwLGFkZHJlc3MscHJlLGJsb2NrcXVvdGUsdGFibGV7bWFyZ2luLWJvdHRvbTozMHB4O21hcmdpbi1ib3R0b206MS41cmVtfWh0bWx7Zm9udC1zaXplOjEuMjVlbTtsaW5lLWhlaWdodDoxLjV9Ym9keXttYXJnaW46MH1oMXtmb250LXNpemU6MzhweDtmb250LXNpemU6MS45cmVtO2xpbmUtaGVpZ2h0OjEuNTc4OTV9aDJ7Zm9udC1zaXplOjMycHg7Zm9udC1zaXplOjEuNnJlbTtsaW5lLWhlaWdodDoxLjg3NX1oM3tmb250LXNpemU6MzBweDtmb250LXNpemU6MS41cmVtO2xpbmUtaGVpZ2h0OjF9aDR7Zm9udC1zaXplOjI2cHg7Zm9udC1zaXplOjEuM3JlbTtsaW5lLWhlaWdodDoxLjE1Mzg1fWg1e2ZvbnQtc2l6ZToyMnB4O2ZvbnQtc2l6ZToxLjFyZW07bGluZS1oZWlnaHQ6MS4zNjM2NH1oNntmb250LXNpemU6MjZweDtmb250LXNpemU6MS4zcmVtO2xpbmUtaGVpZ2h0OjEuMTUzODV9dWwsb2wsZGR7bWFyZ2luLWxlZnQ6NjBweDttYXJnaW4tbGVmdDozcmVtfWxpPnVsLGxpPm9se21hcmdpbi1ib3R0b206MH1jb2RlLGtiZCxwcmUsc2FtcHtmb250LWZhbWlseTptb25vc3BhY2UsIG1vbm9zcGFjZX1ibG9ja3F1b3Rle3RleHQtaW5kZW50Oi0wLjQxZW19YmxvY2txdW90ZXtxdW90ZXM6XCLigJxcIiBcIuKAnVwiO21hcmdpbi1sZWZ0OjYwcHg7bWFyZ2luLWxlZnQ6M3JlbX1ibG9ja3F1b3RlIHA6YmVmb3Jle2NvbnRlbnQ6XCLigJxcIjtjb250ZW50Om9wZW4tcXVvdGV9YmxvY2txdW90ZSBwOmFmdGVye2NvbnRlbnQ6XCJcIjtjb250ZW50Om5vLWNsb3NlLXF1b3RlfWJsb2NrcXVvdGUgcDpsYXN0LW9mLXR5cGU6YWZ0ZXJ7Y29udGVudDpcIuKAnVwiO2NvbnRlbnQ6Y2xvc2UtcXVvdGV9cXtxdW90ZXM6XCLigJhcIiBcIuKAmVwiIFwi4oCcXCIgXCLigJ1cIn1xOmJlZm9yZXtjb250ZW50Olwi4oCYXCI7Y29udGVudDpvcGVuLXF1b3RlfXE6YWZ0ZXJ7Y29udGVudDpcIuKAmVwiO2NvbnRlbnQ6Y2xvc2UtcXVvdGV9cSBxOmJlZm9yZXtjb250ZW50Olwi4oCcXCI7Y29udGVudDpvcGVuLXF1b3RlfXEgcTphZnRlcntjb250ZW50Olwi4oCdXCI7Y29udGVudDpjbG9zZS1xdW90ZX1xOmZpcnN0LWNoaWxke2Rpc3BsYXk6aW5saW5lLWJsb2NrO3RleHQtaW5kZW50Oi0wLjIyZW19dGFibGV7d2lkdGg6MTAwJTtib3JkZXItY29sbGFwc2U6Y29sbGFwc2U7Ym9yZGVyLXNwYWNpbmc6MH10aCx0ZHtwYWRkaW5nOjE1cHh9Kntib3gtc2l6aW5nOmJvcmRlci1ib3h9aHRtbCxib2R5e2ZvbnQtZmFtaWx5OlwiQ2hyb25pY2xlIERpc3BsYXkgQVwiLFwiQ2hyb25pY2xlIERpc3BsYXkgQlwiO2ZvbnQtd2VpZ2h0OjIwMDtmb250LXN0eWxlOm5vcm1hbDtjb2xvcjojNGM0YzRjfUBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpe2h0bWwsYm9keXtmb250LXNpemU6NTBweH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KXtodG1sLGJvZHl7Zm9udC1zaXplOjIwcHh9fUBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDEwMDBweCksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDEwMDBweCl7aHRtbCxib2R5e2ZvbnQtc2l6ZToyMHB4fX1ib2R5e2JhY2tncm91bmQ6I2Y5ZjlmOTtjb2xvcjojNGM0YzRjO3BhZGRpbmc6MCAzMHB4fWltZ3ttYXgtd2lkdGg6MTAwJX1oMSxoMixoMyxoNCxoNSxoNntmb250LWZhbWlseTpcIkxhbmRtYXJrIFJlZ3VsYXIgQVwiLFwiTGFuZG1hcmsgUmVndWxhciBCXCI7Zm9udC13ZWlnaHQ6NDAwO2ZvbnQtc3R5bGU6bm9ybWFsfWZpZ3VyZXttYXJnaW46MCBhdXRvIDMwcHh9ZmlnY2FwdGlvbnt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6MTRweDtmb250LXdlaWdodDoyMDB9YXt0ZXh0LWRlY29yYXRpb246bm9uZTtjb2xvcjppbmhlcml0O3RyYW5zaXRpb246Y29sb3IgMjAwbXMsIGJvcmRlci1ib3R0b20gMjAwbXN9YTpob3ZlcixhLmFjdGl2ZXtjb2xvcjojY2U2ZDdjfS50ZXh0LWxpbmssLnRleHQtd3JhcHBlciBhe2JvcmRlci1ib3R0b206MnB4IHNvbGlkICM0YzRjNGN9LnRleHQtbGluazpob3ZlciwudGV4dC13cmFwcGVyIGE6aG92ZXJ7Ym9yZGVyLWJvdHRvbTozcHggc29saWQgI2NlNmQ3Y31ocntib3JkZXI6bm9uZTtvdXRsaW5lOm5vbmU7aGVpZ2h0OjFweDtiYWNrZ3JvdW5kOiNkOWQ5ZDk7bWFyZ2luLXRvcDozMHB4O21hcmdpbi1ib3R0b206MzBweH0ucnVsZS0tc21hbGx7YmFja2dyb3VuZDojNGM0YzRjO3dpZHRoOjUwcHg7bWFyZ2luLWxlZnQ6MH1ibG9ja3F1b3Rle2JvcmRlci1sZWZ0OjNweCBzb2xpZCAjNGM0YzRjO21hcmdpbjo0NXB4IDA7cGFkZGluZzowIDAgMCAzMHB4O3RleHQtaW5kZW50OjA7Zm9udC1zdHlsZTppdGFsaWM7Y29sb3I6Izk5OX1ib2R5e2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47bWluLWhlaWdodDoxMDB2aH0udGV4dC13cmFwcGVye21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OmF1dG87bWF4LXdpZHRoOjkwJX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpey50ZXh0LXdyYXBwZXJ7bWF4LXdpZHRoOjYwMHB4fX0ucG9zdHN7dGV4dC1hbGlnbjpjZW50ZXJ9LnBvc3RzIGgye21hcmdpbi1ib3R0b206MH0ucG9zdHM+YXtkaXNwbGF5OmJsb2NrO21hcmdpbi1ib3R0b206NDVweDtib3JkZXI6bm9uZX0ucG9zdHM+YTpob3Zlcntib3JkZXI6bm9uZX1mb290ZXJ7dGV4dC1hbGlnbjpjZW50ZXI7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjttaW4taGVpZ2h0Ojc1cHg7cGFkZGluZzozMHB4fWZvb3RlcjpiZWZvcmV7dHJhbnNpdGlvbjp3aWR0aCAzMDBtcyxiYWNrZ3JvdW5kIDMwMG1zO2NvbnRlbnQ6Jyc7d2lkdGg6MTAwcHg7aGVpZ2h0OjFweDtiYWNrZ3JvdW5kOiNkOWQ5ZDk7bWFyZ2luOjAgYXV0bztkaXNwbGF5OmJsb2NrfWZvb3Rlcjpob3ZlcjpiZWZvcmV7YmFja2dyb3VuZDojY2U2ZDdjO3dpZHRoOjE1MHB4fWZvb3RlciAuc29jaWFse2Rpc3BsYXk6ZmxleDtmbGV4OjE7cGFkZGluZzozMHB4IDA7d2lkdGg6MTAwJX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpe2Zvb3RlciAuc29jaWFse21heC13aWR0aDoyMDBweH19Zm9vdGVyIC5zb2NpYWwgYXtmbGV4OjF9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KXtmb290ZXIgLnNvY2lhbCBhe2Rpc3BsYXk6aW5saW5lLWJsb2NrfX0ucG9zdCBoZWFkZXJ7dGV4dC1hbGlnbjpjZW50ZXJ9LnBvc3QgaGVhZGVyIGgxe2ZvbnQtZmFtaWx5OlwiTGFuZG1hcmsgSW5saW5lIEFcIixcIkxhbmRtYXJrIElubGluZSBCXCI7bWFyZ2luLWJvdHRvbToxNXB4fS5wb3N0IGhlYWRlciAuZXhjZXJwdHttYXJnaW4tYm90dG9tOjMuNzVweH1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpey5wb3N0IGhlYWRlciBlbXtmb250LXNpemU6MTZweH19bmF2e21hcmdpbjoxNXB4IDA7cGFkZGluZzoxNXB4O3RleHQtYWxpZ246Y2VudGVyfW5hdiBhe2Rpc3BsYXk6YmxvY2t9LnNpdGUtbG9nbzpiZWZvcmUsLnNpdGUtbG9nbzphZnRlcntjb2xvcjojZDlkOWQ5O2Rpc3BsYXk6aW5saW5lLWJsb2NrO2ZvbnQtc2l6ZToxLjVlbTtwYWRkaW5nOjAgMTVweDt0cmFuc2l0aW9uOmNvbG9yIDMwMG1zO3ZlcnRpY2FsLWFsaWduOnRvcH1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpey5zaXRlLWxvZ286YmVmb3JlLC5zaXRlLWxvZ286YWZ0ZXJ7Zm9udC1zaXplOjJlbX19LnNpdGUtbG9nbzpiZWZvcmV7Y29udGVudDonXFwyMzI5J30uc2l0ZS1sb2dvOmFmdGVye2NvbnRlbnQ6J1xcMjMyQSd9LnNpdGUtbG9nbzpob3ZlcjpiZWZvcmUsLnNpdGUtbG9nbzpob3ZlcjphZnRlcntjb2xvcjojY2U2ZDdjfS5zaXRlLWxvZ28gaW1ne21heC13aWR0aDo0MHB4O21pbi13aWR0aDphdXRvfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCl7LnNpdGUtbG9nbyBpbWd7bWF4LXdpZHRoOjUwcHh9fS5hdmF0YXJ7dGV4dC1hbGlnbjpjZW50ZXJ9LmF2YXRhcj5pbWd7Ym9yZGVyLXJhZGl1czo1MCU7bWFyZ2luLWJvdHRvbToxNXB4O21heC13aWR0aDoyMDBweH0uYXZhdGFyIGgxe2ZvbnQtZmFtaWx5OlwiTGFuZG1hcmsgSW5saW5lIEFcIixcIkxhbmRtYXJrIElubGluZSBCXCI7Zm9udC13ZWlnaHQ6MjAwO21hcmdpbi1ib3R0b206MTVweH0uYXZhdGFyX19pbmZvIGgyLC5hdmF0YXJfX2luZm8gcHttYXJnaW4tYm90dG9tOjVweH0uaWNvbnttaW4td2lkdGg6NjBweH1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpey5pY29ue21pbi13aWR0aDozMHB4fX0uZ2l0aHViLWxpbmsgaW1ne21heC13aWR0aDoyMHB4fXByZSBjb2Rle2Rpc3BsYXk6YmxvY2s7YmFja2dyb3VuZDojMmQyZDJkO2NvbG9yOiNjY2NjY2M7Zm9udC1mYW1pbHk6TWVubG8sIE1vbmFjbywgQ29uc29sYXMsIG1vbm9zcGFjZTtkaXNwbGF5OmJsb2NrO292ZXJmbG93LXg6YXV0bztwYWRkaW5nOjE1cHggMzBweDtjb2xvcjojODM5NDk2Oy13ZWJraXQtdGV4dC1zaXplLWFkanVzdDpub25lO2ZvbnQtc2l6ZToxNHB4fUBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpe3ByZSBjb2Rle2ZvbnQtc2l6ZToyMHB4fX1AbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMikgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAxMDAwcHgpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAxMDAwcHgpe3ByZSBjb2Rle2ZvbnQtc2l6ZToxNHB4fX1jb2Rle2JhY2tncm91bmQ6I2Q5ZDlkOTtib3JkZXItcmFkaXVzOjNweDtwYWRkaW5nOjAgMTVweDtkaXNwbGF5OmlubGluZS1ibG9jaztmb250LXNpemU6MTZweH1AbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKXtjb2Rle2ZvbnQtc2l6ZTo0MHB4fX1AbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMikgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAxMDAwcHgpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAxMDAwcHgpe2NvZGV7Zm9udC1zaXplOjE0cHh9fS50b21vcnJvdy1jb21tZW50LHByZSAuY29tbWVudCxwcmUgLnRpdGxlLC5obGpzLWNvbW1lbnR7Y29sb3I6Izk5OTk5OX0udG9tb3Jyb3ctcmVkLHByZSAudmFyaWFibGUscHJlIC5hdHRyaWJ1dGUscHJlIC50YWcscHJlIC5yZWdleHAscHJlIC5ydWJ5IC5jb25zdGFudCxwcmUgLnhtbCAudGFnIC50aXRsZSxwcmUgLnhtbCAucGkscHJlIC54bWwgLmRvY3R5cGUscHJlIC5odG1sIC5kb2N0eXBlLHByZSAuY3NzIC5pZCxwcmUgLmNzcyAuY2xhc3MscHJlIC5jc3MgLnBzZXVkb3tjb2xvcjojZjI3NzdhfS50b21vcnJvdy1vcmFuZ2UscHJlIC5udW1iZXIscHJlIC5wcmVwcm9jZXNzb3IscHJlIC5idWlsdF9pbixwcmUgLmxpdGVyYWwscHJlIC5wYXJhbXMscHJlIC5jb25zdGFudHtjb2xvcjojZjk5MTU3fS50b21vcnJvdy15ZWxsb3cscHJlIC5jbGFzcyxwcmUgLnJ1YnkgLmNsYXNzIC50aXRsZSxwcmUgLmNzcyAucnVsZXMgLmF0dHJpYnV0ZXtjb2xvcjojZmZjYzY2fS50b21vcnJvdy1ncmVlbixwcmUgLnN0cmluZyxwcmUgLnZhbHVlLHByZSAuaW5oZXJpdGFuY2UscHJlIC5oZWFkZXIscHJlIC5ydWJ5IC5zeW1ib2wscHJlIC54bWwgLmNkYXRhe2NvbG9yOiM5OWNjOTl9LnRvbW9ycm93LWFxdWEscHJlIC5jc3MgLmhleGNvbG9ye2NvbG9yOiM2NmNjY2N9LnRvbW9ycm93LWJsdWUscHJlIC5mdW5jdGlvbixwcmUgLnB5dGhvbiAuZGVjb3JhdG9yLHByZSAucHl0aG9uIC50aXRsZSxwcmUgLnJ1YnkgLmZ1bmN0aW9uIC50aXRsZSxwcmUgLnJ1YnkgLnRpdGxlIC5rZXl3b3JkLHByZSAucGVybCAuc3ViLHByZSAuamF2YXNjcmlwdCAudGl0bGUscHJlIC5jb2ZmZWVzY3JpcHQgLnRpdGxle2NvbG9yOiM2Njk5Y2N9LnRvbW9ycm93LXB1cnBsZSxwcmUgLmtleXdvcmQscHJlIC5qYXZhc2NyaXB0IC5mdW5jdGlvbntjb2xvcjojY2M5OWNjfS5yZXN1bWV7Zm9udC1mYW1pbHk6XCJDaHJvbmljbGUgRGlzcGxheSBBXCIsXCJDaHJvbmljbGUgRGlzcGxheSBCXCJ9LnJlc3VtZSBoMTpmaXJzdC1vZi10eXBle2ZvbnQtc2l6ZTo0NS42cHg7bWFyZ2luLWJvdHRvbTo3LjVweH0ucmVzdW1lIGgxLC5yZXN1bWUgaDIsLnJlc3VtZSBoMywucmVzdW1lIGg0LC5yZXN1bWUgaDUsLnJlc3VtZSBoNntmb250LWZhbWlseTpcIkNocm9uaWNsZSBEaXNwbGF5IEFcIixcIkNocm9uaWNsZSBEaXNwbGF5IEJcIn0ucmVzdW1lIGgye2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkOWQ5ZDk7Zm9udC1zaXplOjQxLjZweDtsaW5lLWhlaWdodDo2Mi40cHh9LnJlc3VtZSBoM3tmb250LXNpemU6MzZweDtsaW5lLWhlaWdodDozNnB4fS5yZXN1bWUgaDR7Zm9udC1zaXplOjI2cHg7bGluZS1oZWlnaHQ6MjZweH0ucmVzdW1lIC5jb250YWN0LWluZm97bGlzdC1zdHlsZTpub25lO21hcmdpbjowO3BhZGRpbmc6MH0ucmVzdW1lIHNlY3Rpb257bWFyZ2luLWJvdHRvbTo2MHB4fS5yZXN1bWUgLmV4cGVyaWVuY2UgLmV4cGVyaWVuY2VfX21ldGF7bWFyZ2luLWJvdHRvbTozMHB4O2ZvbnQtc2l6ZToxOHB4fS5yZXN1bWUgLmV4cGVyaWVuY2UgLmV4cGVyaWVuY2VfX21ldGE6bGFzdC1jaGlsZCBwe21hcmdpbi1ib3R0b206aW5oZXJpdH0ucmVzdW1lIC5leHBlcmllbmNlIC5leHBlcmllbmNlX19tZXRhIGgze21hcmdpbi1ib3R0b206Ny41cHh9LnJlc3VtZSAuZXhwZXJpZW5jZSAuZXhwZXJpZW5jZV9fbWV0YSBwe2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1ib3R0b206NXB4O3dpZHRoOjUwJX0ucmVzdW1lIC5leHBlcmllbmNlIC5leHBlcmllbmNlX19tZXRhIHA6Zmlyc3QtY2hpbGR7Zm9udC1zdHlsZTppdGFsaWN9LnJlc3VtZSAuZXhwZXJpZW5jZSAuZXhwZXJpZW5jZV9fbWV0YSBwOm50aC1jaGlsZChldmVuKXt0ZXh0LWFsaWduOnJpZ2h0fS5yZXN1bWUgLmVkdWNhdGlvbiBwe21hcmdpbi1ib3R0b206Ny41cHh9XG5cbiIsIi8qKlxuICogVHlwZWNzc2V0XG4gKlxuICogVHlwZWNzc2V0IGlzIGEgc21hbGwsIHVub3BpbmlvbmF0ZWQgbGlicmFyeSBmb3IgY3JlYXRpbmcgYmVhdXRpZnVsbHkgc2V0IHR5cGVcbiAqIG9uIHRoZSB3ZWIuIFR5cGVjc3NldCBnaXZlcyBwZXJmZWN0IHZlcnRpY2FsIHJoeXRobSBhdCBhbnkgY29uZmlndXJhYmxlIGZvbnRcbiAqIHNpemUsIGFzIHdlbGwgYXMgbWFueSBvdGhlciB0eXBvZ3JhcGhpY2FsIG5pY2V0aWVzLlxuICovXG5cblxuXG5cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cXFxcXG4gICAgLy8gU0VUVElOR1Ncbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXFxcXFxuLy8gVHlwZWNzc2V0IG5lZWRzIHNvbWUgdmFyaWFibGVzIHNldHRpbmcgYmVmb3JlIGl0IGNhbiBnZXQgc3RhcnRlZC4gU29tZSBvZlxuLy8gdGhlc2UgdmFyaWFibGVzIGNhbiBiZSBvdmVycmlkZW4gYnkgZGV2ZWxvcGVycywgb3RoZXJzIG5lZWQgdG8gcmVtYWluXG4vLyB1bnRvdWNoZWQgYmVjYXVzZSBUeXBlY3NzZXQgd2lsbCBhc3NpZ24gdGhlbSBhdXRvbWF0aWNhbGx5IGJhc2VkIG9uIHdoYXRcbi8vIHlvdeKAmXZlIHRvbGQgaXQuXG5cbi8vIFdoYXQgd291bGQgeW91IGxpa2UgeW91ciBiYXNlIGZvbnQtc2l6ZSB0byBiZT8gRGVmaW5lIGluIHBpeGVsczsgdGhlIGxpYnJhcnlcbi8vIHdpbGwgY29udmVydCBtZWFzdXJlbWVudHMgdG8gdGhlIG1vc3QgYXBwcm9wcmlhdGUgdW5pdHMgKHJlbXMgb3IgdW5pdGxlc3MpLlxuJHR5cGVjc3NldC1iYXNlLWZvbnQtc2l6ZTogICAgICAxNnB4ICFkZWZhdWx0O1xuJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0OiAgICAyNHB4ICFkZWZhdWx0O1xuXG4vLyBIZWFkaW5nIHNpemVzXG4kdHlwZWNzc2V0LWgxLXNpemU6ICAgICAgICAgICAgIDQ4cHggIWRlZmF1bHQ7XG4kdHlwZWNzc2V0LWgyLXNpemU6ICAgICAgICAgICAgIDM2cHggIWRlZmF1bHQ7XG4kdHlwZWNzc2V0LWgzLXNpemU6ICAgICAgICAgICAgIDMwcHggIWRlZmF1bHQ7XG4kdHlwZWNzc2V0LWg0LXNpemU6ICAgICAgICAgICAgIDI0cHggIWRlZmF1bHQ7XG4kdHlwZWNzc2V0LWg1LXNpemU6ICAgICAgICAgICAgIDIwcHggIWRlZmF1bHQ7XG4kdHlwZWNzc2V0LWg2LXNpemU6ICAgICAgICAgICAgIDE4cHggIWRlZmF1bHQ7XG5cbi8vIFdvdWxkIHlvdSBsaWtlIGluZGVudGVkIChyYXRoZXIgdGhhbiBzcGFjZWQpIHBhcmFncmFwaCBkZWxpbWl0aW5nP1xuJHR5cGVjc3NldC1pbmRlbnRlZC1wYXJhZ3JhcGhzOiBmYWxzZSAhZGVmYXVsdDtcblxuLy8gV291bGQgeW91IGxpa2UgdG8gc2hvdyBhIGJhc2VsaW5lIGdyaWQ/IFRoaXMgaXMgaGFuZHkgZHVyaW5nIGRldmVsb3BtZW50LlxuJHR5cGVjc3NldC1zaG93LWJhc2VsaW5lOiAgICAgICBmYWxzZSAhZGVmYXVsdDtcblxuLy8gRG8gbm90IG1vZGlmeSB0aGVzZSB2YXJpYWJsZXM7IHRoZXkgYXJlIGludGVybmFsIHNldHRpbmdzIHVwb24gd2hpY2ggdGhlXG4vLyBsaWJyYXJ5IGRlcGVuZHMuXG4kdHlwZWNzc2V0LW1hZ2ljLW51bWJlcjogICAgICAgICR0eXBlY3NzZXQtYmFzZS1saW5lLWhlaWdodDtcbiR0eXBlY3NzZXQtbWFnaWMtcmF0aW86ICAgICAgICAgJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0IC8gJHR5cGVjc3NldC1iYXNlLWZvbnQtc2l6ZTtcblxuXG5cblxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcXFxcbiAgICAvLyBUT09MU1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cXFxcXG4vLyBUeXBlY3NzZXQgaGFzIGEgbnVtYmVyIG9mIGl0cyBvd24gdG9vbHMgd2hpY2ggaXQgdXNlcyB0byBnZW5lcmF0ZSBpdHMgQ1NTXG4vLyBtb3JlIGVmZmljaWVudGx5LlxuXG4vLyBRdWlja2x5IGdlbmVyYXRlIGEgZm9udC1zaXplIGluIHJlbXMsIHdpdGggYSBwaXhlbCBmYWxsYmFjaywgYmFzZWQgb24gdGhlXG4vLyB2YWx1ZSB3ZSBwYXNzIGludG8gdGhlIG1peGluLCBlLmcuOlxuLy9cbi8vIGgxIHtcbi8vICAgICBAaW5jbHVkZSB0eXBlY3NzZXQtZm9udC1zaXplKDI0cHgpO1xuLy8gfVxuLy9cbkBtaXhpbiB0eXBlY3NzZXQtZm9udC1zaXplKCRmb250LXNpemUsICRsaW5lLWhlaWdodDogdHJ1ZSkge1xuICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZTtcbiAgICBmb250LXNpemU6ICgkZm9udC1zaXplIC8gJHR5cGVjc3NldC1iYXNlLWZvbnQtc2l6ZSkgKiAxcmVtO1xuXG4gICAgQGlmICRsaW5lLWhlaWdodCA9PSB0cnVlIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IGNlaWwoJGZvbnQtc2l6ZSAvICR0eXBlY3NzZXQtYmFzZS1saW5lLWhlaWdodCkgKiAoJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0IC8gJGZvbnQtc2l6ZSk7XG4gICAgfVxuXG59XG5cbi8vIFNwYWNlIGVsZW1lbnRzIGJ5IGFuIGFtb3VudCBiYXNlZCBvbiB5b3VyIG1hZ2ljIG51bWJlci4gUGFzcyBpbiB0aGUgcHJvcGVydHlcbi8vIHRvIGJlIGluZGVudGVkIGFzIGEgcGFyYW1hdGVyLCBlLmcuOlxuLy9cbi8vIHByZSB7XG4vLyAgICAgQGluY2x1ZGUgdHlwZWNzc2V0LXNwYWNlKHBhZGRpbmctbGVmdCk7XG4vLyB9XG4vL1xuQG1peGluIHR5cGVjc3NldC1zcGFjZSgkcHJvcGVydHkpIHtcbiAgICAjeyRwcm9wZXJ0eX06IDIgKiAkdHlwZWNzc2V0LW1hZ2ljLW51bWJlcjtcbiAgICAjeyRwcm9wZXJ0eX06IDIgKiAkdHlwZWNzc2V0LW1hZ2ljLXJhdGlvICsgcmVtO1xufVxuXG4vLyBBIHNtYWxsLCBpbnRlcm5hbGx5LXVzZWQgZnVuY3Rpb24gdG8gcmVtb3ZlIHRoZSB1bml0cyBmcm9tIGEgZ2l2ZW4gdmFsdWUuXG5AZnVuY3Rpb24gdHlwZWNzc2V0LXN0cmlwLXVuaXRzKCRudW1iZXIpIHtcbiAgICBAcmV0dXJuICRudW1iZXIgLyAoJG51bWJlciAqIDAgKyAxKTtcbn1cblxuXG5cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNTSEFSRURcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIEEgbG90IG9mIGVsZW1lbnRzIGluIFR5cGVjc3NldCBuZWVkIHRvIHNoYXJlIHNvbWUgZGVjbGFyYXRpb25zIChtYWlubHkgZm9yXG4gKiB2ZXJ0aWNhbCByaHl0aG0pLCBzbyB3ZSBgQGV4dGVuZGAgc29tZSBzaWxlbnQgY2xhc3Nlcy5cbiAqL1xuJXR5cGVjc3NldC1yZXNldCB7XG4gICAgbWFyZ2luOiAgMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG4ldHlwZWNzc2V0LXZlcnRpY2FsLXJoeXRobSB7XG4gICAgQGV4dGVuZCAldHlwZWNzc2V0LXJlc2V0O1xuICAgIG1hcmdpbi1ib3R0b206ICR0eXBlY3NzZXQtbWFnaWMtbnVtYmVyO1xuICAgIG1hcmdpbi1ib3R0b206ICR0eXBlY3NzZXQtbWFnaWMtcmF0aW8gKyByZW07XG59XG5cblxuXG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjQkFTRVxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogMS4gU2V0IHRoZSBiYXNlIGVsZW1lbnTigJlzIGBmb250LXNpemVgIHRvIHRoZSB2YWx1ZSBvZiB5b3VyIGNob29zaW5nLiBTZXQgaW5cbiAqICAgIGVtcywgYXNzdW1pbmcgYSBicm93c2VyIGRlZmF1bHQgb2YgMTZweC5cbiAqIDIuIFdvcmsgb3V0IHRoZSB1bml0bGVzcyBgbGluZS1oZWlnaHRgIGZvciB5b3VyIHByb2plY3QgYmFzZWQgYXJvdW5kIHlvdXJcbiAqICAgIGRlc2lyZWQgYGxpbmUtaGVpZ2h0YCAoZGVmaW5lZCBwcmV2aW91c2x5IGluIHBpeGVscyksIGFuZCB5b3VyIHByb2plY3TigJlzXG4gKiAgICBiYXNlIGZvbnQgc2l6ZS5cbiAqL1xuXG5AaWYgJHR5cGVjc3NldC1zaG93LWJhc2VsaW5lID09IHRydWUge1xuLyoqXG4gKiAzLiBJZiB5b3UgaGF2ZSBjaG9zZW4gdG8gZGlzcGxheSBhIGJhc2VsaW5lIGdyaWQsIHdlIHR1cm4gaXQgb24gaGVyZS5cbiAqL1xufVxuXG5odG1sIHtcbiAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemUgLyAxNnB4ICsgZW07IC8qIFsxXSAqL1xuICAgIGxpbmUtaGVpZ2h0OiAkdHlwZWNzc2V0LWJhc2UtbGluZS1oZWlnaHQgLyAkdHlwZWNzc2V0LWJhc2UtZm9udC1zaXplOyAvKiBbMl0gKi9cblxuICAgIC8vIElmIHlvdSBoYXZlIGNob3NlbiB0byBkaXNwbGF5IGEgYmFzZWxpbmUgZ3JpZCwgd2UgdHVybiBpdCBvbiBoZXJlLlxuICAgIEBpZiAkdHlwZWNzc2V0LXNob3ctYmFzZWxpbmUgPT0gdHJ1ZSB7XG5cbiAgICAgICAgJHR5cGVjc3NldC1iYXNlbGluZS1zaXplOiB0eXBlY3NzZXQtc3RyaXAtdW5pdHMoJHR5cGVjc3NldC1tYWdpYy1udW1iZXIpO1xuXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwOi8vYmFzZWhvbGQuaXQvaS8jeyR0eXBlY3NzZXQtYmFzZWxpbmUtc2l6ZX0pOyAvKiBbM10gKi9cbiAgICB9XG5cbn1cblxuYm9keSB7XG4gICAgbWFyZ2luOiAwO1xufVxuXG5cblxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI0hFQURJTkdTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaDEge1xuICAgIEBleHRlbmQgJXR5cGVjc3NldC12ZXJ0aWNhbC1yaHl0aG07XG4gICAgQGluY2x1ZGUgdHlwZWNzc2V0LWZvbnQtc2l6ZSgkdHlwZWNzc2V0LWgxLXNpemUpO1xufVxuXG5oMiB7XG4gICAgQGV4dGVuZCAldHlwZWNzc2V0LXZlcnRpY2FsLXJoeXRobTtcbiAgICBAaW5jbHVkZSB0eXBlY3NzZXQtZm9udC1zaXplKCR0eXBlY3NzZXQtaDItc2l6ZSk7XG59XG5cbmgzIHtcbiAgICBAZXh0ZW5kICV0eXBlY3NzZXQtdmVydGljYWwtcmh5dGhtO1xuICAgIEBpbmNsdWRlIHR5cGVjc3NldC1mb250LXNpemUoJHR5cGVjc3NldC1oMy1zaXplKTtcbn1cblxuaDQge1xuICAgIEBleHRlbmQgJXR5cGVjc3NldC12ZXJ0aWNhbC1yaHl0aG07XG4gICAgQGluY2x1ZGUgdHlwZWNzc2V0LWZvbnQtc2l6ZSgkdHlwZWNzc2V0LWg0LXNpemUpO1xufVxuXG5oNSB7XG4gICAgQGV4dGVuZCAldHlwZWNzc2V0LXZlcnRpY2FsLXJoeXRobTtcbiAgICBAaW5jbHVkZSB0eXBlY3NzZXQtZm9udC1zaXplKCR0eXBlY3NzZXQtaDUtc2l6ZSk7XG59XG5cbmg2IHtcbiAgICBAZXh0ZW5kICV0eXBlY3NzZXQtdmVydGljYWwtcmh5dGhtO1xuICAgIEBpbmNsdWRlIHR5cGVjc3NldC1mb250LXNpemUoJHR5cGVjc3NldC1oNi1zaXplKTtcbn1cblxuXG5cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNMSVNUU1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnVsLCBvbCwgZGQge1xuICAgIEBleHRlbmQgJXR5cGVjc3NldC12ZXJ0aWNhbC1yaHl0aG07XG4gICAgQGluY2x1ZGUgdHlwZWNzc2V0LXNwYWNlKG1hcmdpbi1sZWZ0KTtcbn1cblxubGkgPiB1bCxcbmxpID4gb2wge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG59XG5cblxuXG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjUEFSQUdSQVBIU1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnAge1xuICAgIEBleHRlbmQgJXR5cGVjc3NldC12ZXJ0aWNhbC1yaHl0aG07XG5cbiAgICBAaWYgJHR5cGVjc3NldC1pbmRlbnRlZC1wYXJhZ3JhcGhzID09IHRydWUge1xuXG4gICAgICAgICsgcCB7XG4gICAgICAgICAgICBAaW5jbHVkZSB0eXBlY3NzZXQtc3BhY2UodGV4dC1pbmRlbnQpO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogLSR0eXBlY3NzZXQtbWFnaWMtbnVtYmVyO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogLSR0eXBlY3NzZXQtbWFnaWMtcmF0aW8gKyByZW07XG4gICAgICAgIH1cblxuICAgIH1cblxufVxuXG4vKipcbiAqIE5vdCBzdHJpY3RseSBhIHBhcmFncmFwaCwgYnV0IHByb2JhYmx5IGRvZXNu4oCZdCBuZWVkIGl0cyBvd24gc2VjdGlvbi5cbiAqL1xuYWRkcmVzcyB7XG4gICAgQGV4dGVuZCAldHlwZWNzc2V0LXZlcnRpY2FsLXJoeXRobTtcbn1cblxuXG5cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNDT0RFXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xucHJlIHtcbiAgICBAZXh0ZW5kICV0eXBlY3NzZXQtdmVydGljYWwtcmh5dGhtO1xufVxuXG4vKipcbiAqIDEuIEZpeCBhbiBvZGQgcXVpcmsgd2hlcmVieSwgd2l0aG91dCB0aGlzLCBjb2RlIGJsb2NrcyBhcmUgcmVuZGVyZWQgYXQgYVxuICogICAgZm9udC1zaXplIHNtYWxsZXIgdGhhbiAxZW0uXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIFsxXSAqL1xufVxuXG5cblxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI1FVT1RFU1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogMS4gSGFuZyB0aGUgb3BlbmluZyBxdW90ZSBvZiB0aGUgYmxvY2txdW90ZS5cbiAqL1xuYmxvY2txdW90ZSB7XG4gICAgdGV4dC1pbmRlbnQ6IC0wLjQxZW07IC8qIFsxXSAqL1xufVxuXG4vKipcbiAqIFNldCB1cCBxdW90ZSBtYXJrcyBvbiBxdW90aW5nIGVsZW1lbnRzLiBUaGlzIGlzIHZlcnkgRW5nbGlzaC1iYXNlZCwgc28gd2UgYXJlXG4gKiB1c2luZyDigJwsIOKAnSwg4oCYLCBhbmQg4oCZIHF1b3Rlcy5cbiAqL1xuYmxvY2txdW90ZSB7XG4gICAgQGV4dGVuZCAldHlwZWNzc2V0LXZlcnRpY2FsLXJoeXRobTtcbiAgICBxdW90ZXM6IFwi4oCcXCIgXCLigJ1cIjtcbiAgICBAaW5jbHVkZSB0eXBlY3NzZXQtc3BhY2UobWFyZ2luLWxlZnQpO1xuXG4gICAgcCB7XG5cbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgY29udGVudDogXCLigJxcIjtcbiAgICAgICAgICAgIGNvbnRlbnQ6IG9wZW4tcXVvdGU7XG4gICAgICAgIH1cblxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBjb250ZW50OiBuby1jbG9zZS1xdW90ZTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bGFzdC1vZi10eXBlOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwi4oCdXCI7XG4gICAgICAgICAgICBjb250ZW50OiBjbG9zZS1xdW90ZTtcbiAgICAgICAgfVxuXG4gICAgfVxuXG59XG5cbnEgICB7XG4gICAgcXVvdGVzOiBcIuKAmFwiIFwi4oCZXCIgXCLigJxcIiBcIuKAnVwiO1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIuKAmFwiO1xuICAgICAgICBjb250ZW50OiBvcGVuLXF1b3RlO1xuICAgIH1cblxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIuKAmVwiO1xuICAgICAgICBjb250ZW50OiBjbG9zZS1xdW90ZTtcbiAgICB9XG5cbiAgICBxOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwi4oCcXCI7XG4gICAgICAgIGNvbnRlbnQ6IG9wZW4tcXVvdGU7XG4gICAgfVxuXG4gICAgcTphZnRlcntcbiAgICAgICAgY29udGVudDogXCLigJ1cIjtcbiAgICAgICAgY29udGVudDogY2xvc2UtcXVvdGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSWYgYW4gZWxlbWVudCBvcGVucyB3aXRoIGFuIGlubGluZSBxdW90ZSwgbGV04oCZcyBoYW5nIHRoYXQuXG4gICAgICovXG4gICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgdGV4dC1pbmRlbnQ6IC0wLjIyZW07XG4gICAgfVxuXG59XG5cblxuXG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjVEFCTEVTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBDcnVkZSB0YWJsZSBzdHlsZXM7IHRhYmxlcyBhcmUgdmVyeSBkaWZmaWN1bHQgdG8ga2VlcCBvbiB0aGUgYmFzZWxpbmUuXG4gKi9cbnRhYmxlIHtcbiAgICBAZXh0ZW5kICV0eXBlY3NzZXQtdmVydGljYWwtcmh5dGhtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gICAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbnRoLFxudGQge1xuICAgIHBhZGRpbmc6ICR0eXBlY3NzZXQtYmFzZS1saW5lLWhlaWdodCAvIDI7XG59XG4iLCIvKioqKioqKioqKlxuKiBCcmVha3BvaW50c1xuKioqKioqKioqKi9cbiRsYXJnZTogKCBtaW46IDEwMDBweCApO1xuJHJldGluYTogKCByZXRpbmE6IHRydWUgKTtcbiRyZXRpbmEtZGVza3RvcDogJ3JldGluYS1kZXNrdG9wJztcblxuXG4vKioqKioqKioqKlxuKiBUeXBlY3NzZXRcbioqKioqKioqKiovXG4kdHlwZWNzc2V0LWJhc2UtZm9udC1zaXplOiAyMHB4O1xuJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0OiAzMHB4O1xuJHR5cGVjc3NldC1oMS1zaXplOiAzOHB4O1xuJHR5cGVjc3NldC1oMi1zaXplOiAzMnB4O1xuJHR5cGVjc3NldC1oMy1zaXplOiAzMHB4O1xuJHR5cGVjc3NldC1oNC1zaXplOiAyNnB4O1xuJHR5cGVjc3NldC1oNS1zaXplOiAyMnB4O1xuJHR5cGVjc3NldC1oNi1zaXplOiAyNnB4O1xuXG5cbi8qKioqKioqKioqXG4qIENvbG9yc1xuKioqKioqKioqKi9cbiR3aGl0ZTogI2Y5ZjlmOTtcbiRibGFjazogIzRjNGM0YztcbiRncmV5OiAjZDlkOWQ5O1xuJGJyYW5kLW1haW46ICNjZTZkN2M7XG4kd2FybmluZzogI0ZGRkJEMztcbiRzdWNjZXNzOiAjMzlhYzUyO1xuJGVycm9yOiAjYTUzNzM3O1xuJHllbGxvdzogI2ZhZWFkNDtcblxuXG4vKioqKipcbiAqIFNwYWNpbmdcbiAqKioqL1xuJGJhc2Utc3BhY2luZy11bml0OiAxNXB4O1xuXG5cbi8qKioqKlxuICogRm9udHNcbiAqKioqL1xuJGJvZHktZm9udDogJ0Nocm9uaWNsZSBEaXNwbGF5IEEnLCAnQ2hyb25pY2xlIERpc3BsYXkgQic7XG4kc2Vjb25kYXJ5OiAnSWRlYWwgU2FucyBTU20gQScsICdJZGVhbCBTYW5zIFNTbSBCJztcbiRib2R5LWZvbnQtcmVndWxhci13ZWlnaHQ6IDIwMDtcbiRib2R5LWZvbnQtYm9sZC13ZWlnaHQ6IDcwMDtcbiRoZWFkZXItZm9udDogJ0xhbmRtYXJrIFJlZ3VsYXIgQScsICdMYW5kbWFyayBSZWd1bGFyIEInO1xuJGJyYW5kLWZvbnQ6ICdMYW5kbWFyayBJbmxpbmUgQScsICdMYW5kbWFyayBJbmxpbmUgQic7XG4iLCIvKipcbiAqIEJBU0VcbiAqL1xuKiB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCwgYm9keSB7XG4gICAgZm9udC1mYW1pbHk6ICRib2R5LWZvbnQ7XG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgY29sb3I6ICRibGFjaztcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRyZXRpbmEpIHtcbiAgICAgICAgZm9udC1zaXplOiAkdHlwZWNzc2V0LWJhc2UtZm9udC1zaXplICogMi41O1xuICAgIH1cbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemU7XG4gICAgfVxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHJldGluYS1kZXNrdG9wKSB7XG4gICAgICAgIGZvbnQtc2l6ZTogJHR5cGVjc3NldC1iYXNlLWZvbnQtc2l6ZTtcbiAgICB9XG59XG5cbmJvZHkge1xuICAgIGJhY2tncm91bmQ6ICR3aGl0ZTsgXG4gICAgY29sb3I6ICRibGFjaztcbiAgICBwYWRkaW5nOiAwICRiYXNlLXNwYWNpbmctdW5pdCAqIDI7XG59XG5cbmltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5cbi8qKlxuICogSEVBREVSXG4gKi9cbmgxLCBoMiwgaDMsIFxuaDQsIGg1LCBoNiB7XG4gICAgZm9udC1mYW1pbHk6ICRoZWFkZXItZm9udDsgXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbmZpZ3VyZSB7XG4gICAgbWFyZ2luOjAgYXV0byAkdHlwZWNzc2V0LWJhc2UtbGluZS1oZWlnaHQ7XG59XG5cbmZpZ2NhcHRpb24ge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemUgKiAwLjc7XG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcbn1cblxuXG4vKipcbiAqIExJTktTXG4gKi9cbmEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAyMDBtcywgYm9yZGVyLWJvdHRvbSAyMDBtcztcbiAgICAmOmhvdmVyLFxuICAgICYuYWN0aXZlIHtcbiAgICAgICAgY29sb3I6ICRicmFuZC1tYWluO1xuICAgIH1cbn1cblxuLnRleHQtbGluayB7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICRibGFjaztcbiAgICAmOmhvdmVyIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICRicmFuZC1tYWluO1xuICAgIH1cbn1cblxuXG5ociB7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgYmFja2dyb3VuZDogJGdyZXk7XG4gICAgbWFyZ2luLXRvcDogJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0O1xuICAgIG1hcmdpbi1ib3R0b206ICR0eXBlY3NzZXQtYmFzZS1saW5lLWhlaWdodDtcbn1cblxuLnJ1bGUtLXNtYWxsIHtcbiAgICBiYWNrZ3JvdW5kOiAkYmxhY2s7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbmJsb2NrcXVvdGUge1xuICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgJGJsYWNrO1xuICAgIG1hcmdpbjogJGJhc2Utc3BhY2luZy11bml0KjMgMDtcbiAgICBwYWRkaW5nOiAwIDAgMCAkYmFzZS1zcGFjaW5nLXVuaXQgKiAyO1xuICAgIHRleHQtaW5kZW50OiAwO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBjb2xvcjogbGlnaHRlbigkYmxhY2ssIDMwJSk7XG59XG4iLCIvLyBUb2RvOiBsZXQncyBtYWtlIHRoZXNlIG5vdCBzbyBzdHVwaWRcbkBtaXhpbiBicmVha3BvaW50KCRzaXplKSB7XG4gICAgQGlmICgkc2l6ZSA9PSAkbGFyZ2UpIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBpZiAoJHNpemUgPT0gJHJldGluYSkge1xuICAgICAgICBAbWVkaWEgXG4gICAgICAgICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCBcbiAgICAgICAgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIHsgXG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBpZiAoJHNpemUgPT0gJHJldGluYS1kZXNrdG9wKSB7XG4gICAgICAgIEBtZWRpYSBcbiAgICAgICAgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMikgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAxMDAwcHgpLCBcbiAgICAgICAgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIGFuZCAobWluLWRldmljZS13aWR0aDogMTAwMHB4KSB7IFxuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIEBtaXhpbiBicmVha3BvaW50KCRtYXApIHtcbi8vICAgICAkcXVlcnk6IFwiXCI7XG4vLyAgICAgQGlmIG1hcC1oYXMta2V5KCRtYXAsIG1pbikgeyAkcXVlcnk6IGFwcGVuZCgkcXVlcnksIFwiKG1pbi13aWR0aDogI3ttYXAtZ2V0KCRtYXAsIG1pbil9KVwiKSB9XG4vLyAgICAgQGlmIG1hcC1oYXMta2V5KCRtYXAsIG1pbikgYW5kIG1hcC1oYXMta2V5KCRtYXAsIG1heCkgeyAkcXVlcnk6IGFwcGVuZCgkcXVlcnksIFwiYW5kXCIpIH1cbi8vICAgICBAaWYgbWFwLWhhcy1rZXkoJG1hcCwgbWF4KSB7ICRxdWVyeTogYXBwZW5kKCRxdWVyeSwgXCIobWF4LXdpZHRoOiAje21hcC1nZXQoJG1hcCwgbWF4KX0pXCIpIH1cbi8vICAgICBAaWYgbWFwLWhhcy1rZXkoJG1hcCwgbWluKSBhbmQgbWFwLWhhcy1rZXkoJG1hcCwgbWF4LXBpeGVsLXJhdGlvKSB7ICRxdWVyeTogYXBwZW5kKCRxdWVyeSwgXCJhbmRcIikgfVxuLy8gICAgIEBpZiBtYXAtaGFzLWtleSgkbWFwLCBtYXgtcGl4ZWwtcmF0aW8pIHsgJHF1ZXJ5OiBhcHBlbmQoJHF1ZXJ5LCBcIigtd2Via2l0LW1heC1kZXZpY2UtcGl4ZWwtcmF0aW86ICN7bWFwLWdldCgkbWFwLCBtYXgtcGl4ZWwtcmF0aW8pfSlcIikgfVxuLy8gICAgIEBpZiBtYXAtaGFzLWtleSgkbWFwLCByZXRpbmEpIHtcbi8vICAgICAgICAgJHF1ZXJ5OiBhcHBlbmQoJHF1ZXJ5LCBcIigtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpXCIpXG4vLyAgICAgfVxuLy8gICAgIEBtZWRpYSBzY3JlZW4gYW5kICN7JHF1ZXJ5fSB7IEBjb250ZW50OyB9XG4vLyB9XG4iLCJib2R5IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWluLWhlaWdodDogMTAwdmg7XG59XG5cbi50ZXh0LXdyYXBwZXIge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBtYXgtd2lkdGg6IDkwJTtcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICBtYXgtd2lkdGg6IDYwMHB4O1xuICAgIH1cbiAgICBhIHtcbiAgICAgICAgQGV4dGVuZCAudGV4dC1saW5rO1xuICAgIH1cbn1cblxuXG4vKipcbiAqIFBPU1RTXG4gKi9cbi5wb3N0cyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGgyIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG4gICAgPiBhIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRiYXNlLXNwYWNpbmctdW5pdCozO1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5cbi8qKlxuICogRk9PVEVSXG4gKi9cbiRhbmltOiAzMDBtcztcblxuZm9vdGVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogNzVweDtcbiAgICBwYWRkaW5nOiAkYmFzZS1zcGFjaW5nLXVuaXQgKiAyO1xuICAgICY6YmVmb3JlIHtcbiAgICAgICAgdHJhbnNpdGlvbjogd2lkdGggJGFuaW0sIGJhY2tncm91bmQgJGFuaW07XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICBiYWNrZ3JvdW5kOiAkZ3JleTtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJGJyYW5kLW1haW47XG4gICAgICAgICAgICB3aWR0aDogMTUwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnNvY2lhbCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIHBhZGRpbmc6ICRiYXNlLXNwYWNpbmctdW5pdCAqIDIgMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDIwMHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC5zb2NpYWwgYSB7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuLyoqXG4gKiBQT1NUXG4gKi9cbi5wb3N0IHtcbiAgICBoZWFkZXIge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGgxIHtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAkYnJhbmQtZm9udDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICRiYXNlLXNwYWNpbmctdW5pdDtcbiAgICAgICAgfVxuICAgICAgICAuZXhjZXJwdCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAkYmFzZS1zcGFjaW5nLXVuaXQgLyA0O1xuICAgICAgICB9XG4gICAgICAgIGVtIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAkdHlwZWNzc2V0LWJhc2UtZm9udC1zaXplICogMC44MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIm5hdiB7XG4gICAgYSB7IFxuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgbWFyZ2luOiAkYmFzZS1zcGFjaW5nLXVuaXQgMDtcbiAgICBwYWRkaW5nOiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc2l0ZS1sb2dvIHtcbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY29sb3I6ICRncmV5O1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgICAgIHBhZGRpbmc6IDAgJGJhc2Utc3BhY2luZy11bml0O1xuICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcztcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbGFyZ2UpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgICAgICB9XG4gICAgfVxuICAgICY6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogJ1xcMjMyOSc7XG4gICAgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnXFwyMzJBJztcbiAgICB9XG4gICAgJjpob3ZlciB7XG4gICAgICAgICY6YmVmb3JlLFxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbG9yOiAkYnJhbmQtbWFpbjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpbWcge1xuICAgICAgICBtYXgtd2lkdGg6IDQwcHg7XG4gICAgICAgIG1pbi13aWR0aDogYXV0bztcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbGFyZ2UpIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogNTBweDtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi5hdmF0YXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICA+aW1nIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgICAgIG1heC13aWR0aDogMjAwcHg7XG4gICAgfVxuICAgIGgxIHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICRicmFuZC1mb250O1xuICAgICAgICBmb250LXdlaWdodDogMjAwO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgfVxufVxuXG4uYXZhdGFyX19pbmZvIHtcbiAgICBoMiwgcCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICB9XG59XG4iLCIuaWNvbiB7XG4gICAgbWluLXdpZHRoOiA2MHB4O1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgIG1pbi13aWR0aDogMzBweDtcbiAgICB9XG59XG5cbi5naXRodWItbGluayB7XG4gICAgaW1nIHtcbiAgICAgICAgbWF4LXdpZHRoOiAyMHB4O1xuICAgIH1cbn1cbiIsIi8qXG5cbk9yZ2luYWwgU3R5bGUgZnJvbSBldGhhbnNjaG9vbm92ZXIuY29tL3NvbGFyaXplZCAoYykgSmVyZW15IEh1bGxcbjxzb3VyZHJ1bXNAZ21haWwuY29tPlxuXG4gKi9cblxucHJlIGNvZGUge1xuICAgIC8qQGV4dGVuZCAuc2tpbm55OyovXG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZDogIzJkMmQyZDtcbiAgICBjb2xvcjogI2NjY2NjYztcbiAgICBmb250LWZhbWlseTogTWVubG8sIE1vbmFjbywgQ29uc29sYXMsIG1vbm9zcGFjZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIHBhZGRpbmc6ICRiYXNlLXNwYWNpbmctdW5pdCAkdHlwZWNzc2V0LWJhc2UtbGluZS1oZWlnaHQ7XG4gICAgY29sb3I6ICM4Mzk0OTY7XG4gICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lO1xuICAgIGZvbnQtc2l6ZTogJHR5cGVjc3NldC1iYXNlLWZvbnQtc2l6ZSAqIDAuNztcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRyZXRpbmEpIHtcbiAgICAgICAgZm9udC1zaXplOiAkdHlwZWNzc2V0LWJhc2UtZm9udC1zaXplO1xuICAgIH1cbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRyZXRpbmEtZGVza3RvcCkge1xuICAgICAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemUgKiAwLjc7XG4gICAgfVxufVxuXG5jb2RlIHtcbiAgICBiYWNrZ3JvdW5kOiAjZDlkOWQ5O1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBwYWRkaW5nOiAwICRiYXNlLXNwYWNpbmctdW5pdDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZm9udC1zaXplOiAkdHlwZWNzc2V0LWJhc2UtZm9udC1zaXplICogMC44O1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHJldGluYSkge1xuICAgICAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemUgKiAyO1xuICAgIH1cbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRyZXRpbmEtZGVza3RvcCkge1xuICAgICAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemUgKiAwLjc7XG4gICAgfVxufVxuXG4vKiBUb21vcnJvdyBOaWdodCBFaWdodGllcyBUaGVtZSAqL1xuLyogT3JpZ2luYWwgdGhlbWUgLSBodHRwczovL2dpdGh1Yi5jb20vY2hyaXNrZW1wc29uL3RvbW9ycm93LXRoZW1lICovXG4vKiBodHRwOi8vam1ibG9nLmdpdGh1Yi5jb20vY29sb3ItdGhlbWVzLWZvci1nb29nbGUtY29kZS1oaWdobGlnaHRqcyAqL1xuLnRvbW9ycm93LWNvbW1lbnQsIHByZSAuY29tbWVudCwgcHJlIC50aXRsZSwgLmhsanMtY29tbWVudCB7XG4gIGNvbG9yOiAjOTk5OTk5O1xufVxuXG4udG9tb3Jyb3ctcmVkLCBwcmUgLnZhcmlhYmxlLCBwcmUgLmF0dHJpYnV0ZSwgcHJlIC50YWcsIHByZSAucmVnZXhwLCBwcmUgLnJ1YnkgLmNvbnN0YW50LCBwcmUgLnhtbCAudGFnIC50aXRsZSwgcHJlIC54bWwgLnBpLCBwcmUgLnhtbCAuZG9jdHlwZSwgcHJlIC5odG1sIC5kb2N0eXBlLCBwcmUgLmNzcyAuaWQsIHByZSAuY3NzIC5jbGFzcywgcHJlIC5jc3MgLnBzZXVkbyB7XG4gIGNvbG9yOiAjZjI3NzdhO1xufVxuXG4udG9tb3Jyb3ctb3JhbmdlLCBwcmUgLm51bWJlciwgcHJlIC5wcmVwcm9jZXNzb3IsIHByZSAuYnVpbHRfaW4sIHByZSAubGl0ZXJhbCwgcHJlIC5wYXJhbXMsIHByZSAuY29uc3RhbnQge1xuICBjb2xvcjogI2Y5OTE1Nztcbn1cblxuLnRvbW9ycm93LXllbGxvdywgcHJlIC5jbGFzcywgcHJlIC5ydWJ5IC5jbGFzcyAudGl0bGUsIHByZSAuY3NzIC5ydWxlcyAuYXR0cmlidXRlIHtcbiAgY29sb3I6ICNmZmNjNjY7XG59XG5cbi50b21vcnJvdy1ncmVlbiwgcHJlIC5zdHJpbmcsIHByZSAudmFsdWUsIHByZSAuaW5oZXJpdGFuY2UsIHByZSAuaGVhZGVyLCBwcmUgLnJ1YnkgLnN5bWJvbCwgcHJlIC54bWwgLmNkYXRhIHtcbiAgY29sb3I6ICM5OWNjOTk7XG59XG5cbi50b21vcnJvdy1hcXVhLCBwcmUgLmNzcyAuaGV4Y29sb3Ige1xuICBjb2xvcjogIzY2Y2NjYztcbn1cblxuLnRvbW9ycm93LWJsdWUsIHByZSAuZnVuY3Rpb24sIHByZSAucHl0aG9uIC5kZWNvcmF0b3IsIHByZSAucHl0aG9uIC50aXRsZSwgcHJlIC5ydWJ5IC5mdW5jdGlvbiAudGl0bGUsIHByZSAucnVieSAudGl0bGUgLmtleXdvcmQsIHByZSAucGVybCAuc3ViLCBwcmUgLmphdmFzY3JpcHQgLnRpdGxlLCBwcmUgLmNvZmZlZXNjcmlwdCAudGl0bGUge1xuICBjb2xvcjogIzY2OTljYztcbn1cblxuLnRvbW9ycm93LXB1cnBsZSwgcHJlIC5rZXl3b3JkLCBwcmUgLmphdmFzY3JpcHQgLmZ1bmN0aW9uIHtcbiAgY29sb3I6ICNjYzk5Y2M7XG59XG5cbnByZSBjb2RlIHtcbiAgLypsaW5lLWhlaWdodDogMS41OyovXG4gIC8qYm9yZGVyOiAxcHggc29saWQgI2NjYzsqL1xuICAvKnBhZGRpbmc6IDEwcHg7Ki9cbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4kUkVTVU1FXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuJHdoaXRlOiAjZjlmOWY5O1xuJGxvZ28tc2l6ZTogODBweDtcblxuLnJlc3VtZSB7XG4gICAgZm9udC1mYW1pbHk6ICRib2R5LWZvbnQ7XG4gICAgaDE6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogJHR5cGVjc3NldC1oMS1zaXplICogMS4yO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAkYmFzZS1zcGFjaW5nLXVuaXQgLyAyO1xuICAgIH1cbiAgICBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICRib2R5LWZvbnQ7XG4gICAgfVxuICAgIGgyIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRncmV5O1xuICAgICAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtaDItc2l6ZSAqIDEuMztcbiAgICAgICAgbGluZS1oZWlnaHQ6ICR0eXBlY3NzZXQtaDItc2l6ZSAqIDEuMyAqIDEuNTtcbiAgICB9XG4gICAgaDMge1xuICAgICAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtaDMtc2l6ZSAqIDEuMjtcbiAgICAgICAgbGluZS1oZWlnaHQ6ICR0eXBlY3NzZXQtaDMtc2l6ZSAqIDEuMjtcbiAgICB9XG4gICAgaDQge1xuICAgICAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtaDQtc2l6ZTtcbiAgICAgICAgbGluZS1oZWlnaHQ6ICR0eXBlY3NzZXQtaDQtc2l6ZTtcbiAgICB9XG4gICAgLmNvbnRhY3QtaW5mbyB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICB9XG5cbiAgICBzZWN0aW9uIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJGJhc2Utc3BhY2luZy11bml0KjQ7XG4gICAgfVxuXG4gICAgLmV4cGVyaWVuY2Uge1xuICAgICAgICAuZXhwZXJpZW5jZV9fbWV0YSB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAkdHlwZWNzc2V0LWJhc2UtbGluZS1oZWlnaHQ7XG4gICAgICAgICAgICAmOmxhc3QtY2hpbGQgcCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogaW5oZXJpdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJHR5cGVjc3NldC1iYXNlLWZvbnQtc2l6ZSAqIDAuOTtcbiAgICAgICAgICAgIGgzIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAkYmFzZS1zcGFjaW5nLXVuaXQgLyAyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xuICAgICAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICY6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmVkdWNhdGlvbiB7XG4gICAgICAgIHAge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogJGJhc2Utc3BhY2luZy11bml0IC8gMjtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */