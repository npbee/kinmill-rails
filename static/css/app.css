@charset "UTF-8";
/**
 * Config
 **/
/**********
* SUSY
**********/
/**********
* Breakpoints
**********/
/**********
* Typecsset
**********/
/**********
* Colors
**********/
/*****
 * Spacing
 ****/
/*****
 * Fonts
 ****/
/*****
 * Navigation
 ****/
/*****
 * Navigation
 ****/
/*****
 * Animation
 ****/
/*****
 * Round
 ****/
/**
 * Mixins
 */
@-webkit-keyframes slide-in-from-left {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0); }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0);
    z-index: 1; } }
@keyframes slide-in-from-left {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0); }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0);
    z-index: 1; } }
@-webkit-keyframes slide-out-to-left {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0); }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0);
    z-index: -1; } }
@keyframes slide-out-to-left {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0); }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0);
    z-index: -1; } }
@-webkit-keyframes slide-up {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0%, 0);
            transform: translate3d(0, 0%, 0); }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0);
    z-index: -1; } }
@keyframes slide-up {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0%, 0);
            transform: translate3d(0, 0%, 0); }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0);
    z-index: -1; } }
@-webkit-keyframes slide-down {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0);
    z-index: -1; }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0%, 0);
            transform: translate3d(0, 0%, 0); } }
@keyframes slide-down {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0);
    z-index: -1; }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0%, 0);
            transform: translate3d(0, 0%, 0); } }
@-webkit-keyframes slide-in-from-right {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0);
    z-index: 1; } }
@keyframes slide-in-from-right {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0);
    z-index: 1; } }
@-webkit-keyframes slide-out-to-right {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0); }
  95% {
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0);
    z-index: -1; } }
@keyframes slide-out-to-right {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0); }
  95% {
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0);
    z-index: -1; } }
/*
* REACT ANIMATIONS
******************************/
.fade-enter {
  max-height: 0;
  opacity: 0;
  transition: opacity 300ms, max-heigh 300ms; }

.fade-enter.fade-enter-active {
  opacity: 1;
  max-height: 500px; }

.fade-leave {
  max-height: 500px;
  opacity: 1;
  transition: opacity 300ms, max-heigh 300ms; }

.fade-leave.fade-leave-active {
  max-height: 0;
  opacity: 0; }

/******************************
* Animation delay repeater
******************************/
/**
 * Reset
 */
/* http://meyerweb.com/eric/tools/css/reset/ 
v2.0 | 20110126
License: none (public domain)
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  /*line-height: 1;*/ }

ol, ul {
  /*list-style: none;*/ }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/** 
 * Base
 */
body {
  background: #f9f9f9;
  color: #4c4c4c; }

/**
 * Typography
 */
/**
 * Typecsset
 *
 * Typecsset is a small, unopinionated library for creating beautifully set type
 * on the web. Typecsset gives perfect vertical rhythm at any configurable font
 * size, as well as many other typographical niceties.
 */
/*------------------------------------*\
    #SHARED
\*------------------------------------*/
/**
 * A lot of elements in Typecsset need to share some declarations (mainly for
 * vertical rhythm), so we `@extend` some silent classes.
 */
h1, h2, h3, h4, h5, h6, ul, ol, dd, p, address, pre, blockquote, table {
  margin: 0;
  padding: 0; }

h1, h2, h3, h4, h5, h6, ul, ol, dd, p, address, pre, blockquote, table {
  margin-bottom: 36px;
  margin-bottom: 1.5rem; }

/*------------------------------------*\
    #BASE
\*------------------------------------*/
/**
 * 1. Set the base element’s `font-size` to the value of your choosing. Set in
 *    ems, assuming a browser default of 16px.
 * 2. Work out the unitless `line-height` for your project based around your
 *    desired `line-height` (defined previously in pixels), and your project’s
 *    base font size.
 */
html {
  font-size: 1.5em;
  /* [1] */
  line-height: 1.5;
  /* [2] */ }

body {
  margin: 0; }

/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
h1 {
  font-size: 48px;
  font-size: 2rem;
  line-height: 1.5; }

h2 {
  font-size: 36px;
  font-size: 1.5rem;
  line-height: 1; }

h3 {
  font-size: 30px;
  font-size: 1.25rem;
  line-height: 1.2; }

h4 {
  font-size: 24px;
  font-size: 1rem;
  line-height: 1.5; }

h5 {
  font-size: 20px;
  font-size: 0.83333rem;
  line-height: 1.8; }

h6 {
  font-size: 18px;
  font-size: 0.75rem;
  line-height: 2; }

/*------------------------------------*\
    #LISTS
\*------------------------------------*/
ul, ol, dd {
  margin-left: 72px;
  margin-left: 3rem; }

li > ul,
li > ol {
  margin-bottom: 0; }

/*------------------------------------*\
    #PARAGRAPHS
\*------------------------------------*/
/**
 * Not strictly a paragraph, but probably doesn’t need its own section.
 */
/*------------------------------------*\
    #CODE
\*------------------------------------*/
/**
 * 1. Fix an odd quirk whereby, without this, code blocks are rendered at a
 *    font-size smaller than 1em.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* [1] */ }

/*------------------------------------*\
    #QUOTES
\*------------------------------------*/
/**
 * 1. Hang the opening quote of the blockquote.
 */
blockquote {
  text-indent: -0.41em;
  /* [1] */ }

/**
 * Set up quote marks on quoting elements. This is very English-based, so we are
 * using “, ”, ‘, and ’ quotes.
 */
blockquote {
  quotes: "“" "”";
  margin-left: 72px;
  margin-left: 3rem; }
  blockquote p:before {
    content: "“";
    content: open-quote; }
  blockquote p:after {
    content: "";
    content: no-close-quote; }
  blockquote p:last-of-type:after {
    content: "”";
    content: close-quote; }

q {
  quotes: "‘" "’" "“" "”";
  /**
   * If an element opens with an inline quote, let’s hang that.
   */ }
  q:before {
    content: "‘";
    content: open-quote; }
  q:after {
    content: "’";
    content: close-quote; }
  q q:before {
    content: "“";
    content: open-quote; }
  q q:after {
    content: "”";
    content: close-quote; }
  q:first-child {
    display: inline-block;
    text-indent: -0.22em; }

/*------------------------------------*\
    #TABLES
\*------------------------------------*/
/**
 * Crude table styles; tables are very difficult to keep on the baseline.
 */
table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0; }

th,
td {
  padding: 18px; }

* {
  box-sizing: border-box; }

html, body {
  font-family: "Chronicle Display A", "Chronicle Display B";
  font-weight: 200;
  font-style: normal;
  color: #4c4c4c; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    html, body {
      font-size: 42px; } }
  @media screen and (min-width: 1000px) {
    html, body {
      font-size: 24px; } }

h1, h2, h3,
h4, h5, h6 {
  font-family: "Landmark Regular A", "Landmark Regular B";
  font-weight: 400;
  font-style: normal; }

/*
* $LINKS
******************************/
a {
  text-decoration: none;
  color: inherit; }
  a:hover, a.active {
    color: #ce6d7c; }

.block-link {
  display: block; }

.standout-link {
  border-bottom: 2px solid #4c4c4c; }
  .standout-link:hover {
    border-bottom: 3px solid #ce6d7c; }

.rule {
  border: none;
  outline: none;
  height: 1px;
  background: #d9d9d9;
  /*margin: $typecsset-base-line-height 0;*/
  margin-top: 36px;
  margin-bottom: 36px; }

.rule--small {
  background: #d9d9d9;
  border: none;
  height: 1px;
  margin: 36px auto;
  outline: none;
  width: 100px; }

/******************************
* ICONS
******************************/
.icon {
  width: 55px;
  vertical-align: middle; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .icon {
      width: 110px; } }
  @media screen and (min-width: 1000px) {
    .icon {
      width: 30px; } }

/******************************
* FONT OVERRIDES
******************************/
.fun-font {
  font-family: "Landmark Inline A", "Landmark Inline B";
  font-weight: 400; }

.giga, .single-item header h1 {
  word-wrap: break-word; }

.muted, .footer {
  color: #727272; }

.italic {
  font-style: italic; }

/**
 * Layout
 */
body {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  min-height: 100vh;
  padding: 10px 36px; }

main {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  min-height: 100%;
  width: 100%; }
  main:after {
    content: " ";
    display: block;
    clear: both; }

/******************************
* LAYOUT OVERRIDES
******************************/
.small-margin-bottom {
  margin-bottom: 10px; }

.no-margin-bottom {
  margin-bottom: 0; }

.left-align {
  margin-left: 0; }

.center {
  text-align: center; }

.spacer {
  margin-bottom: 36px; }

/*
* Skinny sections
******************************/
.skinny, .meta, .single-item article, .single-item header h1 {
  margin-left: auto;
  margin-right: auto; }
  @media screen and (min-width: 1000px) {
    .skinny, .meta, .single-item article, .single-item header h1 {
      max-width: 700px; } }

/*
* Article
******************************/
.article {
  margin-bottom: 36px; }

/*
* General Section
******************************/
/**
 * Modules
 */
.grid {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  /*display: map-get($settings, display);*/ }
  .grid:after {
    content: " ";
    display: block;
    clear: both; }

@media screen and (min-width: 1000px) {
  .grid--centered .grid--left {
    text-align: right; } }

@media screen and (min-width: 1000px) {
  .grid--1-4 {
    width: 23.40426%;
    float: left;
    margin-right: 2.12766%;
    line-height: 1; } }

@media screen and (min-width: 1000px) {
  .grid--2-3 {
    width: 65.95745%;
    float: left;
    margin-right: 2.12766%;
    line-height: 1; } }

@media screen and (min-width: 1000px) {
  .grid--1-2 {
    width: 48.93617%;
    float: left;
    margin-right: 2.12766%;
    line-height: 1; } }

@media screen and (min-width: 1000px) {
  .grid--push-1-4 {
    margin-left: 25.53191%; } }

@media screen and (min-width: 1000px) {
  .grid--push-1-3 {
    margin-left: 34.04255%; } }

@media screen and (min-width: 1000px) {
  .grid--last {
    float: right;
    margin-right: 0; } }

/******************************
* $NAVIGATION
******************************/
.main-nav {
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 150px;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  /*padding-bottom: $typecsset-base-line-height;*/
  /*@include breakpoint($retina) {*/
  /*height: $nav-height * 4;*/
  /*}*/ }
  @media screen and (min-width: 1000px) {
    .main-nav {
      /*font-size: $typecsset-base-font-size;*/
      height: 75px; } }
  @media screen and (min-width: 1000px) {
    .main-nav a {
      padding-left: 10px;
      padding-right: 10px;
      text-align: left;
      width: auto; } }
  .main-nav .site-logo {
    display: block;
    text-align: right;
    -webkit-order: 2;
        -ms-flex-order: 2;
            order: 2;
    width: 100%;
    /*z-index: 2;*/ }
    .main-nav .site-logo img {
      -webkit-align-self: flex-start;
          -ms-flex-item-align: start;
              align-self: flex-start; }
      @media screen and (min-width: 1000px) {
        .main-nav .site-logo img {
          max-width: 35px; } }
    @media screen and (min-width: 1000px) {
      .main-nav .site-logo {
        display: inline;
        /*line-height: $nav-height * 2;*/
        -webkit-order: 0;
            -ms-flex-order: 0;
                order: 0;
        padding-right: 10px;
        padding-left: 0;
        width: auto; } }
  .main-nav .main-nav__toggle {
    display: block;
    margin-left: -10px;
    padding-right: 20px;
    width: 25%;
    z-index: 2; }
    @media screen and (min-width: 1000px) {
      .main-nav .main-nav__toggle {
        display: none; } }
  .main-nav .dropdown {
    display: none; }
    @media screen and (min-width: 1000px) {
      .main-nav .dropdown {
        display: block; } }

@media screen and (min-width: 1000px) {
  .main-nav__break-right {
    margin-left: auto; } }

.main-nav__menu {
  /*font-size: $typecsset-h1-size;*/
  left: 0;
  position: absolute;
  top: 160px;
  width: 100%;
  z-index: -1;
  /*@include breakpoint($retina) {*/
  /*font-size: $typecsset-base-font-size * 6;*/
  /*}*/ }
  @media screen and (min-width: 1000px) {
    .main-nav__menu {
      -webkit-animation: none;
              animation: none;
      font-size: inherit;
      opacity: 1;
      position: static;
      width: auto;
      z-index: 1; } }
  .main-nav__menu > a {
    border-bottom: 1px solid #d9d9d9;
    display: block;
    font-size: 48px;
    opacity: 0;
    padding: 36px;
    width: 100%; }
    .main-nav__menu > a:nth-child(1) {
      -webkit-animation-name: slide-up;
              animation-name: slide-up;
      -webkit-animation-duration: 300ms;
              animation-duration: 300ms;
      -webkit-animation-delay: 100ms;
              animation-delay: 100ms;
      -webkit-animation-fill-mode: forwards;
              animation-fill-mode: forwards; }
    .main-nav__menu > a:nth-child(2) {
      -webkit-animation-name: slide-up;
              animation-name: slide-up;
      -webkit-animation-duration: 300ms;
              animation-duration: 300ms;
      -webkit-animation-delay: 200ms;
              animation-delay: 200ms;
      -webkit-animation-fill-mode: forwards;
              animation-fill-mode: forwards; }
    .main-nav__menu > a:nth-child(3) {
      -webkit-animation-name: slide-up;
              animation-name: slide-up;
      -webkit-animation-duration: 300ms;
              animation-duration: 300ms;
      -webkit-animation-delay: 300ms;
              animation-delay: 300ms;
      -webkit-animation-fill-mode: forwards;
              animation-fill-mode: forwards; }
    .main-nav__menu > a:first-child {
      border-top: 1px solid #d9d9d9; }
      @media screen and (min-width: 1000px) {
        .main-nav__menu > a:first-child {
          border: none; } }
    @media screen and (min-width: 1000px) {
      .main-nav__menu > a {
        border: none;
        display: inline;
        font-size: 24px;
        opacity: 1;
        padding: 0 10px;
        width: auto; }
        .main-nav__menu > a:nth-child(1) {
          -webkit-animation-name: none;
                  animation-name: none;
          -webkit-animation-duration: none;
                  animation-duration: none;
          -webkit-animation-delay: 100ms;
                  animation-delay: 100ms;
          -webkit-animation-fill-mode: forwards;
                  animation-fill-mode: forwards; }
        .main-nav__menu > a:nth-child(2) {
          -webkit-animation-name: none;
                  animation-name: none;
          -webkit-animation-duration: none;
                  animation-duration: none;
          -webkit-animation-delay: 200ms;
                  animation-delay: 200ms;
          -webkit-animation-fill-mode: forwards;
                  animation-fill-mode: forwards; }
        .main-nav__menu > a:nth-child(3) {
          -webkit-animation-name: none;
                  animation-name: none;
          -webkit-animation-duration: none;
                  animation-duration: none;
          -webkit-animation-delay: 300ms;
                  animation-delay: 300ms;
          -webkit-animation-fill-mode: forwards;
                  animation-fill-mode: forwards; } }

.main-nav__social {
  -webkit-animation: slide-out-to-left 300ms forwards;
          animation: slide-out-to-left 300ms forwards;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%; }
  @media screen and (min-width: 1000px) {
    .main-nav__social {
      -webkit-animation: none;
              animation: none;
      display: block;
      opacity: 1;
      width: auto; } }
  .main-nav__social > a {
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1;
    text-align: center; }
    @media screen and (min-width: 1000px) {
      .main-nav__social > a {
        display: inline-block;
        width: auto; } }

/******************************
* OPEN NAVIGATION
******************************/
main > section {
  transition: opacity 300ms;
  z-index: 1; }

.main-nav--closed .main-nav__menu a {
  opacity: 1;
  z-index: -1; }
  @media screen and (min-width: 1000px) {
    .main-nav--closed .main-nav__menu a {
      z-index: 1; } }

.main-nav--open .main-nav__social,
.main-nav--open .main-nav__menu {
  z-index: 1; }
.main-nav--open .main-nav__menu a:nth-child(1) {
  -webkit-animation-name: slide-down;
          animation-name: slide-down;
  -webkit-animation-duration: 300ms;
          animation-duration: 300ms;
  -webkit-animation-delay: 100ms;
          animation-delay: 100ms;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }
.main-nav--open .main-nav__menu a:nth-child(2) {
  -webkit-animation-name: slide-down;
          animation-name: slide-down;
  -webkit-animation-duration: 300ms;
          animation-duration: 300ms;
  -webkit-animation-delay: 200ms;
          animation-delay: 200ms;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }
.main-nav--open .main-nav__menu a:nth-child(3) {
  -webkit-animation-name: slide-down;
          animation-name: slide-down;
  -webkit-animation-duration: 300ms;
          animation-duration: 300ms;
  -webkit-animation-delay: 300ms;
          animation-delay: 300ms;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }
.main-nav--open .main-nav__social {
  -webkit-animation: slide-in-from-left 200ms forwards;
          animation: slide-in-from-left 200ms forwards; }
.main-nav--open .site-logo {
  display: none; }
.main-nav--open > section {
  opacity: 0.1;
  position: relative;
  z-index: -1; }

.snippet {
  display: block;
  margin-bottom: 36px; }
  .snippet .snippet__tagline {
    margin-bottom: 0; }
  .snippet .snippet__item {
    font-style: italic; }

.tagline {
  font-family: "Landmark Inline A", "Landmark Inline B";
  font-weight: 400;
  font-size: 48px;
  text-align: center; }
  .tagline .tagline__item {
    margin-bottom: 0;
    line-height: 1; }
  @media screen and (min-width: 1000px) {
    .tagline {
      font-size: 36px;
      text-align: left; } }

.avatar {
  text-align: center;
  margin-bottom: 36px;
  font-size: 16.8px; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .avatar {
      font-size: 29.4px; } }
  @media screen and (min-width: 1000px) {
    .avatar {
      margin-bottom: auto;
      font-size: 16.8px; } }

.avatar__image {
  border-radius: 50%;
  max-width: 50%;
  margin-bottom: 36px; }
  @media screen and (min-width: 1000px) {
    .avatar__image {
      border-radius: 3px;
      margin-bottom: 10px;
      max-width: 90px; } }

.avatar__summary {
  /*font-size: $typecsset-base-font-size;*/
  /*font-size: $small-font;*/ }

.avatar__summary__item {
  margin-bottom: 5px; }

.avatar__summary__position {
  font-style: italic;
  font-weight: normal; }

/*------------------------------------*\
    $DROPDOWN
\*------------------------------------*/
.dropdown {
  position: relative;
  cursor: pointer; }
  .dropdown > ul {
    background: #f9f9f9;
    border-radius: 3px;
    margin: 0;
    min-width: 100px;
    padding: 0;
    right: 0; }
    @media screen and (min-width: 1000px) {
      .dropdown > ul:before, .dropdown > ul:after {
        border-top: 10px solid transparent;
        border-bottom: 10px solid #f9f9f9;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        content: "";
        display: block;
        right: 10px;
        top: -20px;
        position: absolute; } }
    .dropdown > ul:after {
      top: -21px;
      border-bottom: 10px solid #4c4c4c;
      z-index: -1; }
    @media screen and (min-width: 1000px) {
      .dropdown > ul {
        top: 125%;
        display: none;
        position: absolute;
        border: 1px solid #4c4c4c;
        white-space: nowrap; } }
    .dropdown > ul li {
      display: block; }
    .dropdown > ul a {
      display: block;
      line-height: inherit;
      text-align: right; }
      @media screen and (min-width: 1000px) {
        .dropdown > ul a {
          padding-left: 0;
          padding: 10px; }
          .dropdown > ul a:hover {
            background: #ce6d7c;
            color: #f9f9f9; } }

.dropdown:hover ul {
  display: block; }

/******************************
* TABLES!
******************************/
table {
  text-align: left; }

caption {
  font-family: "Landmark Regular A", "Landmark Regular B";
  font-size: 48px;
  margin-bottom: 10px;
  text-align: left; }

th {
  background: #ce6d7c;
  color: #f9f9f9;
  cursor: pointer;
  padding: 0;
  transition: background 200ms; }
  th a {
    cursor: pointer;
    display: block;
    padding: 10px; }
    th a:hover {
      color: #f9f9f9; }
  th:first-child {
    border-radius: 3px 0 0 0; }
  th:last-child {
    border-radius: 0 3px 0 0; }
  th:hover {
    background: #c1475a; }
    th:hover a {
      color: #f9f9f9; }

tbody {
  border-bottom: 1px solid #d9d9d9; }
  tbody tr:nth-child(2n - 1) {
    background: rgba(217, 217, 217, 0.2); }

.table-row-enter {
  opacity: 0.01;
  -webkit-transform: translate3d(-100px, 0, 0);
          transform: translate3d(-100px, 0, 0);
  transition: opacity 300ms, -webkit-transform 300ms;
  transition: opacity 300ms, transform 300ms; }

.table-row-enter.table-row-enter-active {
  opacity: 1;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0); }

.table-row-leave {
  opacity: 1;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  transition: opacity 300ms, -webkit-transform 300ms;
  transition: opacity 300ms, transform 300ms; }

.table-row-leave.table-row-leave-active {
  opacity: 0.01;
  -webkit-transform: translate3d(-100px, 0, 0);
          transform: translate3d(-100px, 0, 0); }

/******************************
* ALERTS
******************************/
.alert {
  border: 1px solid #4c4c4c;
  border-radius: 3px;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 10px auto;
  max-width: 300px;
  text-align: center;
  transition: background 300ms, opacity 300ms, max-height 300ms; }
  .alert a {
    -webkit-align-self: center;
        -ms-flex-item-align: center;
            align-self: center;
    cursor: pointer;
    width: 100%;
    word-wrap: break-word; }
  .alert a,
  .alert img {
    min-width: 20px;
    padding: 10px; }
  .alert img {
    background: #ce6d7c; }

.alert--warning {
  background: #FFFBD3; }
  .alert--warning:hover {
    background: #fff6a0; }

.alert--error {
  background: #a53737;
  color: #f9f9f9; }

/******************************
* SUMMARY LIST
******************************/
.summary-list {
  background: rgba(217, 217, 217, 0.2);
  border-radius: 3px;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  margin: 0;
  padding: 0;
  text-align: center; }
  @media screen and (min-width: 1000px) {
    .summary-list {
      -webkit-flex-direction: row;
          -ms-flex-direction: row;
              flex-direction: row; } }
  .summary-list h2 {
    /*font-size: $typecsset-base-font-size;*/
    margin-bottom: 0; }
  .summary-list li {
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1;
    padding: 10px; }
  .summary-list p {
    margin-bottom: 0; }

/******************************
* META
******************************/
.meta {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 16.8px; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .meta {
      font-size: 42px; } }
  @media screen and (min-width: 1000px) {
    .meta {
      font-size: 24px; } }

.meta__item {
  /*background: rgba($grey, 0.2);*/
  border-radius: 3px;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  list-style: none;
  margin: 0; }

.meta__header {
  font-size: 16.8px;
  margin-bottom: 5px; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .meta__header {
      font-size: 42px; } }
  @media screen and (min-width: 1000px) {
    .meta__header {
      font-size: 36px; } }

.meta__value {
  font-style: italic;
  margin-bottom: 10px; }

/******************************
* SINGLE ITEM
* This is for long form items 
* as seen in a post or project
******************************/
.single-item img {
  max-width: 100%; }

/*
* Single item sections
******************************/
.single-item {
  margin: 0 auto; }

.single-item header {
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (min-width: 1000px) {
    .single-item header {
      -webkit-flex-direction: row;
          -ms-flex-direction: row;
              flex-direction: row; } }
  .single-item header img {
    display: block;
    margin: 36px auto; }
  .single-item header .aside-1,
  .single-item header .aside-2 {
    text-align: center;
    width: 100%; }
    @media screen and (min-width: 1000px) {
      .single-item header .aside-1 li:after,
      .single-item header .aside-2 li:after {
        margin-left: inherit;
        margin-right: inherit; } }
    @media screen and (min-width: 1000px) {
      .single-item header .aside-1,
      .single-item header .aside-2 {
        text-align: inherit;
        width: auto; } }
  @media screen and (min-width: 1000px) {
    .single-item header .aside-1 {
      -webkit-order: 1;
          -ms-flex-order: 1;
              order: 1; }
      .single-item header .aside-1 li:after {
        margin-left: auto; } }
  .single-item header .aside-2 {
    -webkit-order: 3;
        -ms-flex-order: 3;
            order: 3; }
  .single-item header h1 {
    line-height: 1; }
    @media screen and (min-width: 1000px) {
      .single-item header h1 {
        min-width: 700px;
        -webkit-order: 2;
            -ms-flex-order: 2;
                order: 2; } }

/*

Orginal Style from ethanschoonover.com/solarized (c) Jeremy Hull
<sourdrums@gmail.com>

 */
.hljs,
pre code {
  display: block;
  overflow-x: auto;
  padding: 0.5em;
  background: #002b36;
  color: #839496;
  -webkit-text-size-adjust: none; }

code {
  background: #002b36;
  border-radius: 3px;
  color: #839396;
  display: inline-block;
  font-size: 16.8px;
  margin: 0 0.2em;
  padding: 0.2em; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    code {
      font-size: 29.4px; } }
  @media screen and (min-width: 1000px) {
    code {
      font-size: 16.8px; } }

.hljs-comment,
.diff .hljs-header,
.hljs-doctype,
.hljs-pi,
.lisp .hljs-string,
.hljs-javadoc {
  color: #586e75; }

/* Solarized Green */
.hljs-keyword,
.hljs-winutils,
.method,
.hljs-addition,
.css .hljs-tag,
.hljs-request,
.hljs-status,
.nginx .hljs-title {
  color: #859900; }

/* Solarized Cyan */
.hljs-number,
.hljs-command,
.hljs-string,
.hljs-tag .hljs-value,
.hljs-rules .hljs-value,
.hljs-phpdoc,
.hljs-dartdoc,
.tex .hljs-formula,
.hljs-regexp,
.hljs-hexcolor,
.hljs-link_url {
  color: #2aa198; }

/* Solarized Blue */
.hljs-title,
.hljs-localvars,
.hljs-chunk,
.hljs-decorator,
.hljs-built_in,
.hljs-identifier,
.vhdl .hljs-literal,
.hljs-id,
.css .hljs-function {
  color: #268bd2; }

/* Solarized Yellow */
.hljs-attribute,
.hljs-variable,
.lisp .hljs-body,
.smalltalk .hljs-number,
.hljs-constant,
.hljs-class .hljs-title,
.hljs-parent,
.hljs-type,
.hljs-link_reference {
  color: #b58900; }

/* Solarized Orange */
.hljs-preprocessor,
.hljs-preprocessor .hljs-keyword,
.hljs-pragma,
.hljs-shebang,
.hljs-symbol,
.hljs-symbol .hljs-string,
.diff .hljs-change,
.hljs-special,
.hljs-attr_selector,
.hljs-subst,
.hljs-cdata,
.css .hljs-pseudo,
.hljs-header {
  color: #cb4b16; }

/* Solarized Red */
.hljs-deletion,
.hljs-important {
  color: #dc322f; }

/* Solarized Violet */
.hljs-link_label {
  color: #6c71c4; }

.tex .hljs-formula {
  background: #073642; }

/******************************
* FORMS
******************************/
form {
  width: 100%; }

.form-row {
  margin-bottom: 36px; }
  .form-row label {
    display: block;
    font-size: 36px; }
  .form-row input[type="text"],
  .form-row input[type="password"],
  .form-row textarea {
    border: 1px solid #d9d9d9;
    border-radius: 3px;
    display: block;
    font-size: 24px;
    font-family: "Chronicle Display A", "Chronicle Display B";
    padding: 10px;
    width: 100%; }
  .form-row textarea {
    min-height: 500px; }

.checkbox {
  position: relative; }

.checkbox input[type="checkbox"] {
  opacity: 0;
  -webkit-appearance: none;
  display: inline-block;
  vertical-align: middle;
  z-index: 100; }

.checkbox input[type="checkbox"],
.checkbox label::before {
  width: 50px;
  height: 50px;
  top: 50%;
  left: 0;
  margin-top: -25px;
  position: absolute;
  cursor: pointer;
  border-radius: 50%;
  background: #a53737; }

.checkbox label {
  display: inline-block;
  position: relative;
  padding: 0 0 0 80px;
  vertical-align: top;
  cursor: pointer;
  color: rgba(76, 76, 76, 0.7);
  transition: color 0.3s; }
  .checkbox label:before {
    content: '';
    border: 4px solid #4c4c4c;
    transition: opacity 0.3s, background 200ms; }

.checkbox
input[type="checkbox"]:checked
+ label {
  color: #4c4c4c; }

.checkbox
input[type="checkbox"]:checked
+ label::before {
  opacity: 0.8;
  background: #39ac52; }

/******************************
* TABS
******************************/
.tabs-navigation {
  box-shadow: inset 0 -2px #d9d9d9;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start; }
  .tabs-navigation a {
    box-shadow: inset 0 -2px #b2b2b2;
    color: #b2b2b2;
    display: block;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1;
    font-family: "Landmark Regular A", "Landmark Regular B";
    font-weight: 700;
    letter-spacing: 1px;
    padding: 5px 10px;
    text-align: left;
    text-transform: uppercase;
    transition: color 300ms, box-shadow 300ms; }
    .tabs-navigation a:not(.tabs-menu-item--active):hover {
      box-shadow: inset 0 -2px #4c4c4c;
      color: #4c4c4c; }
    @media screen and (min-width: 1000px) {
      .tabs-navigation a {
        max-width: 200px; } }
  .tabs-navigation .tabs-menu-item--active {
    box-shadow: inset 0 -2px #ce6d7c;
    color: #ce6d7c; }

.tab-panel {
  padding: 36px 0; }

/******************************
* TAGS
******************************/
.tag-list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-top: 10px; }
  .tag-list .tag {
    background: #faead4;
    border: 1px solid #4c4c4c;
    border-radius: 3px;
    cursor: pointer;
    margin-right: 10px;
    padding-right: 10px;
    transition: color 300ms, text-decoration 300ms;
    min-width: 100px; }
    .tag-list .tag:before {
      background: #4c4c4c;
      color: #f9f9f9;
      content: "×";
      display: inline-block;
      margin-right: 5px;
      padding: 0 10px; }
  .tag-list .tag--delete {
    color: #a53737;
    text-decoration: line-through; }

.tag-list--comma > a {
  /*font-size: $small-font;*/ }
  .tag-list--comma > a:after {
    content: ",\00a0";
    display: inline-block; }
  .tag-list--comma > a:last-child:after {
    content: ""; }

/******************************
* BUTTONS
******************************/
.button {
  background: #ce6d7c;
  border: 1px solid #4c4c4c;
  border-radius: 3px;
  color: #f9f9f9;
  cursor: pointer;
  font-family: "Chronicle Display A", "Chronicle Display B";
  font-size: 24px;
  outline: none;
  padding: 10px 36px;
  transition: background 300ms; }
  .button:hover {
    background: #c1475a; }

/******************************
* $CLOUD
******************************/
.cloud {
  text-align: center; }
  .cloud a {
    display: inline-block;
    padding: 10px; }

/******************************
* $FOOTER
******************************/
.footer-container {
  height: 80px;
  margin-top: 10px;
  position: relative; }
  @media screen and (min-width: 1000px) {
    .footer-container:hover:before {
      width: 80px;
      background: #ce6d7c; }
    .footer-container:before {
      transition: width 300ms, background 300ms;
      content: "";
      display: block;
      position: relative;
      margin: 10px auto;
      width: 50px;
      height: 1px;
      background: #d9d9d9; } }

.footer {
  /*@include clearfix;*/
  max-width: 1600px;
  margin: 0 auto;
  text-align: center;
  font-size: 16.8px; }
  .footer [data-icon]:before {
    /*font-size: $typecsset-h3-size;*/
    display: block;
    margin-bottom: 10px; }
    @media screen and (min-width: 1000px) {
      .footer [data-icon]:before {
        display: inline-block;
        margin-bottom: 0;
        /*font-size: $typecsset-h4-size;*/ } }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .footer {
      font-size: 42px; } }
  @media screen and (min-width: 1000px) {
    .footer {
      font-size: 16.8px; } }
  .footer a {
    display: block;
    padding: 10px;
    background: #f9f9f9;
    border-top: 1px solid #d9d9d9; }
    @media screen and (min-width: 1000px) {
      .footer a {
        background: none;
        border: none;
        padding: 5px; } }
  .footer ul {
    list-style: none;
    margin: 0;
    padding: 0; }
    @media screen and (min-width: 1000px) {
      .footer ul li {
        display: inline-block; } }
  .footer .footer__copyright {
    font-size: 16.8px;
    border-top: none; }
    @media screen and (-webkit-min-device-pixel-ratio: 2) {
      .footer .footer__copyright {
        font-size: 29.4px; } }
    @media screen and (min-width: 1000px) {
      .footer .footer__copyright {
        font-size: 12px; } }

/******************************
* LOADER
******************************/
.loader {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-content: center;
      -ms-flex-line-pack: center;
          align-content: center;
  position: relative; }
  .loader:before, .loader:after {
    border-radius: 50%;
    content: '';
    transition: opacity 200ms; }
  .loader:before {
    -webkit-animation: rotation 1.0s infinite ease-in-out;
            animation: rotation 1.0s infinite ease-in-out;
    border-left: 8px solid #4c4c4c;
    border-right: 8px solid #4c4c4c;
    border-top: 8px solid #f9f9f9;
    border-bottom: 8px solid #f9f9f9;
    height: 80px;
    width: 80px; }
  .loader:after {
    -webkit-animation: rotation 1.0s 500ms infinite ease-in-out;
            animation: rotation 1.0s 500ms infinite ease-in-out;
    border-left: 6px solid #4c4c4c;
    border-right: 6px solid #4c4c4c;
    border-top: 6px solid #f9f9f9;
    border-bottom: 6px solid #f9f9f9;
    height: 40px;
    left: 50%;
    margin-left: -26px;
    position: absolute;
    top: 20px;
    width: 40px; }

@-webkit-keyframes rotation {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes rotation {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }
/**
 * Page Specific
 */
@media screen and (min-width: 1000px) {
  .home {
    margin-top: 72px;
    margin-top: 3rem; } }



/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jc3MiLCJtaXhpbnMvX2FuaW1hdGlvbnMuc2NzcyIsIl9yZXNldC5zY3NzIiwiYmFzZS9fYmFzZS5zY3NzIiwiX2NvbmZpZy5zY3NzIiwibGliL3R5cGVjc3NldC90eXBlY3NzZXQuc2NzcyIsInR5cG9ncmFwaHkvX2Jhc2Uuc2NzcyIsIm1peGlucy9fYnJlYWtwb2ludC5zY3NzIiwibGF5b3V0L19iYXNlLnNjc3MiLCIuLi8uLi8uLi8uLi8uLi9MaWJyYXJ5L1J1YnkvR2Vtcy8yLjAuMC9nZW1zL3N1c3ktMi4xLjMvc2Fzcy9zdXN5L291dHB1dC9zdXBwb3J0L19yZW0uc2NzcyIsIi4uLy4uLy4uLy4uLy4uL0xpYnJhcnkvUnVieS9HZW1zLzIuMC4wL2dlbXMvc3VzeS0yLjEuMy9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fY29udGFpbmVyLnNjc3MiLCIuLi8uLi8uLi8uLi8uLi9MaWJyYXJ5L1J1YnkvR2Vtcy8yLjAuMC9nZW1zL3N1c3ktMi4xLjMvc2Fzcy9zdXN5L291dHB1dC9zdXBwb3J0L19jbGVhcmZpeC5zY3NzIiwibGF5b3V0L19zZWN0aW9uLnNjc3MiLCJtb2R1bGVzL19ncmlkLnNjc3MiLCIuLi8uLi8uLi8uLi8uLi9MaWJyYXJ5L1J1YnkvR2Vtcy8yLjAuMC9nZW1zL3N1c3ktMi4xLjMvc2Fzcy9zdXN5L2xhbmd1YWdlL3N1c3kvX3NwYW4uc2NzcyIsIi4uLy4uLy4uLy4uLy4uL0xpYnJhcnkvUnVieS9HZW1zLzIuMC4wL2dlbXMvc3VzeS0yLjEuMy9zYXNzL3N1c3kvb3V0cHV0L2Zsb2F0L19zcGFuLnNjc3MiLCIuLi8uLi8uLi8uLi8uLi9MaWJyYXJ5L1J1YnkvR2Vtcy8yLjAuMC9nZW1zL3N1c3ktMi4xLjMvc2Fzcy9zdXN5L2xhbmd1YWdlL3N1c3kvX21hcmdpbnMuc2NzcyIsIi4uLy4uLy4uLy4uLy4uL0xpYnJhcnkvUnVieS9HZW1zLzIuMC4wL2dlbXMvc3VzeS0yLjEuMy9zYXNzL3N1c3kvb3V0cHV0L2Zsb2F0L19lbmQuc2NzcyIsIi4uLy4uLy4uLy4uLy4uL0xpYnJhcnkvUnVieS9HZW1zLzIuMC4wL2dlbXMvc3VzeS0yLjEuMy9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fcm93cy5zY3NzIiwibW9kdWxlcy9fbmF2LnNjc3MiLCJtb2R1bGVzL19zbmlwcGV0LnNjc3MiLCJtb2R1bGVzL190YWdsaW5lLnNjc3MiLCJtb2R1bGVzL19hdmF0YXIuc2NzcyIsIm1vZHVsZXMvX2Ryb3Bkb3duLnNjc3MiLCJtb2R1bGVzL190YWJsZS5zY3NzIiwibW9kdWxlcy9fYWxlcnQuc2NzcyIsIm1vZHVsZXMvX3N1bW1hcnlfbGlzdC5zY3NzIiwibW9kdWxlcy9fbWV0YS5zY3NzIiwibW9kdWxlcy9fc2luZ2xlX2l0ZW0uc2NzcyIsIm1vZHVsZXMvX2NvZGUuc2NzcyIsIm1vZHVsZXMvX2Zvcm1zLnNjc3MiLCJtb2R1bGVzL190YWJzLnNjc3MiLCJtb2R1bGVzL190YWdzLnNjc3MiLCJtb2R1bGVzL19idXR0b25zLnNjc3MiLCJtb2R1bGVzL19jbG91ZC5zY3NzIiwibW9kdWxlcy9fZm9vdGVyLnNjc3MiLCJtb2R1bGVzL19sb2FkZXIuc2NzcyIsInBhZ2UvX2hvbWUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQkFBaUI7QUFDakI7O0tBRUk7QUFDSjs7WUFFVztBQUNYOztZQUVXO0FBQ1g7O1lBRVc7QUFDWDs7WUFFVztBQUNYOztPQUVNO0FBQ047O09BRU07QUFDTjs7T0FFTTtBQUNOOztPQUVNO0FBQ047O09BRU07QUFDTjs7T0FFTTtBQUNOOztJQUVHO0FDcENIO0VBQ0k7SUFDSSxZQUFVO0lBQ1YsNkNBQW1DO1lBQW5DLHFDQUFtQyxFQUFBO0VBRXZDO0lBQ0ksWUFBVTtJQUNWLDBDQUFnQztZQUFoQyxrQ0FBZ0M7SUFDaEMsWUFBVSxFQUFBLEVBQUE7QUFSbEI7RUFDSTtJQUNJLFlBQVU7SUFDViw2Q0FBbUM7WUFBbkMscUNBQW1DLEVBQUE7RUFFdkM7SUFDSSxZQUFVO0lBQ1YsMENBQWdDO1lBQWhDLGtD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ICogQ29uZmlnXG4gKiovXG4vKioqKioqKioqKlxuKiBTVVNZXG4qKioqKioqKioqL1xuLyoqKioqKioqKipcbiogQnJlYWtwb2ludHNcbioqKioqKioqKiovXG4vKioqKioqKioqKlxuKiBUeXBlY3NzZXRcbioqKioqKioqKiovXG4vKioqKioqKioqKlxuKiBDb2xvcnNcbioqKioqKioqKiovXG4vKioqKipcbiAqIFNwYWNpbmdcbiAqKioqL1xuLyoqKioqXG4gKiBGb250c1xuICoqKiovXG4vKioqKipcbiAqIE5hdmlnYXRpb25cbiAqKioqL1xuLyoqKioqXG4gKiBOYXZpZ2F0aW9uXG4gKioqKi9cbi8qKioqKlxuICogQW5pbWF0aW9uXG4gKioqKi9cbi8qKioqKlxuICogUm91bmRcbiAqKioqL1xuLyoqXG4gKiBNaXhpbnNcbiAqL1xuQGtleWZyYW1lcyBzbGlkZS1pbi1mcm9tLWxlZnQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCUsIDAsIDApO1xuICAgIHotaW5kZXg6IDE7IH0gfVxuQGtleWZyYW1lcyBzbGlkZS1vdXQtdG8tbGVmdCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCUsIDAsIDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCk7XG4gICAgei1pbmRleDogLTE7IH0gfVxuQGtleWZyYW1lcyBzbGlkZS11cCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCUsIDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAtMTAwJSwgMCk7XG4gICAgei1pbmRleDogLTE7IH0gfVxuQGtleWZyYW1lcyBzbGlkZS1kb3duIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAtMTAwJSwgMCk7XG4gICAgei1pbmRleDogLTE7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAlLCAwKTsgfSB9XG5Aa2V5ZnJhbWVzIHNsaWRlLWluLWZyb20tcmlnaHQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwJSwgMCwgMCk7XG4gICAgei1pbmRleDogMTsgfSB9XG5Aa2V5ZnJhbWVzIHNsaWRlLW91dC10by1yaWdodCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCUsIDAsIDApOyB9XG4gIDk1JSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgxMDAlLCAwLCAwKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCUsIDAsIDApO1xuICAgIHotaW5kZXg6IC0xOyB9IH1cbi8qXG4qIFJFQUNUIEFOSU1BVElPTlNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5mYWRlLWVudGVyIHtcbiAgbWF4LWhlaWdodDogMDtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAzMDBtcywgbWF4LWhlaWdoIDMwMG1zOyB9XG5cbi5mYWRlLWVudGVyLmZhZGUtZW50ZXItYWN0aXZlIHtcbiAgb3BhY2l0eTogMTtcbiAgbWF4LWhlaWdodDogNTAwcHg7IH1cblxuLmZhZGUtbGVhdmUge1xuICBtYXgtaGVpZ2h0OiA1MDBweDtcbiAgb3BhY2l0eTogMTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAzMDBtcywgbWF4LWhlaWdoIDMwMG1zOyB9XG5cbi5mYWRlLWxlYXZlLmZhZGUtbGVhdmUtYWN0aXZlIHtcbiAgbWF4LWhlaWdodDogMDtcbiAgb3BhY2l0eTogMDsgfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEFuaW1hdGlvbiBkZWxheSByZXBlYXRlclxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqXG4gKiBSZXNldFxuICovXG4vKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0LyBcbnYyLjAgfCAyMDExMDEyNlxuTGljZW5zZTogbm9uZSAocHVibGljIGRvbWFpbilcbiAqL1xuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcbmIsIHUsIGksIGNlbnRlcixcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcbnRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuYm9keSB7XG4gIC8qbGluZS1oZWlnaHQ6IDE7Ki8gfVxuXG5vbCwgdWwge1xuICAvKmxpc3Qtc3R5bGU6IG5vbmU7Ki8gfVxuXG5ibG9ja3F1b3RlLCBxIHtcbiAgcXVvdGVzOiBub25lOyB9XG5cbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsIHE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbi8qKiBcbiAqIEJhc2VcbiAqL1xuYm9keSB7XG4gIGJhY2tncm91bmQ6ICNmOWY5Zjk7XG4gIGNvbG9yOiAjNGM0YzRjOyB9XG5cbi8qKlxuICogVHlwb2dyYXBoeVxuICovXG4vKipcbiAqIFR5cGVjc3NldFxuICpcbiAqIFR5cGVjc3NldCBpcyBhIHNtYWxsLCB1bm9waW5pb25hdGVkIGxpYnJhcnkgZm9yIGNyZWF0aW5nIGJlYXV0aWZ1bGx5IHNldCB0eXBlXG4gKiBvbiB0aGUgd2ViLiBUeXBlY3NzZXQgZ2l2ZXMgcGVyZmVjdCB2ZXJ0aWNhbCByaHl0aG0gYXQgYW55IGNvbmZpZ3VyYWJsZSBmb250XG4gKiBzaXplLCBhcyB3ZWxsIGFzIG1hbnkgb3RoZXIgdHlwb2dyYXBoaWNhbCBuaWNldGllcy5cbiAqL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjU0hBUkVEXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBBIGxvdCBvZiBlbGVtZW50cyBpbiBUeXBlY3NzZXQgbmVlZCB0byBzaGFyZSBzb21lIGRlY2xhcmF0aW9ucyAobWFpbmx5IGZvclxuICogdmVydGljYWwgcmh5dGhtKSwgc28gd2UgYEBleHRlbmRgIHNvbWUgc2lsZW50IGNsYXNzZXMuXG4gKi9cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHVsLCBvbCwgZGQsIHAsIGFkZHJlc3MsIHByZSwgYmxvY2txdW90ZSwgdGFibGUge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgdWwsIG9sLCBkZCwgcCwgYWRkcmVzcywgcHJlLCBibG9ja3F1b3RlLCB0YWJsZSB7XG4gIG1hcmdpbi1ib3R0b206IDM2cHg7XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTsgfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNCQVNFXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiAxLiBTZXQgdGhlIGJhc2UgZWxlbWVudOKAmXMgYGZvbnQtc2l6ZWAgdG8gdGhlIHZhbHVlIG9mIHlvdXIgY2hvb3NpbmcuIFNldCBpblxuICogICAgZW1zLCBhc3N1bWluZyBhIGJyb3dzZXIgZGVmYXVsdCBvZiAxNnB4LlxuICogMi4gV29yayBvdXQgdGhlIHVuaXRsZXNzIGBsaW5lLWhlaWdodGAgZm9yIHlvdXIgcHJvamVjdCBiYXNlZCBhcm91bmQgeW91clxuICogICAgZGVzaXJlZCBgbGluZS1oZWlnaHRgIChkZWZpbmVkIHByZXZpb3VzbHkgaW4gcGl4ZWxzKSwgYW5kIHlvdXIgcHJvamVjdOKAmXNcbiAqICAgIGJhc2UgZm9udCBzaXplLlxuICovXG5odG1sIHtcbiAgZm9udC1zaXplOiAxLjVlbTtcbiAgLyogWzFdICovXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIC8qIFsyXSAqLyB9XG5cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjSEVBRElOR1NcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5oMSB7XG4gIGZvbnQtc2l6ZTogNDhweDtcbiAgZm9udC1zaXplOiAycmVtO1xuICBsaW5lLWhlaWdodDogMS41OyB9XG5cbmgyIHtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDE7IH1cblxuaDMge1xuICBmb250LXNpemU6IDMwcHg7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBsaW5lLWhlaWdodDogMS41OyB9XG5cbmg1IHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXNpemU6IDAuODMzMzNyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjg7IH1cblxuaDYge1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDI7IH1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjTElTVFNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG51bCwgb2wsIGRkIHtcbiAgbWFyZ2luLWxlZnQ6IDcycHg7XG4gIG1hcmdpbi1sZWZ0OiAzcmVtOyB9XG5cbmxpID4gdWwsXG5saSA+IG9sIHtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNQQVJBR1JBUEhTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBOb3Qgc3RyaWN0bHkgYSBwYXJhZ3JhcGgsIGJ1dCBwcm9iYWJseSBkb2VzbuKAmXQgbmVlZCBpdHMgb3duIHNlY3Rpb24uXG4gKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI0NPREVcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIDEuIEZpeCBhbiBvZGQgcXVpcmsgd2hlcmVieSwgd2l0aG91dCB0aGlzLCBjb2RlIGJsb2NrcyBhcmUgcmVuZGVyZWQgYXQgYVxuICogICAgZm9udC1zaXplIHNtYWxsZXIgdGhhbiAxZW0uXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiBbMV0gKi8gfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNRVU9URVNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIDEuIEhhbmcgdGhlIG9wZW5pbmcgcXVvdGUgb2YgdGhlIGJsb2NrcXVvdGUuXG4gKi9cbmJsb2NrcXVvdGUge1xuICB0ZXh0LWluZGVudDogLTAuNDFlbTtcbiAgLyogWzFdICovIH1cblxuLyoqXG4gKiBTZXQgdXAgcXVvdGUgbWFya3Mgb24gcXVvdGluZyBlbGVtZW50cy4gVGhpcyBpcyB2ZXJ5IEVuZ2xpc2gtYmFzZWQsIHNvIHdlIGFyZVxuICogdXNpbmcg4oCcLCDigJ0sIOKAmCwgYW5kIOKAmSBxdW90ZXMuXG4gKi9cbmJsb2NrcXVvdGUge1xuICBxdW90ZXM6IFwi4oCcXCIgXCLigJ1cIjtcbiAgbWFyZ2luLWxlZnQ6IDcycHg7XG4gIG1hcmdpbi1sZWZ0OiAzcmVtOyB9XG4gIGJsb2NrcXVvdGUgcDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwi4oCcXCI7XG4gICAgY29udGVudDogb3Blbi1xdW90ZTsgfVxuICBibG9ja3F1b3RlIHA6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgY29udGVudDogbm8tY2xvc2UtcXVvdGU7IH1cbiAgYmxvY2txdW90ZSBwOmxhc3Qtb2YtdHlwZTphZnRlciB7XG4gICAgY29udGVudDogXCLigJ1cIjtcbiAgICBjb250ZW50OiBjbG9zZS1xdW90ZTsgfVxuXG5xIHtcbiAgcXVvdGVzOiBcIuKAmFwiIFwi4oCZXCIgXCLigJxcIiBcIuKAnVwiO1xuICAvKipcbiAgICogSWYgYW4gZWxlbWVudCBvcGVucyB3aXRoIGFuIGlubGluZSBxdW90ZSwgbGV04oCZcyBoYW5nIHRoYXQuXG4gICAqLyB9XG4gIHE6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIuKAmFwiO1xuICAgIGNvbnRlbnQ6IG9wZW4tcXVvdGU7IH1cbiAgcTphZnRlciB7XG4gICAgY29udGVudDogXCLigJlcIjtcbiAgICBjb250ZW50OiBjbG9zZS1xdW90ZTsgfVxuICBxIHE6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIuKAnFwiO1xuICAgIGNvbnRlbnQ6IG9wZW4tcXVvdGU7IH1cbiAgcSBxOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIuKAnVwiO1xuICAgIGNvbnRlbnQ6IGNsb3NlLXF1b3RlOyB9XG4gIHE6Zmlyc3QtY2hpbGQge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB0ZXh0LWluZGVudDogLTAuMjJlbTsgfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNUQUJMRVNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIENydWRlIHRhYmxlIHN0eWxlczsgdGFibGVzIGFyZSB2ZXJ5IGRpZmZpY3VsdCB0byBrZWVwIG9uIHRoZSBiYXNlbGluZS5cbiAqL1xudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxudGgsXG50ZCB7XG4gIHBhZGRpbmc6IDE4cHg7IH1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuaHRtbCwgYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBcIkNocm9uaWNsZSBEaXNwbGF5IEFcIiwgXCJDaHJvbmljbGUgRGlzcGxheSBCXCI7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgY29sb3I6ICM0YzRjNGM7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMikge1xuICAgIGh0bWwsIGJvZHkge1xuICAgICAgZm9udC1zaXplOiA0MnB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgaHRtbCwgYm9keSB7XG4gICAgICBmb250LXNpemU6IDI0cHg7IH0gfVxuXG5oMSwgaDIsIGgzLFxuaDQsIGg1LCBoNiB7XG4gIGZvbnQtZmFtaWx5OiBcIkxhbmRtYXJrIFJlZ3VsYXIgQVwiLCBcIkxhbmRtYXJrIFJlZ3VsYXIgQlwiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuLypcbiogJExJTktTXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDsgfVxuICBhOmhvdmVyLCBhLmFjdGl2ZSB7XG4gICAgY29sb3I6ICNjZTZkN2M7IH1cblxuLmJsb2NrLWxpbmsge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4uc3RhbmRvdXQtbGluayB7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjNGM0YzRjOyB9XG4gIC5zdGFuZG91dC1saW5rOmhvdmVyIHtcbiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgI2NlNmQ3YzsgfVxuXG4ucnVsZSB7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgaGVpZ2h0OiAxcHg7XG4gIGJhY2tncm91bmQ6ICNkOWQ5ZDk7XG4gIC8qbWFyZ2luOiAkdHlwZWNzc2V0LWJhc2UtbGluZS1oZWlnaHQgMDsqL1xuICBtYXJnaW4tdG9wOiAzNnB4O1xuICBtYXJnaW4tYm90dG9tOiAzNnB4OyB9XG5cbi5ydWxlLS1zbWFsbCB7XG4gIGJhY2tncm91bmQ6ICNkOWQ5ZDk7XG4gIGJvcmRlcjogbm9uZTtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogMzZweCBhdXRvO1xuICBvdXRsaW5lOiBub25lO1xuICB3aWR0aDogMTAwcHg7IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBJQ09OU1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLmljb24ge1xuICB3aWR0aDogNTVweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSB7XG4gICAgLmljb24ge1xuICAgICAgd2lkdGg6IDExMHB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgLmljb24ge1xuICAgICAgd2lkdGg6IDMwcHg7IH0gfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEZPTlQgT1ZFUlJJREVTXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4uZnVuLWZvbnQge1xuICBmb250LWZhbWlseTogXCJMYW5kbWFyayBJbmxpbmUgQVwiLCBcIkxhbmRtYXJrIElubGluZSBCXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7IH1cblxuLmdpZ2EsIC5zaW5nbGUtaXRlbSBoZWFkZXIgaDEge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7IH1cblxuLm11dGVkLCAuZm9vdGVyIHtcbiAgY29sb3I6ICM3MjcyNzI7IH1cblxuLml0YWxpYyB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIExheW91dFxuICovXG5ib2R5IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIHBhZGRpbmc6IDEwcHggMzZweDsgfVxuXG5tYWluIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBmbGV4OiAxO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTsgfVxuICBtYWluOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiBcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjbGVhcjogYm90aDsgfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIExBWU9VVCBPVkVSUklERVNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5zbWFsbC1tYXJnaW4tYm90dG9tIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDsgfVxuXG4ubm8tbWFyZ2luLWJvdHRvbSB7XG4gIG1hcmdpbi1ib3R0b206IDA7IH1cblxuLmxlZnQtYWxpZ24ge1xuICBtYXJnaW4tbGVmdDogMDsgfVxuXG4uY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5zcGFjZXIge1xuICBtYXJnaW4tYm90dG9tOiAzNnB4OyB9XG5cbi8qXG4qIFNraW5ueSBzZWN0aW9uc1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLnNraW5ueSwgLm1ldGEsIC5zaW5nbGUtaXRlbSBhcnRpY2xlLCAuc2luZ2xlLWl0ZW0gaGVhZGVyIGgxIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgICAuc2tpbm55LCAubWV0YSwgLnNpbmdsZS1pdGVtIGFydGljbGUsIC5zaW5nbGUtaXRlbSBoZWFkZXIgaDEge1xuICAgICAgbWF4LXdpZHRoOiA3MDBweDsgfSB9XG5cbi8qXG4qIEFydGljbGVcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5hcnRpY2xlIHtcbiAgbWFyZ2luLWJvdHRvbTogMzZweDsgfVxuXG4vKlxuKiBHZW5lcmFsIFNlY3Rpb25cbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKlxuICogTW9kdWxlc1xuICovXG4uZ3JpZCB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgLypkaXNwbGF5OiBtYXAtZ2V0KCRzZXR0aW5ncywgZGlzcGxheSk7Ki8gfVxuICAuZ3JpZDphZnRlciB7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY2xlYXI6IGJvdGg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gIC5ncmlkLS1jZW50ZXJlZCAuZ3JpZC0tbGVmdCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgLmdyaWQtLTEtNCB7XG4gICAgd2lkdGg6IDIzLjQwNDI2JTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tcmlnaHQ6IDIuMTI3NjYlO1xuICAgIGxpbmUtaGVpZ2h0OiAxOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gIC5ncmlkLS0yLTMge1xuICAgIHdpZHRoOiA2NS45NTc0NSU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLXJpZ2h0OiAyLjEyNzY2JTtcbiAgICBsaW5lLWhlaWdodDogMTsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAuZ3JpZC0tMS0yIHtcbiAgICB3aWR0aDogNDguOTM2MTclO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbi1yaWdodDogMi4xMjc2NiU7XG4gICAgbGluZS1oZWlnaHQ6IDE7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgLmdyaWQtLXB1c2gtMS00IHtcbiAgICBtYXJnaW4tbGVmdDogMjUuNTMxOTElOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gIC5ncmlkLS1wdXNoLTEtMyB7XG4gICAgbWFyZ2luLWxlZnQ6IDM0LjA0MjU1JTsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAuZ3JpZC0tbGFzdCB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIG1hcmdpbi1yaWdodDogMDsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogJE5BVklHQVRJT05cbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5tYWluLW5hdiB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMTUwcHg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgLypwYWRkaW5nLWJvdHRvbTogJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0OyovXG4gIC8qQGluY2x1ZGUgYnJlYWtwb2ludCgkcmV0aW5hKSB7Ki9cbiAgLypoZWlnaHQ6ICRuYXYtaGVpZ2h0ICogNDsqL1xuICAvKn0qLyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgIC5tYWluLW5hdiB7XG4gICAgICAvKmZvbnQtc2l6ZTogJHR5cGVjc3NldC1iYXNlLWZvbnQtc2l6ZTsqL1xuICAgICAgaGVpZ2h0OiA3NXB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgLm1haW4tbmF2IGEge1xuICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICB3aWR0aDogYXV0bzsgfSB9XG4gIC5tYWluLW5hdiAuc2l0ZS1sb2dvIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBvcmRlcjogMjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAvKnotaW5kZXg6IDI7Ki8gfVxuICAgIC5tYWluLW5hdiAuc2l0ZS1sb2dvIGltZyB7XG4gICAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0OyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgICAgLm1haW4tbmF2IC5zaXRlLWxvZ28gaW1nIHtcbiAgICAgICAgICBtYXgtd2lkdGg6IDM1cHg7IH0gfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgICAgLm1haW4tbmF2IC5zaXRlLWxvZ28ge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICAgIC8qbGluZS1oZWlnaHQ6ICRuYXYtaGVpZ2h0ICogMjsqL1xuICAgICAgICBvcmRlcjogMDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICB3aWR0aDogYXV0bzsgfSB9XG4gIC5tYWluLW5hdiAubWFpbi1uYXZfX3RvZ2dsZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gICAgd2lkdGg6IDI1JTtcbiAgICB6LWluZGV4OiAyOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgICAubWFpbi1uYXYgLm1haW4tbmF2X190b2dnbGUge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgLm1haW4tbmF2IC5kcm9wZG93biB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgICAgLm1haW4tbmF2IC5kcm9wZG93biB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gIC5tYWluLW5hdl9fYnJlYWstcmlnaHQge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvOyB9IH1cblxuLm1haW4tbmF2X19tZW51IHtcbiAgLypmb250LXNpemU6ICR0eXBlY3NzZXQtaDEtc2l6ZTsqL1xuICBsZWZ0OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTYwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiAtMTtcbiAgLypAaW5jbHVkZSBicmVha3BvaW50KCRyZXRpbmEpIHsqL1xuICAvKmZvbnQtc2l6ZTogJHR5cGVjc3NldC1iYXNlLWZvbnQtc2l6ZSAqIDY7Ki9cbiAgLyp9Ki8gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgICAubWFpbi1uYXZfX21lbnUge1xuICAgICAgYW5pbWF0aW9uOiBub25lO1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgb3BhY2l0eTogMTtcbiAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIHotaW5kZXg6IDE7IH0gfVxuICAubWFpbi1uYXZfX21lbnUgPiBhIHtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2Q5ZDlkOTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDQ4cHg7XG4gICAgb3BhY2l0eTogMDtcbiAgICBwYWRkaW5nOiAzNnB4O1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLm1haW4tbmF2X19tZW51ID4gYTpudGgtY2hpbGQoMSkge1xuICAgICAgYW5pbWF0aW9uLW5hbWU6IHNsaWRlLXVwO1xuICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAzMDBtcztcbiAgICAgIGFuaW1hdGlvbi1kZWxheTogMTAwbXM7XG4gICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuICAgIC5tYWluLW5hdl9fbWVudSA+IGE6bnRoLWNoaWxkKDIpIHtcbiAgICAgIGFuaW1hdGlvbi1uYW1lOiBzbGlkZS11cDtcbiAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMzAwbXM7XG4gICAgICBhbmltYXRpb24tZGVsYXk6IDIwMG1zO1xuICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7IH1cbiAgICAubWFpbi1uYXZfX21lbnUgPiBhOm50aC1jaGlsZCgzKSB7XG4gICAgICBhbmltYXRpb24tbmFtZTogc2xpZGUtdXA7XG4gICAgICBhbmltYXRpb24tZHVyYXRpb246IDMwMG1zO1xuICAgICAgYW5pbWF0aW9uLWRlbGF5OiAzMDBtcztcbiAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzOyB9XG4gICAgLm1haW4tbmF2X19tZW51ID4gYTpmaXJzdC1jaGlsZCB7XG4gICAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2Q5ZDlkOTsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgICAgIC5tYWluLW5hdl9fbWVudSA+IGE6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgIGJvcmRlcjogbm9uZTsgfSB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgICAubWFpbi1uYXZfX21lbnUgPiBhIHtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xuICAgICAgICB3aWR0aDogYXV0bzsgfVxuICAgICAgICAubWFpbi1uYXZfX21lbnUgPiBhOm50aC1jaGlsZCgxKSB7XG4gICAgICAgICAgYW5pbWF0aW9uLW5hbWU6IG5vbmU7XG4gICAgICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiBub25lO1xuICAgICAgICAgIGFuaW1hdGlvbi1kZWxheTogMTAwbXM7XG4gICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7IH1cbiAgICAgICAgLm1haW4tbmF2X19tZW51ID4gYTpudGgtY2hpbGQoMikge1xuICAgICAgICAgIGFuaW1hdGlvbi1uYW1lOiBub25lO1xuICAgICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogbm9uZTtcbiAgICAgICAgICBhbmltYXRpb24tZGVsYXk6IDIwMG1zO1xuICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzOyB9XG4gICAgICAgIC5tYWluLW5hdl9fbWVudSA+IGE6bnRoLWNoaWxkKDMpIHtcbiAgICAgICAgICBhbmltYXRpb24tbmFtZTogbm9uZTtcbiAgICAgICAgICBhbmltYXRpb24tZHVyYXRpb246IG5vbmU7XG4gICAgICAgICAgYW5pbWF0aW9uLWRlbGF5OiAzMDBtcztcbiAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfSB9XG5cbi5tYWluLW5hdl9fc29jaWFsIHtcbiAgYW5pbWF0aW9uOiBzbGlkZS1vdXQtdG8tbGVmdCAzMDBtcyBmb3J3YXJkcztcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgLm1haW4tbmF2X19zb2NpYWwge1xuICAgICAgYW5pbWF0aW9uOiBub25lO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgd2lkdGg6IGF1dG87IH0gfVxuICAubWFpbi1uYXZfX3NvY2lhbCA+IGEge1xuICAgIGZsZXg6IDE7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgICAubWFpbi1uYXZfX3NvY2lhbCA+IGEge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHdpZHRoOiBhdXRvOyB9IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBPUEVOIE5BVklHQVRJT05cbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbm1haW4gPiBzZWN0aW9uIHtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAzMDBtcztcbiAgei1pbmRleDogMTsgfVxuXG4ubWFpbi1uYXYtLWNsb3NlZCAubWFpbi1uYXZfX21lbnUgYSB7XG4gIG9wYWNpdHk6IDE7XG4gIHotaW5kZXg6IC0xOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgIC5tYWluLW5hdi0tY2xvc2VkIC5tYWluLW5hdl9fbWVudSBhIHtcbiAgICAgIHotaW5kZXg6IDE7IH0gfVxuXG4ubWFpbi1uYXYtLW9wZW4gLm1haW4tbmF2X19zb2NpYWwsXG4ubWFpbi1uYXYtLW9wZW4gLm1haW4tbmF2X19tZW51IHtcbiAgei1pbmRleDogMTsgfVxuLm1haW4tbmF2LS1vcGVuIC5tYWluLW5hdl9fbWVudSBhOm50aC1jaGlsZCgxKSB7XG4gIGFuaW1hdGlvbi1uYW1lOiBzbGlkZS1kb3duO1xuICBhbmltYXRpb24tZHVyYXRpb246IDMwMG1zO1xuICBhbmltYXRpb24tZGVsYXk6IDEwMG1zO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuLm1haW4tbmF2LS1vcGVuIC5tYWluLW5hdl9fbWVudSBhOm50aC1jaGlsZCgyKSB7XG4gIGFuaW1hdGlvbi1uYW1lOiBzbGlkZS1kb3duO1xuICBhbmltYXRpb24tZHVyYXRpb246IDMwMG1zO1xuICBhbmltYXRpb24tZGVsYXk6IDIwMG1zO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuLm1haW4tbmF2LS1vcGVuIC5tYWluLW5hdl9fbWVudSBhOm50aC1jaGlsZCgzKSB7XG4gIGFuaW1hdGlvbi1uYW1lOiBzbGlkZS1kb3duO1xuICBhbmltYXRpb24tZHVyYXRpb246IDMwMG1zO1xuICBhbmltYXRpb24tZGVsYXk6IDMwMG1zO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuLm1haW4tbmF2LS1vcGVuIC5tYWluLW5hdl9fc29jaWFsIHtcbiAgYW5pbWF0aW9uOiBzbGlkZS1pbi1mcm9tLWxlZnQgMjAwbXMgZm9yd2FyZHM7IH1cbi5tYWluLW5hdi0tb3BlbiAuc2l0ZS1sb2dvIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuLm1haW4tbmF2LS1vcGVuID4gc2VjdGlvbiB7XG4gIG9wYWNpdHk6IDAuMTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAtMTsgfVxuXG4uc25pcHBldCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAzNnB4OyB9XG4gIC5zbmlwcGV0IC5zbmlwcGV0X190YWdsaW5lIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gIC5zbmlwcGV0IC5zbmlwcGV0X19pdGVtIHtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuLnRhZ2xpbmUge1xuICBmb250LWZhbWlseTogXCJMYW5kbWFyayBJbmxpbmUgQVwiLCBcIkxhbmRtYXJrIElubGluZSBCXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogNDhweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC50YWdsaW5lIC50YWdsaW5lX19pdGVtIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgIC50YWdsaW5lIHtcbiAgICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH0gfVxuXG4uYXZhdGFyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAzNnB4O1xuICBmb250LXNpemU6IDE2LjhweDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSB7XG4gICAgLmF2YXRhciB7XG4gICAgICBmb250LXNpemU6IDI5LjRweDsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgIC5hdmF0YXIge1xuICAgICAgbWFyZ2luLWJvdHRvbTogYXV0bztcbiAgICAgIGZvbnQtc2l6ZTogMTYuOHB4OyB9IH1cblxuLmF2YXRhcl9faW1hZ2Uge1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIG1heC13aWR0aDogNTAlO1xuICBtYXJnaW4tYm90dG9tOiAzNnB4OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgIC5hdmF0YXJfX2ltYWdlIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICBtYXgtd2lkdGg6IDkwcHg7IH0gfVxuXG4uYXZhdGFyX19zdW1tYXJ5IHtcbiAgLypmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemU7Ki9cbiAgLypmb250LXNpemU6ICRzbWFsbC1mb250OyovIH1cblxuLmF2YXRhcl9fc3VtbWFyeV9faXRlbSB7XG4gIG1hcmdpbi1ib3R0b206IDVweDsgfVxuXG4uYXZhdGFyX19zdW1tYXJ5X19wb3NpdGlvbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICREUk9QRE9XTlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi5kcm9wZG93biB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5kcm9wZG93biA+IHVsIHtcbiAgICBiYWNrZ3JvdW5kOiAjZjlmOWY5O1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBtYXJnaW46IDA7XG4gICAgbWluLXdpZHRoOiAxMDBweDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHJpZ2h0OiAwOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgICAuZHJvcGRvd24gPiB1bDpiZWZvcmUsIC5kcm9wZG93biA+IHVsOmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLXRvcDogMTBweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMTBweCBzb2xpZCAjZjlmOWY5O1xuICAgICAgICBib3JkZXItbGVmdDogMTBweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAxMHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICAgIHRvcDogLTIwcHg7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgfSB9XG4gICAgLmRyb3Bkb3duID4gdWw6YWZ0ZXIge1xuICAgICAgdG9wOiAtMjFweDtcbiAgICAgIGJvcmRlci1ib3R0b206IDEwcHggc29saWQgIzRjNGM0YztcbiAgICAgIHotaW5kZXg6IC0xOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgICAuZHJvcGRvd24gPiB1bCB7XG4gICAgICAgIHRvcDogMTI1JTtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjNGM0YzRjO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9IH1cbiAgICAuZHJvcGRvd24gPiB1bCBsaSB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC5kcm9wZG93biA+IHVsIGEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgICAgLmRyb3Bkb3duID4gdWwgYSB7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICAgIHBhZGRpbmc6IDEwcHg7IH1cbiAgICAgICAgICAuZHJvcGRvd24gPiB1bCBhOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNjZTZkN2M7XG4gICAgICAgICAgICBjb2xvcjogI2Y5ZjlmOTsgfSB9XG5cbi5kcm9wZG93bjpob3ZlciB1bCB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogVEFCTEVTIVxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xudGFibGUge1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbmNhcHRpb24ge1xuICBmb250LWZhbWlseTogXCJMYW5kbWFyayBSZWd1bGFyIEFcIiwgXCJMYW5kbWFyayBSZWd1bGFyIEJcIjtcbiAgZm9udC1zaXplOiA0OHB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbnRoIHtcbiAgYmFja2dyb3VuZDogI2NlNmQ3YztcbiAgY29sb3I6ICNmOWY5Zjk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcGFkZGluZzogMDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAyMDBtczsgfVxuICB0aCBhIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogMTBweDsgfVxuICAgIHRoIGE6aG92ZXIge1xuICAgICAgY29sb3I6ICNmOWY5Zjk7IH1cbiAgdGg6Zmlyc3QtY2hpbGQge1xuICAgIGJvcmRlci1yYWRpdXM6IDNweCAwIDAgMDsgfVxuICB0aDpsYXN0LWNoaWxkIHtcbiAgICBib3JkZXItcmFkaXVzOiAwIDNweCAwIDA7IH1cbiAgdGg6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICNjMTQ3NWE7IH1cbiAgICB0aDpob3ZlciBhIHtcbiAgICAgIGNvbG9yOiAjZjlmOWY5OyB9XG5cbnRib2R5IHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkOWQ5ZDk7IH1cbiAgdGJvZHkgdHI6bnRoLWNoaWxkKDJuIC0gMSkge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjE3LCAyMTcsIDIxNywgMC4yKTsgfVxuXG4udGFibGUtcm93LWVudGVyIHtcbiAgb3BhY2l0eTogMC4wMTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwcHgsIDAsIDApO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDMwMG1zLCB0cmFuc2Zvcm0gMzAwbXM7IH1cblxuLnRhYmxlLXJvdy1lbnRlci50YWJsZS1yb3ctZW50ZXItYWN0aXZlIHtcbiAgb3BhY2l0eTogMTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTsgfVxuXG4udGFibGUtcm93LWxlYXZlIHtcbiAgb3BhY2l0eTogMTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAzMDBtcywgdHJhbnNmb3JtIDMwMG1zOyB9XG5cbi50YWJsZS1yb3ctbGVhdmUudGFibGUtcm93LWxlYXZlLWFjdGl2ZSB7XG4gIG9wYWNpdHk6IDAuMDE7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMHB4LCAwLCAwKTsgfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEFMRVJUU1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLmFsZXJ0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzRjNGM0YztcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW46IDEwcHggYXV0bztcbiAgbWF4LXdpZHRoOiAzMDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDMwMG1zLCBvcGFjaXR5IDMwMG1zLCBtYXgtaGVpZ2h0IDMwMG1zOyB9XG4gIC5hbGVydCBhIHtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDsgfVxuICAuYWxlcnQgYSxcbiAgLmFsZXJ0IGltZyB7XG4gICAgbWluLXdpZHRoOiAyMHB4O1xuICAgIHBhZGRpbmc6IDEwcHg7IH1cbiAgLmFsZXJ0IGltZyB7XG4gICAgYmFja2dyb3VuZDogI2NlNmQ3YzsgfVxuXG4uYWxlcnQtLXdhcm5pbmcge1xuICBiYWNrZ3JvdW5kOiAjRkZGQkQzOyB9XG4gIC5hbGVydC0td2FybmluZzpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjZhMDsgfVxuXG4uYWxlcnQtLWVycm9yIHtcbiAgYmFja2dyb3VuZDogI2E1MzczNztcbiAgY29sb3I6ICNmOWY5Zjk7IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBTVU1NQVJZIExJU1RcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5zdW1tYXJ5LWxpc3Qge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDIxNywgMjE3LCAyMTcsIDAuMik7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgIC5zdW1tYXJ5LWxpc3Qge1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsgfSB9XG4gIC5zdW1tYXJ5LWxpc3QgaDIge1xuICAgIC8qZm9udC1zaXplOiAkdHlwZWNzc2V0LWJhc2UtZm9udC1zaXplOyovXG4gICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAuc3VtbWFyeS1saXN0IGxpIHtcbiAgICBmbGV4OiAxO1xuICAgIHBhZGRpbmc6IDEwcHg7IH1cbiAgLnN1bW1hcnktbGlzdCBwIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogTUVUQVxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLm1ldGEge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LXNpemU6IDE2LjhweDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSB7XG4gICAgLm1ldGEge1xuICAgICAgZm9udC1zaXplOiA0MnB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgLm1ldGEge1xuICAgICAgZm9udC1zaXplOiAyNHB4OyB9IH1cblxuLm1ldGFfX2l0ZW0ge1xuICAvKmJhY2tncm91bmQ6IHJnYmEoJGdyZXksIDAuMik7Ki9cbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBmbGV4OiAxO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7IH1cblxuLm1ldGFfX2hlYWRlciB7XG4gIGZvbnQtc2l6ZTogMTYuOHB4O1xuICBtYXJnaW4tYm90dG9tOiA1cHg7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMikge1xuICAgIC5tZXRhX19oZWFkZXIge1xuICAgICAgZm9udC1zaXplOiA0MnB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgLm1ldGFfX2hlYWRlciB7XG4gICAgICBmb250LXNpemU6IDM2cHg7IH0gfVxuXG4ubWV0YV9fdmFsdWUge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBTSU5HTEUgSVRFTVxuKiBUaGlzIGlzIGZvciBsb25nIGZvcm0gaXRlbXMgXG4qIGFzIHNlZW4gaW4gYSBwb3N0IG9yIHByb2plY3RcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5zaW5nbGUtaXRlbSBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7IH1cblxuLypcbiogU2luZ2xlIGl0ZW0gc2VjdGlvbnNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5zaW5nbGUtaXRlbSB7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG5cbi5zaW5nbGUtaXRlbSBoZWFkZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgIC5zaW5nbGUtaXRlbSBoZWFkZXIge1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsgfSB9XG4gIC5zaW5nbGUtaXRlbSBoZWFkZXIgaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDM2cHggYXV0bzsgfVxuICAuc2luZ2xlLWl0ZW0gaGVhZGVyIC5hc2lkZS0xLFxuICAuc2luZ2xlLWl0ZW0gaGVhZGVyIC5hc2lkZS0yIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgIC5zaW5nbGUtaXRlbSBoZWFkZXIgLmFzaWRlLTEgbGk6YWZ0ZXIsXG4gICAgICAuc2luZ2xlLWl0ZW0gaGVhZGVyIC5hc2lkZS0yIGxpOmFmdGVyIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGluaGVyaXQ7XG4gICAgICAgIG1hcmdpbi1yaWdodDogaW5oZXJpdDsgfSB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgICAuc2luZ2xlLWl0ZW0gaGVhZGVyIC5hc2lkZS0xLFxuICAgICAgLnNpbmdsZS1pdGVtIGhlYWRlciAuYXNpZGUtMiB7XG4gICAgICAgIHRleHQtYWxpZ246IGluaGVyaXQ7XG4gICAgICAgIHdpZHRoOiBhdXRvOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgLnNpbmdsZS1pdGVtIGhlYWRlciAuYXNpZGUtMSB7XG4gICAgICBvcmRlcjogMTsgfVxuICAgICAgLnNpbmdsZS1pdGVtIGhlYWRlciAuYXNpZGUtMSBsaTphZnRlciB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvOyB9IH1cbiAgLnNpbmdsZS1pdGVtIGhlYWRlciAuYXNpZGUtMiB7XG4gICAgb3JkZXI6IDM7IH1cbiAgLnNpbmdsZS1pdGVtIGhlYWRlciBoMSB7XG4gICAgbGluZS1oZWlnaHQ6IDE7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgIC5zaW5nbGUtaXRlbSBoZWFkZXIgaDEge1xuICAgICAgICBtaW4td2lkdGg6IDcwMHB4O1xuICAgICAgICBvcmRlcjogMjsgfSB9XG5cbi8qXG5cbk9yZ2luYWwgU3R5bGUgZnJvbSBldGhhbnNjaG9vbm92ZXIuY29tL3NvbGFyaXplZCAoYykgSmVyZW15IEh1bGxcbjxzb3VyZHJ1bXNAZ21haWwuY29tPlxuXG4gKi9cbi5obGpzLFxucHJlIGNvZGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3ZlcmZsb3cteDogYXV0bztcbiAgcGFkZGluZzogMC41ZW07XG4gIGJhY2tncm91bmQ6ICMwMDJiMzY7XG4gIGNvbG9yOiAjODM5NDk2O1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7IH1cblxuY29kZSB7XG4gIGJhY2tncm91bmQ6ICMwMDJiMzY7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgY29sb3I6ICM4MzkzOTY7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1zaXplOiAxNi44cHg7XG4gIG1hcmdpbjogMCAwLjJlbTtcbiAgcGFkZGluZzogMC4yZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMikge1xuICAgIGNvZGUge1xuICAgICAgZm9udC1zaXplOiAyOS40cHg7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgICBjb2RlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTYuOHB4OyB9IH1cblxuLmhsanMtY29tbWVudCxcbi5kaWZmIC5obGpzLWhlYWRlcixcbi5obGpzLWRvY3R5cGUsXG4uaGxqcy1waSxcbi5saXNwIC5obGpzLXN0cmluZyxcbi5obGpzLWphdmFkb2Mge1xuICBjb2xvcjogIzU4NmU3NTsgfVxuXG4vKiBTb2xhcml6ZWQgR3JlZW4gKi9cbi5obGpzLWtleXdvcmQsXG4uaGxqcy13aW51dGlscyxcbi5tZXRob2QsXG4uaGxqcy1hZGRpdGlvbixcbi5jc3MgLmhsanMtdGFnLFxuLmhsanMtcmVxdWVzdCxcbi5obGpzLXN0YXR1cyxcbi5uZ2lueCAuaGxqcy10aXRsZSB7XG4gIGNvbG9yOiAjODU5OTAwOyB9XG5cbi8qIFNvbGFyaXplZCBDeWFuICovXG4uaGxqcy1udW1iZXIsXG4uaGxqcy1jb21tYW5kLFxuLmhsanMtc3RyaW5nLFxuLmhsanMtdGFnIC5obGpzLXZhbHVlLFxuLmhsanMtcnVsZXMgLmhsanMtdmFsdWUsXG4uaGxqcy1waHBkb2MsXG4uaGxqcy1kYXJ0ZG9jLFxuLnRleCAuaGxqcy1mb3JtdWxhLFxuLmhsanMtcmVnZXhwLFxuLmhsanMtaGV4Y29sb3IsXG4uaGxqcy1saW5rX3VybCB7XG4gIGNvbG9yOiAjMmFhMTk4OyB9XG5cbi8qIFNvbGFyaXplZCBCbHVlICovXG4uaGxqcy10aXRsZSxcbi5obGpzLWxvY2FsdmFycyxcbi5obGpzLWNodW5rLFxuLmhsanMtZGVjb3JhdG9yLFxuLmhsanMtYnVpbHRfaW4sXG4uaGxqcy1pZGVudGlmaWVyLFxuLnZoZGwgLmhsanMtbGl0ZXJhbCxcbi5obGpzLWlkLFxuLmNzcyAuaGxqcy1mdW5jdGlvbiB7XG4gIGNvbG9yOiAjMjY4YmQyOyB9XG5cbi8qIFNvbGFyaXplZCBZZWxsb3cgKi9cbi5obGpzLWF0dHJpYnV0ZSxcbi5obGpzLXZhcmlhYmxlLFxuLmxpc3AgLmhsanMtYm9keSxcbi5zbWFsbHRhbGsgLmhsanMtbnVtYmVyLFxuLmhsanMtY29uc3RhbnQsXG4uaGxqcy1jbGFzcyAuaGxqcy10aXRsZSxcbi5obGpzLXBhcmVudCxcbi5obGpzLXR5cGUsXG4uaGxqcy1saW5rX3JlZmVyZW5jZSB7XG4gIGNvbG9yOiAjYjU4OTAwOyB9XG5cbi8qIFNvbGFyaXplZCBPcmFuZ2UgKi9cbi5obGpzLXByZXByb2Nlc3Nvcixcbi5obGpzLXByZXByb2Nlc3NvciAuaGxqcy1rZXl3b3JkLFxuLmhsanMtcHJhZ21hLFxuLmhsanMtc2hlYmFuZyxcbi5obGpzLXN5bWJvbCxcbi5obGpzLXN5bWJvbCAuaGxqcy1zdHJpbmcsXG4uZGlmZiAuaGxqcy1jaGFuZ2UsXG4uaGxqcy1zcGVjaWFsLFxuLmhsanMtYXR0cl9zZWxlY3Rvcixcbi5obGpzLXN1YnN0LFxuLmhsanMtY2RhdGEsXG4uY3NzIC5obGpzLXBzZXVkbyxcbi5obGpzLWhlYWRlciB7XG4gIGNvbG9yOiAjY2I0YjE2OyB9XG5cbi8qIFNvbGFyaXplZCBSZWQgKi9cbi5obGpzLWRlbGV0aW9uLFxuLmhsanMtaW1wb3J0YW50IHtcbiAgY29sb3I6ICNkYzMyMmY7IH1cblxuLyogU29sYXJpemVkIFZpb2xldCAqL1xuLmhsanMtbGlua19sYWJlbCB7XG4gIGNvbG9yOiAjNmM3MWM0OyB9XG5cbi50ZXggLmhsanMtZm9ybXVsYSB7XG4gIGJhY2tncm91bmQ6ICMwNzM2NDI7IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBGT1JNU1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuZm9ybSB7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5mb3JtLXJvdyB7XG4gIG1hcmdpbi1ib3R0b206IDM2cHg7IH1cbiAgLmZvcm0tcm93IGxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDM2cHg7IH1cbiAgLmZvcm0tcm93IGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICAuZm9ybS1yb3cgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuICAuZm9ybS1yb3cgdGV4dGFyZWEge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkOWQ5ZDk7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBmb250LWZhbWlseTogXCJDaHJvbmljbGUgRGlzcGxheSBBXCIsIFwiQ2hyb25pY2xlIERpc3BsYXkgQlwiO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLmZvcm0tcm93IHRleHRhcmVhIHtcbiAgICBtaW4taGVpZ2h0OiA1MDBweDsgfVxuXG4uY2hlY2tib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuLmNoZWNrYm94IGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG4gIG9wYWNpdHk6IDA7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB6LWluZGV4OiAxMDA7IH1cblxuLmNoZWNrYm94IGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbi5jaGVja2JveCBsYWJlbDo6YmVmb3JlIHtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDA7XG4gIG1hcmdpbi10b3A6IC0yNXB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kOiAjYTUzNzM3OyB9XG5cbi5jaGVja2JveCBsYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAwIDAgMCA4MHB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiByZ2JhKDc2LCA3NiwgNzYsIDAuNyk7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3M7IH1cbiAgLmNoZWNrYm94IGxhYmVsOmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgYm9yZGVyOiA0cHggc29saWQgIzRjNGM0YztcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MsIGJhY2tncm91bmQgMjAwbXM7IH1cblxuLmNoZWNrYm94XG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06Y2hlY2tlZFxuKyBsYWJlbCB7XG4gIGNvbG9yOiAjNGM0YzRjOyB9XG5cbi5jaGVja2JveFxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWRcbisgbGFiZWw6OmJlZm9yZSB7XG4gIG9wYWNpdHk6IDAuODtcbiAgYmFja2dyb3VuZDogIzM5YWM1MjsgfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIFRBQlNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi50YWJzLW5hdmlnYXRpb24ge1xuICBib3gtc2hhZG93OiBpbnNldCAwIC0ycHggI2Q5ZDlkOTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XG4gIC50YWJzLW5hdmlnYXRpb24gYSB7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAtMnB4ICNiMmIyYjI7XG4gICAgY29sb3I6ICNiMmIyYjI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxleDogMTtcbiAgICBmb250LWZhbWlseTogXCJMYW5kbWFyayBSZWd1bGFyIEFcIiwgXCJMYW5kbWFyayBSZWd1bGFyIEJcIjtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgcGFkZGluZzogNXB4IDEwcHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zLCBib3gtc2hhZG93IDMwMG1zOyB9XG4gICAgLnRhYnMtbmF2aWdhdGlvbiBhOm5vdCgudGFicy1tZW51LWl0ZW0tLWFjdGl2ZSk6aG92ZXIge1xuICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAtMnB4ICM0YzRjNGM7XG4gICAgICBjb2xvcjogIzRjNGM0YzsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgICAgLnRhYnMtbmF2aWdhdGlvbiBhIHtcbiAgICAgICAgbWF4LXdpZHRoOiAyMDBweDsgfSB9XG4gIC50YWJzLW5hdmlnYXRpb24gLnRhYnMtbWVudS1pdGVtLS1hY3RpdmUge1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTJweCAjY2U2ZDdjO1xuICAgIGNvbG9yOiAjY2U2ZDdjOyB9XG5cbi50YWItcGFuZWwge1xuICBwYWRkaW5nOiAzNnB4IDA7IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBUQUdTXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4udGFnLWxpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW4tdG9wOiAxMHB4OyB9XG4gIC50YWctbGlzdCAudGFnIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmFlYWQ0O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM0YzRjNGM7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcywgdGV4dC1kZWNvcmF0aW9uIDMwMG1zO1xuICAgIG1pbi13aWR0aDogMTAwcHg7IH1cbiAgICAudGFnLWxpc3QgLnRhZzpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogIzRjNGM0YztcbiAgICAgIGNvbG9yOiAjZjlmOWY5O1xuICAgICAgY29udGVudDogXCLDl1wiO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICBwYWRkaW5nOiAwIDEwcHg7IH1cbiAgLnRhZy1saXN0IC50YWctLWRlbGV0ZSB7XG4gICAgY29sb3I6ICNhNTM3Mzc7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7IH1cblxuLnRhZy1saXN0LS1jb21tYSA+IGEge1xuICAvKmZvbnQtc2l6ZTogJHNtYWxsLWZvbnQ7Ki8gfVxuICAudGFnLWxpc3QtLWNvbW1hID4gYTphZnRlciB7XG4gICAgY29udGVudDogXCIsXFwwMGEwXCI7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIC50YWctbGlzdC0tY29tbWEgPiBhOmxhc3QtY2hpbGQ6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBCVVRUT05TXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4uYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogI2NlNmQ3YztcbiAgYm9yZGVyOiAxcHggc29saWQgIzRjNGM0YztcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBjb2xvcjogI2Y5ZjlmOTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LWZhbWlseTogXCJDaHJvbmljbGUgRGlzcGxheSBBXCIsIFwiQ2hyb25pY2xlIERpc3BsYXkgQlwiO1xuICBmb250LXNpemU6IDI0cHg7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHBhZGRpbmc6IDEwcHggMzZweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAzMDBtczsgfVxuICAuYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjYzE0NzVhOyB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogJENMT1VEXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4uY2xvdWQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmNsb3VkIGEge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwYWRkaW5nOiAxMHB4OyB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogJEZPT1RFUlxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLmZvb3Rlci1jb250YWluZXIge1xuICBoZWlnaHQ6IDgwcHg7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgICAuZm9vdGVyLWNvbnRhaW5lcjpob3ZlcjpiZWZvcmUge1xuICAgICAgd2lkdGg6IDgwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjY2U2ZDdjOyB9XG4gICAgLmZvb3Rlci1jb250YWluZXI6YmVmb3JlIHtcbiAgICAgIHRyYW5zaXRpb246IHdpZHRoIDMwMG1zLCBiYWNrZ3JvdW5kIDMwMG1zO1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgbWFyZ2luOiAxMHB4IGF1dG87XG4gICAgICB3aWR0aDogNTBweDtcbiAgICAgIGhlaWdodDogMXB4O1xuICAgICAgYmFja2dyb3VuZDogI2Q5ZDlkOTsgfSB9XG5cbi5mb290ZXIge1xuICAvKkBpbmNsdWRlIGNsZWFyZml4OyovXG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDE2LjhweDsgfVxuICAuZm9vdGVyIFtkYXRhLWljb25dOmJlZm9yZSB7XG4gICAgLypmb250LXNpemU6ICR0eXBlY3NzZXQtaDMtc2l6ZTsqL1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgIC5mb290ZXIgW2RhdGEtaWNvbl06YmVmb3JlIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICAvKmZvbnQtc2l6ZTogJHR5cGVjc3NldC1oNC1zaXplOyovIH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSB7XG4gICAgLmZvb3RlciB7XG4gICAgICBmb250LXNpemU6IDQycHg7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgICAuZm9vdGVyIHtcbiAgICAgIGZvbnQtc2l6ZTogMTYuOHB4OyB9IH1cbiAgLmZvb3RlciBhIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJhY2tncm91bmQ6ICNmOWY5Zjk7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkOWQ5ZDk7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgIC5mb290ZXIgYSB7XG4gICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgcGFkZGluZzogNXB4OyB9IH1cbiAgLmZvb3RlciB1bCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgICAgLmZvb3RlciB1bCBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfSB9XG4gIC5mb290ZXIgLmZvb3Rlcl9fY29weXJpZ2h0IHtcbiAgICBmb250LXNpemU6IDE2LjhweDtcbiAgICBib3JkZXItdG9wOiBub25lOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMikge1xuICAgICAgLmZvb3RlciAuZm9vdGVyX19jb3B5cmlnaHQge1xuICAgICAgICBmb250LXNpemU6IDI5LjRweDsgfSB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgICAuZm9vdGVyIC5mb290ZXJfX2NvcHlyaWdodCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogTE9BREVSXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4ubG9hZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5sb2FkZXI6YmVmb3JlLCAubG9hZGVyOmFmdGVyIHtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgY29udGVudDogJyc7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAyMDBtczsgfVxuICAubG9hZGVyOmJlZm9yZSB7XG4gICAgYW5pbWF0aW9uOiByb3RhdGlvbiAxLjBzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICAgIGJvcmRlci1sZWZ0OiA4cHggc29saWQgIzRjNGM0YztcbiAgICBib3JkZXItcmlnaHQ6IDhweCBzb2xpZCAjNGM0YzRjO1xuICAgIGJvcmRlci10b3A6IDhweCBzb2xpZCAjZjlmOWY5O1xuICAgIGJvcmRlci1ib3R0b206IDhweCBzb2xpZCAjZjlmOWY5O1xuICAgIGhlaWdodDogODBweDtcbiAgICB3aWR0aDogODBweDsgfVxuICAubG9hZGVyOmFmdGVyIHtcbiAgICBhbmltYXRpb246IHJvdGF0aW9uIDEuMHMgNTAwbXMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4gICAgYm9yZGVyLWxlZnQ6IDZweCBzb2xpZCAjNGM0YzRjO1xuICAgIGJvcmRlci1yaWdodDogNnB4IHNvbGlkICM0YzRjNGM7XG4gICAgYm9yZGVyLXRvcDogNnB4IHNvbGlkICNmOWY5Zjk7XG4gICAgYm9yZGVyLWJvdHRvbTogNnB4IHNvbGlkICNmOWY5Zjk7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGxlZnQ6IDUwJTtcbiAgICBtYXJnaW4tbGVmdDogLTI2cHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMjBweDtcbiAgICB3aWR0aDogNDBweDsgfVxuXG5Aa2V5ZnJhbWVzIHJvdGF0aW9uIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9IH1cbi8qKlxuICogUGFnZSBTcGVjaWZpY1xuICovXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgLmhvbWUge1xuICAgIG1hcmdpbi10b3A6IDcycHg7XG4gICAgbWFyZ2luLXRvcDogM3JlbTsgfSB9XG5cblxuIiwiQGtleWZyYW1lcyBzbGlkZS1pbi1mcm9tLWxlZnQge1xuICAgIDAlIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAlLCAwLCAwKTtcbiAgICAgICAgei1pbmRleDogMTtcbiAgICB9XG59XG5cblxuQGtleWZyYW1lcyBzbGlkZS1vdXQtdG8tbGVmdCB7XG4gICAgMCUge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAlLCAwLCAwKTtcbiAgICB9XG4gICAgMTAwJSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xuICAgICAgICB6LWluZGV4OiAtMTtcbiAgICB9XG59XG5cblxuQGtleWZyYW1lcyBzbGlkZS11cCB7XG4gICAgMCUge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAlLCAwKTtcbiAgICB9XG4gICAgMTAwJSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTEwMCUsIDApO1xuICAgICAgICB6LWluZGV4OiAtMTtcbiAgICB9XG59XG5cblxuQGtleWZyYW1lcyBzbGlkZS1kb3duIHtcbiAgICAwJSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTEwMCUsIDApO1xuICAgICAgICB6LWluZGV4OiAtMTtcbiAgICB9XG4gICAgMTAwJSB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCUsIDApO1xuICAgIH1cbn1cblxuXG5cbkBrZXlmcmFtZXMgc2xpZGUtaW4tZnJvbS1yaWdodCB7XG4gICAgMCUge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwJSwgMCwgMCk7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgfVxufVxuXG5cbkBrZXlmcmFtZXMgc2xpZGUtb3V0LXRvLXJpZ2h0IHtcbiAgICAwJSB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCUsIDAsIDApO1xuICAgIH1cbiAgICA5NSUge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwJSwgMCwgMCk7XG4gICAgICAgIHotaW5kZXg6IC0xO1xuICAgIH1cbn1cblxuXG5cbi8qXG4qIFJFQUNUIEFOSU1BVElPTlNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5mYWRlLWVudGVyIHtcbiAgICBtYXgtaGVpZ2h0OiAwO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAkYW5pbWF0aW9uLXNwZWVkLCBtYXgtaGVpZ2ggJGFuaW1hdGlvbi1zcGVlZDtcbn1cblxuLmZhZGUtZW50ZXIuZmFkZS1lbnRlci1hY3RpdmUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgbWF4LWhlaWdodDogNTAwcHg7XG59XG5cbi5mYWRlLWxlYXZlIHtcbiAgICBtYXgtaGVpZ2h0OiA1MDBweDtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgJGFuaW1hdGlvbi1zcGVlZCwgbWF4LWhlaWdoICRhbmltYXRpb24tc3BlZWQ7XG59XG5cbi5mYWRlLWxlYXZlLmZhZGUtbGVhdmUtYWN0aXZlIHtcbiAgICBtYXgtaGVpZ2h0OiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBBbmltYXRpb24gZGVsYXkgcmVwZWF0ZXJcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbkBtaXhpbiBhbmltYXRpb24tcmVwZWF0ZXIoJGNvdW50LCAkYW5pbWF0aW9uLW5hbWUsICRhbmltYXRpb24tc3BlZWQsICRzdGVwLFxuJGZpbGwtbW9kZTogbm9uZSwgJHJldmVyc2U6IGZhbHNlKSB7XG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkY291bnQge1xuICAgICAgICAmOm50aC1jaGlsZCgjeyRpfSkge1xuICAgICAgICAgICAgYW5pbWF0aW9uLW5hbWU6ICRhbmltYXRpb24tbmFtZTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogJGFuaW1hdGlvbi1zcGVlZDtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1kZWxheTogKCRzdGVwICogJGkgKyBtcyk7IFxuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogJGZpbGwtbW9kZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvIFxudjIuMCB8IDIwMTEwMTI2XG5MaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxuICovXG5cbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXG5iLCB1LCBpLCBjZW50ZXIsXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLCBcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcbnRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICBmb250OiBpbmhlcml0O1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsIFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cbmJvZHkge1xuICAgIC8qbGluZS1oZWlnaHQ6IDE7Ki9cbn1cbm9sLCB1bCB7XG4gICAgLypsaXN0LXN0eWxlOiBub25lOyovXG59XG5ibG9ja3F1b3RlLCBxIHtcbiAgICBxdW90ZXM6IG5vbmU7XG59XG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBjb250ZW50OiBub25lO1xufVxudGFibGUge1xuICAgIGJvcmRlci1jb2xsYXBzZTpcbiAgICBjb2xsYXBzZTtcbiAgICBib3JkZXItc3BhY2luZzogMDtcbn1cbiIsImJvZHkge1xuICAgIGJhY2tncm91bmQ6ICR3aGl0ZTsgXG4gICAgY29sb3I6ICRibGFjaztcbn1cbiIsIi8qKioqKioqKioqXG4qIFNVU1lcbioqKioqKioqKiovXG4kc3VzeTogKFxuICAgIGNvbHVtbnM6IDEyLFxuICAgIGdsb2JhbC1ib3gtc2l6aW5nOiBib3JkZXItYm94LFxuICAgIGd1dHRlcnM6IDEvM1xuKTtcblxuXG4vKioqKioqKioqKlxuKiBCcmVha3BvaW50c1xuKioqKioqKioqKi9cbiRsYXJnZTogKCBtaW46IDEwMDBweCApO1xuJHJldGluYTogKCByZXRpbmE6IHRydWUgKTtcblxuXG5cbi8qKioqKioqKioqXG4qIFR5cGVjc3NldFxuKioqKioqKioqKi9cbiR0eXBlY3NzZXQtYmFzZS1mb250LXNpemU6IDI0cHg7XG4kdHlwZWNzc2V0LWJhc2UtbGluZS1oZWlnaHQ6IDM2cHg7XG5cblxuXG4vKioqKioqKioqKlxuKiBDb2xvcnNcbioqKioqKioqKiovXG4kd2hpdGU6ICNmOWY5Zjk7XG4kYmxhY2s6ICM0YzRjNGM7XG4kZ3JleTogI2Q5ZDlkOTtcbiRicmFuZC1tYWluOiAjY2U2ZDdjO1xuJHdhcm5pbmc6ICNGRkZCRDM7XG4kc3VjY2VzczogIzM5YWM1MjtcbiRlcnJvcjogI2E1MzczNztcbiR5ZWxsb3c6ICNmYWVhZDQ7XG5cblxuLyoqKioqXG4gKiBTcGFjaW5nXG4gKioqKi9cbiRiYXNlLXNwYWNpbmctdW5pdDogMTBweDtcblxuXG5cbi8qKioqKlxuICogRm9udHNcbiAqKioqL1xuJGJvZHktZm9udDogJ0Nocm9uaWNsZSBEaXNwbGF5IEEnLCAnQ2hyb25pY2xlIERpc3BsYXkgQic7XG4kYm9keS1mb250LXJlZ3VsYXItd2VpZ2h0OiAyMDA7XG4kYm9keS1mb250LWJvbGQtd2VpZ2h0OiA3MDA7XG4kaGVhZGVyLWZvbnQ6ICdMYW5kbWFyayBSZWd1bGFyIEEnLCAnTGFuZG1hcmsgUmVndWxhciBCJztcbiRmdW4tZm9udDogJ0xhbmRtYXJrIElubGluZSBBJywgJ0xhbmRtYXJrIElubGluZSBCJztcbiRmdW4tZm9udC1yZWd1bGFyLXdlaWdodDogNDAwO1xuXG4kcmV0aW5hLWZvbnQ6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemUgKiAxLjc1O1xuJHNtYWxsLWZvbnQ6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemUgKiAwLjc7XG4kc21hbGwtcmV0aW5hLWZvbnQ6ICRyZXRpbmEtZm9udCAqIDAuNztcbiRtaW5pLWZvbnQ6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemUgKiAwLjU7XG4kbWluaS1yZXRpbmEtZm9udDogJHJldGluYS1mb250ICogMC41O1xuXG5cblxuLyoqKioqXG4gKiBOYXZpZ2F0aW9uXG4gKioqKi9cblxuXG5cbi8qKioqKlxuICogTmF2aWdhdGlvblxuICoqKiovXG4kZm9vdGVyLWhlaWdodDogODBweDtcblxuXG5cbi8qKioqKlxuICogQW5pbWF0aW9uXG4gKioqKi9cbiRhbmltYXRpb24tc3BlZWQ6IDMwMG1zO1xuXG5cblxuLyoqKioqXG4gKiBSb3VuZFxuICoqKiovXG4kcm91bmQ6IDNweDtcbiIsIi8qKlxuICogVHlwZWNzc2V0XG4gKlxuICogVHlwZWNzc2V0IGlzIGEgc21hbGwsIHVub3BpbmlvbmF0ZWQgbGlicmFyeSBmb3IgY3JlYXRpbmcgYmVhdXRpZnVsbHkgc2V0IHR5cGVcbiAqIG9uIHRoZSB3ZWIuIFR5cGVjc3NldCBnaXZlcyBwZXJmZWN0IHZlcnRpY2FsIHJoeXRobSBhdCBhbnkgY29uZmlndXJhYmxlIGZvbnRcbiAqIHNpemUsIGFzIHdlbGwgYXMgbWFueSBvdGhlciB0eXBvZ3JhcGhpY2FsIG5pY2V0aWVzLlxuICovXG5cblxuXG5cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cXFxcXG4gICAgLy8gU0VUVElOR1Ncbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXFxcXFxuLy8gVHlwZWNzc2V0IG5lZWRzIHNvbWUgdmFyaWFibGVzIHNldHRpbmcgYmVmb3JlIGl0IGNhbiBnZXQgc3RhcnRlZC4gU29tZSBvZlxuLy8gdGhlc2UgdmFyaWFibGVzIGNhbiBiZSBvdmVycmlkZW4gYnkgZGV2ZWxvcGVycywgb3RoZXJzIG5lZWQgdG8gcmVtYWluXG4vLyB1bnRvdWNoZWQgYmVjYXVzZSBUeXBlY3NzZXQgd2lsbCBhc3NpZ24gdGhlbSBhdXRvbWF0aWNhbGx5IGJhc2VkIG9uIHdoYXRcbi8vIHlvdeKAmXZlIHRvbGQgaXQuXG5cbi8vIFdoYXQgd291bGQgeW91IGxpa2UgeW91ciBiYXNlIGZvbnQtc2l6ZSB0byBiZT8gRGVmaW5lIGluIHBpeGVsczsgdGhlIGxpYnJhcnlcbi8vIHdpbGwgY29udmVydCBtZWFzdXJlbWVudHMgdG8gdGhlIG1vc3QgYXBwcm9wcmlhdGUgdW5pdHMgKHJlbXMgb3IgdW5pdGxlc3MpLlxuJHR5cGVjc3NldC1iYXNlLWZvbnQtc2l6ZTogICAgICAxNnB4ICFkZWZhdWx0O1xuJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0OiAgICAyNHB4ICFkZWZhdWx0O1xuXG4vLyBIZWFkaW5nIHNpemVzXG4kdHlwZWNzc2V0LWgxLXNpemU6ICAgICAgICAgICAgIDQ4cHggIWRlZmF1bHQ7XG4kdHlwZWNzc2V0LWgyLXNpemU6ICAgICAgICAgICAgIDM2cHggIWRlZmF1bHQ7XG4kdHlwZWNzc2V0LWgzLXNpemU6ICAgICAgICAgICAgIDMwcHggIWRlZmF1bHQ7XG4kdHlwZWNzc2V0LWg0LXNpemU6ICAgICAgICAgICAgIDI0cHggIWRlZmF1bHQ7XG4kdHlwZWNzc2V0LWg1LXNpemU6ICAgICAgICAgICAgIDIwcHggIWRlZmF1bHQ7XG4kdHlwZWNzc2V0LWg2LXNpemU6ICAgICAgICAgICAgIDE4cHggIWRlZmF1bHQ7XG5cbi8vIFdvdWxkIHlvdSBsaWtlIGluZGVudGVkIChyYXRoZXIgdGhhbiBzcGFjZWQpIHBhcmFncmFwaCBkZWxpbWl0aW5nP1xuJHR5cGVjc3NldC1pbmRlbnRlZC1wYXJhZ3JhcGhzOiBmYWxzZSAhZGVmYXVsdDtcblxuLy8gV291bGQgeW91IGxpa2UgdG8gc2hvdyBhIGJhc2VsaW5lIGdyaWQ/IFRoaXMgaXMgaGFuZHkgZHVyaW5nIGRldmVsb3BtZW50LlxuJHR5cGVjc3NldC1zaG93LWJhc2VsaW5lOiAgICAgICBmYWxzZSAhZGVmYXVsdDtcblxuLy8gRG8gbm90IG1vZGlmeSB0aGVzZSB2YXJpYWJsZXM7IHRoZXkgYXJlIGludGVybmFsIHNldHRpbmdzIHVwb24gd2hpY2ggdGhlXG4vLyBsaWJyYXJ5IGRlcGVuZHMuXG4kdHlwZWNzc2V0LW1hZ2ljLW51bWJlcjogICAgICAgICR0eXBlY3NzZXQtYmFzZS1saW5lLWhlaWdodDtcbiR0eXBlY3NzZXQtbWFnaWMtcmF0aW86ICAgICAgICAgJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0IC8gJHR5cGVjc3NldC1iYXNlLWZvbnQtc2l6ZTtcblxuXG5cblxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxcXFxcbiAgICAvLyBUT09MU1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cXFxcXG4vLyBUeXBlY3NzZXQgaGFzIGEgbnVtYmVyIG9mIGl0cyBvd24gdG9vbHMgd2hpY2ggaXQgdXNlcyB0byBnZW5lcmF0ZSBpdHMgQ1NTXG4vLyBtb3JlIGVmZmljaWVudGx5LlxuXG4vLyBRdWlja2x5IGdlbmVyYXRlIGEgZm9udC1zaXplIGluIHJlbXMsIHdpdGggYSBwaXhlbCBmYWxsYmFjaywgYmFzZWQgb24gdGhlXG4vLyB2YWx1ZSB3ZSBwYXNzIGludG8gdGhlIG1peGluLCBlLmcuOlxuLy9cbi8vIGgxIHtcbi8vICAgICBAaW5jbHVkZSB0eXBlY3NzZXQtZm9udC1zaXplKDI0cHgpO1xuLy8gfVxuLy9cbkBtaXhpbiB0eXBlY3NzZXQtZm9udC1zaXplKCRmb250LXNpemUsICRsaW5lLWhlaWdodDogdHJ1ZSkge1xuICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZTtcbiAgICBmb250LXNpemU6ICgkZm9udC1zaXplIC8gJHR5cGVjc3NldC1iYXNlLWZvbnQtc2l6ZSkgKiAxcmVtO1xuXG4gICAgQGlmICRsaW5lLWhlaWdodCA9PSB0cnVlIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IGNlaWwoJGZvbnQtc2l6ZSAvICR0eXBlY3NzZXQtYmFzZS1saW5lLWhlaWdodCkgKiAoJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0IC8gJGZvbnQtc2l6ZSk7XG4gICAgfVxuXG59XG5cbi8vIFNwYWNlIGVsZW1lbnRzIGJ5IGFuIGFtb3VudCBiYXNlZCBvbiB5b3VyIG1hZ2ljIG51bWJlci4gUGFzcyBpbiB0aGUgcHJvcGVydHlcbi8vIHRvIGJlIGluZGVudGVkIGFzIGEgcGFyYW1hdGVyLCBlLmcuOlxuLy9cbi8vIHByZSB7XG4vLyAgICAgQGluY2x1ZGUgdHlwZWNzc2V0LXNwYWNlKHBhZGRpbmctbGVmdCk7XG4vLyB9XG4vL1xuQG1peGluIHR5cGVjc3NldC1zcGFjZSgkcHJvcGVydHkpIHtcbiAgICAjeyRwcm9wZXJ0eX06IDIgKiAkdHlwZWNzc2V0LW1hZ2ljLW51bWJlcjtcbiAgICAjeyRwcm9wZXJ0eX06IDIgKiAkdHlwZWNzc2V0LW1hZ2ljLXJhdGlvICsgcmVtO1xufVxuXG4vLyBBIHNtYWxsLCBpbnRlcm5hbGx5LXVzZWQgZnVuY3Rpb24gdG8gcmVtb3ZlIHRoZSB1bml0cyBmcm9tIGEgZ2l2ZW4gdmFsdWUuXG5AZnVuY3Rpb24gdHlwZWNzc2V0LXN0cmlwLXVuaXRzKCRudW1iZXIpIHtcbiAgICBAcmV0dXJuICRudW1iZXIgLyAoJG51bWJlciAqIDAgKyAxKTtcbn1cblxuXG5cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNTSEFSRURcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIEEgbG90IG9mIGVsZW1lbnRzIGluIFR5cGVjc3NldCBuZWVkIHRvIHNoYXJlIHNvbWUgZGVjbGFyYXRpb25zIChtYWlubHkgZm9yXG4gKiB2ZXJ0aWNhbCByaHl0aG0pLCBzbyB3ZSBgQGV4dGVuZGAgc29tZSBzaWxlbnQgY2xhc3Nlcy5cbiAqL1xuJXR5cGVjc3NldC1yZXNldCB7XG4gICAgbWFyZ2luOiAgMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG4ldHlwZWNzc2V0LXZlcnRpY2FsLXJoeXRobSB7XG4gICAgQGV4dGVuZCAldHlwZWNzc2V0LXJlc2V0O1xuICAgIG1hcmdpbi1ib3R0b206ICR0eXBlY3NzZXQtbWFnaWMtbnVtYmVyO1xuICAgIG1hcmdpbi1ib3R0b206ICR0eXBlY3NzZXQtbWFnaWMtcmF0aW8gKyByZW07XG59XG5cblxuXG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjQkFTRVxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogMS4gU2V0IHRoZSBiYXNlIGVsZW1lbnTigJlzIGBmb250LXNpemVgIHRvIHRoZSB2YWx1ZSBvZiB5b3VyIGNob29zaW5nLiBTZXQgaW5cbiAqICAgIGVtcywgYXNzdW1pbmcgYSBicm93c2VyIGRlZmF1bHQgb2YgMTZweC5cbiAqIDIuIFdvcmsgb3V0IHRoZSB1bml0bGVzcyBgbGluZS1oZWlnaHRgIGZvciB5b3VyIHByb2plY3QgYmFzZWQgYXJvdW5kIHlvdXJcbiAqICAgIGRlc2lyZWQgYGxpbmUtaGVpZ2h0YCAoZGVmaW5lZCBwcmV2aW91c2x5IGluIHBpeGVscyksIGFuZCB5b3VyIHByb2plY3TigJlzXG4gKiAgICBiYXNlIGZvbnQgc2l6ZS5cbiAqL1xuXG5AaWYgJHR5cGVjc3NldC1zaG93LWJhc2VsaW5lID09IHRydWUge1xuLyoqXG4gKiAzLiBJZiB5b3UgaGF2ZSBjaG9zZW4gdG8gZGlzcGxheSBhIGJhc2VsaW5lIGdyaWQsIHdlIHR1cm4gaXQgb24gaGVyZS5cbiAqL1xufVxuXG5odG1sIHtcbiAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemUgLyAxNnB4ICsgZW07IC8qIFsxXSAqL1xuICAgIGxpbmUtaGVpZ2h0OiAkdHlwZWNzc2V0LWJhc2UtbGluZS1oZWlnaHQgLyAkdHlwZWNzc2V0LWJhc2UtZm9udC1zaXplOyAvKiBbMl0gKi9cblxuICAgIC8vIElmIHlvdSBoYXZlIGNob3NlbiB0byBkaXNwbGF5IGEgYmFzZWxpbmUgZ3JpZCwgd2UgdHVybiBpdCBvbiBoZXJlLlxuICAgIEBpZiAkdHlwZWNzc2V0LXNob3ctYmFzZWxpbmUgPT0gdHJ1ZSB7XG5cbiAgICAgICAgJHR5cGVjc3NldC1iYXNlbGluZS1zaXplOiB0eXBlY3NzZXQtc3RyaXAtdW5pdHMoJHR5cGVjc3NldC1tYWdpYy1udW1iZXIpO1xuXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwOi8vYmFzZWhvbGQuaXQvaS8jeyR0eXBlY3NzZXQtYmFzZWxpbmUtc2l6ZX0pOyAvKiBbM10gKi9cbiAgICB9XG5cbn1cblxuYm9keSB7XG4gICAgbWFyZ2luOiAwO1xufVxuXG5cblxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI0hFQURJTkdTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaDEge1xuICAgIEBleHRlbmQgJXR5cGVjc3NldC12ZXJ0aWNhbC1yaHl0aG07XG4gICAgQGluY2x1ZGUgdHlwZWNzc2V0LWZvbnQtc2l6ZSgkdHlwZWNzc2V0LWgxLXNpemUpO1xufVxuXG5oMiB7XG4gICAgQGV4dGVuZCAldHlwZWNzc2V0LXZlcnRpY2FsLXJoeXRobTtcbiAgICBAaW5jbHVkZSB0eXBlY3NzZXQtZm9udC1zaXplKCR0eXBlY3NzZXQtaDItc2l6ZSk7XG59XG5cbmgzIHtcbiAgICBAZXh0ZW5kICV0eXBlY3NzZXQtdmVydGljYWwtcmh5dGhtO1xuICAgIEBpbmNsdWRlIHR5cGVjc3NldC1mb250LXNpemUoJHR5cGVjc3NldC1oMy1zaXplKTtcbn1cblxuaDQge1xuICAgIEBleHRlbmQgJXR5cGVjc3NldC12ZXJ0aWNhbC1yaHl0aG07XG4gICAgQGluY2x1ZGUgdHlwZWNzc2V0LWZvbnQtc2l6ZSgkdHlwZWNzc2V0LWg0LXNpemUpO1xufVxuXG5oNSB7XG4gICAgQGV4dGVuZCAldHlwZWNzc2V0LXZlcnRpY2FsLXJoeXRobTtcbiAgICBAaW5jbHVkZSB0eXBlY3NzZXQtZm9udC1zaXplKCR0eXBlY3NzZXQtaDUtc2l6ZSk7XG59XG5cbmg2IHtcbiAgICBAZXh0ZW5kICV0eXBlY3NzZXQtdmVydGljYWwtcmh5dGhtO1xuICAgIEBpbmNsdWRlIHR5cGVjc3NldC1mb250LXNpemUoJHR5cGVjc3NldC1oNi1zaXplKTtcbn1cblxuXG5cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNMSVNUU1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnVsLCBvbCwgZGQge1xuICAgIEBleHRlbmQgJXR5cGVjc3NldC12ZXJ0aWNhbC1yaHl0aG07XG4gICAgQGluY2x1ZGUgdHlwZWNzc2V0LXNwYWNlKG1hcmdpbi1sZWZ0KTtcbn1cblxubGkgPiB1bCxcbmxpID4gb2wge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG59XG5cblxuXG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjUEFSQUdSQVBIU1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnAge1xuICAgIEBleHRlbmQgJXR5cGVjc3NldC12ZXJ0aWNhbC1yaHl0aG07XG5cbiAgICBAaWYgJHR5cGVjc3NldC1pbmRlbnRlZC1wYXJhZ3JhcGhzID09IHRydWUge1xuXG4gICAgICAgICsgcCB7XG4gICAgICAgICAgICBAaW5jbHVkZSB0eXBlY3NzZXQtc3BhY2UodGV4dC1pbmRlbnQpO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogLSR0eXBlY3NzZXQtbWFnaWMtbnVtYmVyO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogLSR0eXBlY3NzZXQtbWFnaWMtcmF0aW8gKyByZW07XG4gICAgICAgIH1cblxuICAgIH1cblxufVxuXG4vKipcbiAqIE5vdCBzdHJpY3RseSBhIHBhcmFncmFwaCwgYnV0IHByb2JhYmx5IGRvZXNu4oCZdCBuZWVkIGl0cyBvd24gc2VjdGlvbi5cbiAqL1xuYWRkcmVzcyB7XG4gICAgQGV4dGVuZCAldHlwZWNzc2V0LXZlcnRpY2FsLXJoeXRobTtcbn1cblxuXG5cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNDT0RFXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xucHJlIHtcbiAgICBAZXh0ZW5kICV0eXBlY3NzZXQtdmVydGljYWwtcmh5dGhtO1xufVxuXG4vKipcbiAqIDEuIEZpeCBhbiBvZGQgcXVpcmsgd2hlcmVieSwgd2l0aG91dCB0aGlzLCBjb2RlIGJsb2NrcyBhcmUgcmVuZGVyZWQgYXQgYVxuICogICAgZm9udC1zaXplIHNtYWxsZXIgdGhhbiAxZW0uXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIFsxXSAqL1xufVxuXG5cblxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI1FVT1RFU1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogMS4gSGFuZyB0aGUgb3BlbmluZyBxdW90ZSBvZiB0aGUgYmxvY2txdW90ZS5cbiAqL1xuYmxvY2txdW90ZSB7XG4gICAgdGV4dC1pbmRlbnQ6IC0wLjQxZW07IC8qIFsxXSAqL1xufVxuXG4vKipcbiAqIFNldCB1cCBxdW90ZSBtYXJrcyBvbiBxdW90aW5nIGVsZW1lbnRzLiBUaGlzIGlzIHZlcnkgRW5nbGlzaC1iYXNlZCwgc28gd2UgYXJlXG4gKiB1c2luZyDigJwsIOKAnSwg4oCYLCBhbmQg4oCZIHF1b3Rlcy5cbiAqL1xuYmxvY2txdW90ZSB7XG4gICAgQGV4dGVuZCAldHlwZWNzc2V0LXZlcnRpY2FsLXJoeXRobTtcbiAgICBxdW90ZXM6IFwi4oCcXCIgXCLigJ1cIjtcbiAgICBAaW5jbHVkZSB0eXBlY3NzZXQtc3BhY2UobWFyZ2luLWxlZnQpO1xuXG4gICAgcCB7XG5cbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgY29udGVudDogXCLigJxcIjtcbiAgICAgICAgICAgIGNvbnRlbnQ6IG9wZW4tcXVvdGU7XG4gICAgICAgIH1cblxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBjb250ZW50OiBuby1jbG9zZS1xdW90ZTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bGFzdC1vZi10eXBlOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwi4oCdXCI7XG4gICAgICAgICAgICBjb250ZW50OiBjbG9zZS1xdW90ZTtcbiAgICAgICAgfVxuXG4gICAgfVxuXG59XG5cbnEgICB7XG4gICAgcXVvdGVzOiBcIuKAmFwiIFwi4oCZXCIgXCLigJxcIiBcIuKAnVwiO1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIuKAmFwiO1xuICAgICAgICBjb250ZW50OiBvcGVuLXF1b3RlO1xuICAgIH1cblxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIuKAmVwiO1xuICAgICAgICBjb250ZW50OiBjbG9zZS1xdW90ZTtcbiAgICB9XG5cbiAgICBxOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwi4oCcXCI7XG4gICAgICAgIGNvbnRlbnQ6IG9wZW4tcXVvdGU7XG4gICAgfVxuXG4gICAgcTphZnRlcntcbiAgICAgICAgY29udGVudDogXCLigJ1cIjtcbiAgICAgICAgY29udGVudDogY2xvc2UtcXVvdGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSWYgYW4gZWxlbWVudCBvcGVucyB3aXRoIGFuIGlubGluZSBxdW90ZSwgbGV04oCZcyBoYW5nIHRoYXQuXG4gICAgICovXG4gICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgdGV4dC1pbmRlbnQ6IC0wLjIyZW07XG4gICAgfVxuXG59XG5cblxuXG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjVEFCTEVTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBDcnVkZSB0YWJsZSBzdHlsZXM7IHRhYmxlcyBhcmUgdmVyeSBkaWZmaWN1bHQgdG8ga2VlcCBvbiB0aGUgYmFzZWxpbmUuXG4gKi9cbnRhYmxlIHtcbiAgICBAZXh0ZW5kICV0eXBlY3NzZXQtdmVydGljYWwtcmh5dGhtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gICAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbnRoLFxudGQge1xuICAgIHBhZGRpbmc6ICR0eXBlY3NzZXQtYmFzZS1saW5lLWhlaWdodCAvIDI7XG59XG4iLCIqIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sLCBib2R5IHtcbiAgICBmb250LWZhbWlseTogJGJvZHktZm9udDtcbiAgICBmb250LXdlaWdodDogMjAwO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBjb2xvcjogJGJsYWNrO1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHJldGluYSkge1xuICAgICAgICBmb250LXNpemU6ICRyZXRpbmEtZm9udDtcbiAgICB9XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbGFyZ2UpIHtcbiAgICAgICAgZm9udC1zaXplOiAkdHlwZWNzc2V0LWJhc2UtZm9udC1zaXplO1xuICAgIH1cbn1cblxuaDEsIGgyLCBoMywgXG5oNCwgaDUsIGg2IHtcbiAgICBmb250LWZhbWlseTogJGhlYWRlci1mb250OyBcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuXG5cbi8qXG4qICRMSU5LU1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5hIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgJjpob3ZlcixcbiAgICAmLmFjdGl2ZSB7XG4gICAgICAgIGNvbG9yOiAkYnJhbmQtbWFpbjtcbiAgICB9XG59XG5cbi5ibG9jay1saW5rIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnN0YW5kb3V0LWxpbmsge1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkYmxhY2s7XG4gICAgJjpob3ZlciB7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAkYnJhbmQtbWFpbjtcbiAgICB9XG59XG5cblxuXG4ucnVsZSB7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgYmFja2dyb3VuZDogJGdyZXk7XG4gICAgLyptYXJnaW46ICR0eXBlY3NzZXQtYmFzZS1saW5lLWhlaWdodCAwOyovXG4gICAgbWFyZ2luLXRvcDogJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0O1xuICAgIG1hcmdpbi1ib3R0b206ICR0eXBlY3NzZXQtYmFzZS1saW5lLWhlaWdodDtcbn1cblxuICAgIC5ydWxlLS1zbWFsbCB7XG4gICAgICAgIGJhY2tncm91bmQ6ICRncmV5O1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICBtYXJnaW46ICR0eXBlY3NzZXQtYmFzZS1saW5lLWhlaWdodCBhdXRvO1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgfVxuXG5cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBJQ09OU1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLmljb24ge1xuICAgIHdpZHRoOiA1NXB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkcmV0aW5hKSB7XG4gICAgICAgIHdpZHRoOiAxMTBweDtcbiAgICB9XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbGFyZ2UpIHtcbiAgICAgICAgd2lkdGg6IDMwcHg7XG4gICAgfVxufVxuXG5cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBGT05UIE9WRVJSSURFU1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLmZ1bi1mb250IHtcbiAgICBmb250LWZhbWlseTogJGZ1bi1mb250O1xuICAgIGZvbnQtd2VpZ2h0OiAkZnVuLWZvbnQtcmVndWxhci13ZWlnaHQ7XG59XG5cbi5naWdhIHtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG59XG5cbi5tdXRlZCB7XG4gICAgY29sb3I6IGxpZ2h0ZW4oJGJsYWNrLCAxNSUpO1xufVxuXG4uaXRhbGljIHtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cblxuIiwiQG1peGluIGJyZWFrcG9pbnQoJG1hcCkge1xuICAgICRxdWVyeTogXCJcIjtcbiAgICBAaWYgbWFwLWhhcy1rZXkoJG1hcCwgbWluKSB7ICRxdWVyeTogYXBwZW5kKCRxdWVyeSwgXCIobWluLXdpZHRoOiAje21hcC1nZXQoJG1hcCwgbWluKX0pXCIpIH1cbiAgICBAaWYgbWFwLWhhcy1rZXkoJG1hcCwgbWluKSBhbmQgbWFwLWhhcy1rZXkoJG1hcCwgbWF4KSB7ICRxdWVyeTogYXBwZW5kKCRxdWVyeSwgXCJhbmRcIikgfVxuICAgIEBpZiBtYXAtaGFzLWtleSgkbWFwLCBtYXgpIHsgJHF1ZXJ5OiBhcHBlbmQoJHF1ZXJ5LCBcIihtYXgtd2lkdGg6ICN7bWFwLWdldCgkbWFwLCBtYXgpfSlcIikgfVxuICAgIEBpZiBtYXAtaGFzLWtleSgkbWFwLCBtaW4pIGFuZCBtYXAtaGFzLWtleSgkbWFwLCBtYXgtcGl4ZWwtcmF0aW8pIHsgJHF1ZXJ5OiBhcHBlbmQoJHF1ZXJ5LCBcImFuZFwiKSB9XG4gICAgQGlmIG1hcC1oYXMta2V5KCRtYXAsIG1heC1waXhlbC1yYXRpbykgeyAkcXVlcnk6IGFwcGVuZCgkcXVlcnksIFwiKC13ZWJraXQtbWF4LWRldmljZS1waXhlbC1yYXRpbzogI3ttYXAtZ2V0KCRtYXAsIG1heC1waXhlbC1yYXRpbyl9KVwiKSB9XG4gICAgQGlmIG1hcC1oYXMta2V5KCRtYXAsIHJldGluYSkge1xuICAgICAgICAkcXVlcnk6IGFwcGVuZCgkcXVlcnksIFwiKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMilcIilcbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgI3skcXVlcnl9IHsgQGNvbnRlbnQ7IH1cbn1cbiIsImJvZHkge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBwYWRkaW5nOiAkYmFzZS1zcGFjaW5nLXVuaXQgJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0O1xufVxuXG5cblxubWFpbiB7XG4gICAgQGluY2x1ZGUgY29udGFpbmVyO1xuICAgIGZsZXg6IDE7XG4gICAgbWluLWhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBuYXYge1xuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbmF2ICsgc2VjdGlvbiB7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIExBWU9VVCBPVkVSUklERVNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5zbWFsbC1tYXJnaW4tYm90dG9tIHtcbiAgICBtYXJnaW4tYm90dG9tOiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG59XG5cbi5uby1tYXJnaW4tYm90dG9tIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4ubGVmdC1hbGlnbiB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi5jZW50ZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnNwYWNlciB7XG4gICAgbWFyZ2luLWJvdHRvbTogJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0O1xufVxuIiwiLy8gcmVtIFN1cHBvcnRcbi8vID09PT09PT09PT09XG5cbi8vIHJlbVxuLy8gLS0tXG4vLyBDaGVjayBmb3IgYW4gZXhpc3Rpbmcgc3VwcG9ydCBtaXhpbiwgb3Igb3V0cHV0IGRpcmVjdGx5LlxuLy8gLSAkcHJvcCAgOiA8Y3NzIHByb3BlcnR5PlxuLy8gLSAkdmFsICAgOiA8Y3NzIHZhbHVlPlxuQG1peGluIHN1c3ktcmVtKFxuICAkcHJvcCxcbiAgJHZhbFxuKSB7XG4gICRfcmVxczogKFxuICAgIHZhcmlhYmxlOiByaHl0aG0tdW5pdCByZW0td2l0aC1weC1mYWxsYmFjayxcbiAgICBtaXhpbjogcmVtLFxuICApO1xuICBAaWYgc3VzeS1zdXBwb3J0KHJlbSwgJF9yZXFzLCAkd2FybjogZmFsc2UpIGFuZCAkcmh5dGhtLXVuaXQgPT0gcmVtIHtcbiAgICBAaW5jbHVkZSByZW0oJHByb3AsICR2YWwpO1xuICB9IEBlbHNlIHtcbiAgICAjeyRwcm9wfTogJHZhbDtcbiAgfVxufVxuIiwiLy8gQ29udGFpbmVyIFN5bnRheFxuLy8gPT09PT09PT09PT09PT09PVxuXG4vLyBDb250YWluZXIgW21peGluXVxuLy8gLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFNldCBhIGNvbnRhaW5lciBlbGVtZW50XG4vLyAtIFskbGF5b3V0XSAgOiA8c2V0dGluZ3M+XG5AbWl4aW4gY29udGFpbmVyKFxuICAkbGF5b3V0OiAkc3VzeVxuKSB7XG4gICRpbnNwZWN0ICAgIDogJGxheW91dDtcbiAgJGxheW91dCAgICAgOiBwYXJzZS1ncmlkKCRsYXlvdXQpO1xuXG4gICRfd2lkdGggICAgIDogZ2V0LWNvbnRhaW5lci13aWR0aCgkbGF5b3V0KTtcbiAgJF9qdXN0aWZ5ICAgOiBwYXJzZS1jb250YWluZXItcG9zaXRpb24oc3VzeS1nZXQoY29udGFpbmVyLXBvc2l0aW9uLCAkbGF5b3V0KSk7XG4gICRfcHJvcGVydHkgIDogaWYoc3VzeS1nZXQobWF0aCwgJGxheW91dCkgPT0gc3RhdGljLCB3aWR0aCwgbWF4LXdpZHRoKTtcblxuICAkX2JveCAgICAgICA6IHN1c3ktZ2V0KGJveC1zaXppbmcsICRsYXlvdXQpO1xuXG4gIEBpZiAkX2JveCB7XG4gICAgQGluY2x1ZGUgb3V0cHV0KChib3gtc2l6aW5nOiAkX2JveCkpO1xuICB9XG5cbiAgQGluY2x1ZGUgc3VzeS1pbnNwZWN0KGNvbnRhaW5lciwgJGluc3BlY3QpO1xuICBAaW5jbHVkZSBmbG9hdC1jb250YWluZXIoJF93aWR0aCwgJF9qdXN0aWZ5LCAkX3Byb3BlcnR5KTtcbiAgQGluY2x1ZGUgc2hvdy1ncmlkKCRsYXlvdXQpO1xufVxuXG4vLyBDb250YWluZXIgW2Z1bmN0aW9uXVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJldHVybiBjb250YWluZXIgd2lkdGhcbi8vIC0gWyRsYXlvdXRdICA6IDxzZXR0aW5ncz5cbkBmdW5jdGlvbiBjb250YWluZXIoXG4gICRsYXlvdXQ6ICRzdXN5XG4pIHtcbiAgJGxheW91dDogcGFyc2UtZ3JpZCgkbGF5b3V0KTtcbiAgQHJldHVybiBnZXQtY29udGFpbmVyLXdpZHRoKCRsYXlvdXQpO1xufVxuXG4vLyBHZXQgQ29udGFpbmVyIFdpZHRoXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBDYWxjdWxhdGUgdGhlIGNvbnRhaW5lciB3aWR0aFxuLy8gLSBbJGxheW91dF06IDxzZXR0aW5ncz5cbkBmdW5jdGlvbiBnZXQtY29udGFpbmVyLXdpZHRoKFxuICAkbGF5b3V0OiAkc3VzeVxuKSB7XG4gICRsYXlvdXQgICAgICAgICA6IHBhcnNlLWdyaWQoJGxheW91dCk7XG4gICRfd2lkdGggICAgICAgICA6IHN1c3ktZ2V0KGNvbnRhaW5lciwgJGxheW91dCk7XG4gICRfY29sdW1uLXdpZHRoICA6IHN1c3ktZ2V0KGNvbHVtbi13aWR0aCwgJGxheW91dCk7XG4gICRfbWF0aCAgICAgICAgICA6IHN1c3ktZ2V0KG1hdGgsICRsYXlvdXQpO1xuXG4gIEBpZiBub3QgJF93aWR0aCBvciAkX3dpZHRoID09IGF1dG8ge1xuICAgIEBpZiB2YWxpZC1jb2x1bW4tbWF0aCgkX21hdGgsICRfY29sdW1uLXdpZHRoKSB7XG4gICAgICAkX2NvbHVtbnMgICA6IHN1c3ktZ2V0KGNvbHVtbnMsICRsYXlvdXQpO1xuICAgICAgJF9ndXR0ZXJzICAgOiBzdXN5LWdldChndXR0ZXJzLCAkbGF5b3V0KTtcbiAgICAgICRfc3ByZWFkICAgIDogaWYoaXMtc3BsaXQoJGxheW91dCksIHdpZGUsIG5hcnJvdyk7XG4gICAgICAkX3dpZHRoICAgICA6IHN1c3ktc3VtKCRfY29sdW1ucywgJF9ndXR0ZXJzLCAkX3NwcmVhZCkgKiAkX2NvbHVtbi13aWR0aDtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRfd2lkdGg6IDEwMCU7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAkX3dpZHRoO1xufVxuXG4vLyBQYXJzZSBDb250YWluZXIgUG9zaXRpb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUGFyc2UgdGhlICRjb250YWluZXItcG9zaXRpb24gaW50byBtYXJnaW4gdmFsdWVzLlxuLy8gLSBbJGp1c3RpZnldICAgOiBsZWZ0IHwgY2VudGVyIHwgcmlnaHQgfCA8bGVuZ3RoPiBbPGxlbmd0aD5dXG5AZnVuY3Rpb24gcGFyc2UtY29udGFpbmVyLXBvc2l0aW9uKFxuICAkanVzdGlmeTogbWFwLWdldCgkc3VzeS1kZWZhdWx0cywgY29udGFpbmVyLXBvc2l0aW9uKVxuKSB7XG4gICRfcmV0dXJuOiBpZigkanVzdGlmeSA9PSBsZWZ0LCAwLCBhdXRvKSBpZigkanVzdGlmeSA9PSByaWdodCwgMCwgYXV0byk7XG5cbiAgQGlmIG5vdCBpbmRleChsZWZ0IHJpZ2h0IGNlbnRlciwgJGp1c3RpZnkpIHtcbiAgICAkX3JldHVybjogbnRoKCRqdXN0aWZ5LCAxKTtcbiAgICAkX3JldHVybjogJF9yZXR1cm4gaWYobGVuZ3RoKCRqdXN0aWZ5KSA+IDEsIG50aCgkanVzdGlmeSwgMiksICRfcmV0dXJuKTtcbiAgfVxuXG4gIEByZXR1cm4gJF9yZXR1cm47XG59XG4iLCIvLyBTdXN5IEZhbGxiYWNrIENsZWFyZml4XG4vLyA9PT09PT09PT09PT09PT09PT09PT09XG5cblxuLy8gQ2xlYXJmaXhcbi8vIC0tLS0tLS0tXG4vLyBDaGVjayBmb3IgYW4gZXhpc3Rpbmcgc3VwcG9ydCBtaXhpbiwgb3IgcHJvdmlkZSBhIHNpbXBsZSBmYWxsYmFjay5cbkBtaXhpbiBzdXN5LWNsZWFyZml4IHtcbiAgQGlmIHN1c3ktc3VwcG9ydChjbGVhcmZpeCwgKG1peGluOiBjbGVhcmZpeCkpIHtcbiAgICBAaW5jbHVkZSBjbGVhcmZpeDtcbiAgfSBAZWxzZSB7XG4gICAgJjphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY2xlYXI6IGJvdGg7XG4gICAgfVxuICB9XG59XG4iLCIvKlxuKiBTa2lubnkgc2VjdGlvbnNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5za2lubnkge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICBtYXgtd2lkdGg6IDcwMHB4O1xuICAgIH1cbn1cblxuXG4vKlxuKiBBcnRpY2xlXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4uYXJ0aWNsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0O1xufVxuXG5cbi8qXG4qIEdlbmVyYWwgU2VjdGlvblxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuc2VjdGlvbiB7XG59XG4iLCIkc2V0dGluZ3M6IChcbiAgICBkaXNwbGF5OiB0YWJsZVxuKTtcblxuQG1peGluIGdyaWQtaXRlbSgkc3Bhbikge1xuICAgIEBpbmNsdWRlIHNwYW4oJHNwYW4gb2YgMTIpO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG4uZ3JpZCB7XG4gICAgQGluY2x1ZGUgY29udGFpbmVyO1xuICAgIC8qZGlzcGxheTogbWFwLWdldCgkc2V0dGluZ3MsIGRpc3BsYXkpOyovXG59XG5cbi5ncmlkLS1jZW50ZXJlZCB7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbGFyZ2UpIHtcbiAgICAgICAgLmdyaWQtLWxlZnQge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG4uZ3JpZC0tMS00IHtcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICBAaW5jbHVkZSBncmlkLWl0ZW0oMyk7XG4gICAgfVxufVxuXG4uZ3JpZC0tMi0zIHtcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICBAaW5jbHVkZSBncmlkLWl0ZW0oOCk7XG4gICAgfVxufVxuXG4uZ3JpZC0tMS0yIHtcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICBAaW5jbHVkZSBncmlkLWl0ZW0oNik7XG4gICAgfVxufVxuXG4uZ3JpZC0tcHVzaC0xLTQge1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgIEBpbmNsdWRlIHB1c2goMyBvZiAxMik7XG4gICAgfVxufVxuXG4uZ3JpZC0tcHVzaC0xLTMge1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgIEBpbmNsdWRlIHB1c2goNCBvZiAxMik7XG4gICAgfVxufVxuXG4uZ3JpZC0tbGFzdCB7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbGFyZ2UpIHtcbiAgICAgICAgQGluY2x1ZGUgbGFzdDtcbiAgICB9XG59XG4iLCIvLyBTcGFuIFN5bnRheFxuLy8gPT09PT09PT09PT1cblxuLy8gU3BhbiBbbWl4aW5dXG4vLyAtLS0tLS0tLS0tLS1cbi8vIFNldCBhIHNwYW5uaW5nIGVsZW1lbnQgdXNpbmcgc2hvcnRoYW5kIHN5bnRheC5cbi8vIC0gJHNwYW4gIDogPHNwYW4+XG5AbWl4aW4gc3BhbihcbiAgJHNwYW5cbikge1xuICAkaW5zcGVjdDogJHNwYW47XG4gICRzcGFuOiBwYXJzZS1zcGFuKCRzcGFuKTtcbiAgJG91dHB1dDogc3Bhbi1tYXRoKCRzcGFuKTtcbiAgJG5lc3Rpbmc6IHN1c3ktZ2V0KHNwYW4sICRzcGFuKTtcbiAgJGNsZWFyOiBzdXN5LWdldChjbGVhciwgJHNwYW4pO1xuXG4gICRib3g6IHN1c3ktZ2V0KGJveC1zaXppbmcsICRzcGFuKTtcbiAgJGNvbnRlbnQtYm94OiBpZihzdXN5LWdldChnbG9iYWwtYm94LXNpemluZykgIT0gJ2JvcmRlci1ib3gnLCB0cnVlLCBmYWxzZSk7XG4gICRib3g6ICRib3ggb3IgaWYoaXMtaW5zaWRlKCRzcGFuKSBhbmQgJGNvbnRlbnQtYm94LCBib3JkZXItYm94LCBudWxsKTtcblxuICBAaWYgJGNsZWFyID09IGJyZWFrIHtcbiAgICBAaW5jbHVkZSBicmVhaztcbiAgfSBAZWxzZSBpZiAkY2xlYXIgPT0gbm9icmVhayB7XG4gICAgQGluY2x1ZGUgbm9icmVhaztcbiAgfVxuXG4gIEBpbmNsdWRlIHN1c3ktaW5zcGVjdChzcGFuLCAkaW5zcGVjdCk7XG4gIEBpbmNsdWRlIG91dHB1dCgoYm94LXNpemluZzogJGJveCkpO1xuICBAaW5jbHVkZSBmbG9hdC1zcGFuLW91dHB1dCgkb3V0cHV0Li4uKTtcblxuICBAaWYgdmFsaWQtY29sdW1ucygkbmVzdGluZywgc2lsZW50KSB7XG4gICAgQGluY2x1ZGUgbmVzdGVkKCRzcGFuKSB7IEBjb250ZW50OyB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIFNwYW4gW2Z1bmN0aW9uXVxuLy8gLS0tLS0tLS0tLS0tLS0tXG4vLyBSZXR1cm4gdGhlIHdpZHRoIG9mIGEgc3Bhbi5cbi8vIC0gJHNwYW4gIDogPHNwYW4+XG5AZnVuY3Rpb24gc3BhbihcbiAgJHNwYW5cbikge1xuICBAcmV0dXJuIGdldC1zcGFuLXdpZHRoKCRzcGFuKTtcbn1cblxuLy8gU3BhbiBNYXRoXG4vLyAtLS0tLS0tLS1cbi8vIEdldCBhbGwgdGhlIHNwYW4gcmVzdWx0cy5cbi8vIC0gJHNwYW46IDxtYXA+XG5AZnVuY3Rpb24gc3Bhbi1tYXRoKFxuICAkc3BhblxuKSB7XG4gICRuZXN0ICAgICAgICAgICAgIDogaWYoc3VzeS1nZXQocm9sZSwgJHNwYW4pID09IG5lc3QsIHRydWUsIGZhbHNlKTtcbiAgJHNwbGl0LW5lc3QgICAgICAgOiBpZihpcy1zcGxpdCgkc3BhbikgYW5kICRuZXN0LCB0cnVlLCBmYWxzZSk7XG4gICRlZGdlICAgICAgICAgICAgIDogZ2V0LWVkZ2UoJHNwYW4pO1xuICAkbG9jYXRpb24gICAgICAgICA6IGdldC1sb2NhdGlvbigkc3Bhbik7XG5cbiAgJGZsb2F0ICAgICAgICAgICAgOiBmcm9tO1xuICAkcGFkZGluZy1iZWZvcmUgICA6IG51bGw7XG4gICRwYWRkaW5nLWFmdGVyICAgIDogbnVsbDtcbiAgJG1hcmdpbi1iZWZvcmUgICAgOiBudWxsO1xuICAkbWFyZ2luLWFmdGVyICAgICA6IG51bGw7XG5cbiAgLy8gY2FsY3VsYXRlIHdpZHRoc1xuICAkc3ByZWFkOiBpbmRleChtYXAtdmFsdWVzKCRzcGFuKSwgc3ByZWFkKTtcbiAgJHNwYW46IGlmKCRzcGxpdC1uZXN0IGFuZCBub3QgJHNwcmVhZCwgbWFwLW1lcmdlKCRzcGFuLCAoc3ByZWFkOiB3aWRlKSksICRzcGFuKTtcbiAgJHdpZHRoOiBnZXQtc3Bhbi13aWR0aCgkc3Bhbik7XG4gICRndXR0ZXJzOiBnZXQtZ3V0dGVycygkc3Bhbik7XG5cbiAgLy8gYXBwbHkgZ3V0dGVyc1xuICBAaWYgaXMtaW5zaWRlKCRzcGFuKSB7XG4gICAgQGlmIG5vdCBzdXN5LWdldChyb2xlLCAkc3Bhbikge1xuICAgICAgJHBhZGRpbmctYmVmb3JlOiBtYXAtZ2V0KCRndXR0ZXJzLCBiZWZvcmUpO1xuICAgICAgJHBhZGRpbmctYWZ0ZXI6IG1hcC1nZXQoJGd1dHRlcnMsIGFmdGVyKTtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBpZiBub3QgKCRzcGxpdC1uZXN0KSB7XG4gICAgICAkbWFyZ2luLWJlZm9yZTogbWFwLWdldCgkZ3V0dGVycywgYmVmb3JlKTtcbiAgICAgICRtYXJnaW4tYWZ0ZXI6IG1hcC1nZXQoJGd1dHRlcnMsIGFmdGVyKTtcbiAgICB9XG4gIH1cblxuICAvLyBzcGVjaWFsIG1hcmdpbiBoYW5kbGluZ1xuICBAaWYgc3VzeS1nZXQob3V0cHV0LCAkc3BhbikgPT0gaXNvbGF0ZSBhbmQgJGxvY2F0aW9uIHtcbiAgICAkbWFyZ2luLWJlZm9yZTogZ2V0LWlzb2xhdGlvbigkc3Bhbik7XG4gICAgJG1hcmdpbi1hZnRlcjogLTEwMCU7XG4gIH0gQGVsc2UgaWYgJGVkZ2Uge1xuICAgICRpcy1zcGxpdDogaXMtc3BsaXQoJHNwYW4pO1xuICAgICRwb3M6IHN1c3ktZ2V0KGd1dHRlci1wb3NpdGlvbiwgJHNwYW4pO1xuXG4gICAgQGlmICRlZGdlID09IGxhc3Qge1xuICAgICAgJGZsb2F0OiBzdXN5LWdldChsYXN0LWZsb3csICRzcGFuKTtcbiAgICB9XG5cbiAgICBAaWYgbm90ICRpcy1zcGxpdCB7XG4gICAgICBAaWYgJGVkZ2UgPT0gZnVsbCBvciAoJGVkZ2UgPT0gZmlyc3QgYW5kICRwb3MgPT0gYmVmb3JlKSB7XG4gICAgICAgICRtYXJnaW4tYmVmb3JlOiAwO1xuICAgICAgfVxuICAgICAgQGlmICRlZGdlID09IGZ1bGwgb3IgKCRlZGdlID09IGxhc3QgYW5kICRwb3MgPT0gYWZ0ZXIpIHtcbiAgICAgICAgJG1hcmdpbi1hZnRlcjogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgfVxuXG4gIEByZXR1cm4gKFxuICAgIHdpZHRoICAgICAgICAgICA6ICR3aWR0aCxcbiAgICBmbG9hdCAgICAgICAgICAgOiAkZmxvYXQsXG4gICAgbWFyZ2luX2JlZm9yZSAgIDogJG1hcmdpbi1iZWZvcmUsXG4gICAgbWFyZ2luX2FmdGVyICAgIDogJG1hcmdpbi1hZnRlcixcbiAgICBwYWRkaW5nX2JlZm9yZSAgOiAkcGFkZGluZy1iZWZvcmUsXG4gICAgcGFkZGluZ19hZnRlciAgIDogJHBhZGRpbmctYWZ0ZXIsXG4gICAgZmxvdyAgICAgICAgICAgIDogc3VzeS1nZXQoZmxvdywgJHNwYW4pLFxuICApO1xufVxuXG4vLyBHZXQgU3BhbiBXaWR0aFxuLy8gLS0tLS0tLS0tLS0tLS1cbi8vIFJldHVybiBzcGFuIHdpZHRoLlxuLy8gLSAkc3BhbjogPG1hcD5cbkBmdW5jdGlvbiBnZXQtc3Bhbi13aWR0aChcbiAgJHNwYW5cbikge1xuICAkc3BhbiAgICAgOiBwYXJzZS1zcGFuKCRzcGFuKTtcblxuICAkbiAgICAgICAgOiBzdXN5LWdldChzcGFuLCAkc3Bhbik7XG4gICRsb2NhdGlvbiA6IGdldC1sb2NhdGlvbigkc3Bhbik7XG4gICRjb2x1bW5zICA6IHN1c3ktZ2V0KGNvbHVtbnMsICRzcGFuKTtcbiAgJGd1dHRlcnMgIDogc3VzeS1nZXQoZ3V0dGVycywgJHNwYW4pO1xuICAkc3ByZWFkICAgOiBzdXN5LWdldChzcHJlYWQsICRzcGFuKTtcblxuICAkY29udGV4dCAgOiBudWxsO1xuICAkc3Bhbi1zdW0gOiBudWxsO1xuICAkd2lkdGggICAgOiBudWxsO1xuXG4gIEBpZiAkbiA9PSAnZnVsbCcge1xuICAgICRwb3M6IHN1c3ktZ2V0KGd1dHRlci1wb3NpdGlvbiwgJHNwYW4pO1xuICAgICRyb2xlOiBzdXN5LWdldChyb2xlLCAkc3Bhbik7XG4gICAgJG46IGlmKCRwb3MgPT0gc3BsaXQgYW5kICRyb2xlICE9IG5lc3QsIHN1c3ktY291bnQoJGNvbHVtbnMpLCAxMDAlKTtcbiAgfVxuXG4gIEBpZiB0eXBlLW9mKCRuKSAhPSBudW1iZXIge1xuICAgIEB3YXJuIFwiKCN7dHlwZS1vZigkbil9KSAjeyRufSBpcyBub3QgYSB2YWxpZCBzcGFuLlwiO1xuICB9IEBlbHNlIGlmIHVuaXRsZXNzKCRuKSB7XG4gICAgJGNvbnRleHQ6IHN1c3ktc3VtKCRjb2x1bW5zLCAkZ3V0dGVycywgaWYoaXMtc3BsaXQoJHNwYW4pLCB3aWRlLCBuYXJyb3cpKTtcbiAgICAkc3ByZWFkOiBpZihpcy1pbnNpZGUoJHNwYW4pLCAkc3ByZWFkIG9yIHdpZGUsICRzcHJlYWQpO1xuICAgICRzcGFuLXN1bTogc3VzeSgkbiwgJGxvY2F0aW9uLCAkY29sdW1ucywgJGd1dHRlcnMsICRzcHJlYWQpO1xuXG4gICAgJF9tYXRoOiBzdXN5LWdldChtYXRoLCAkc3Bhbik7XG4gICAgJF9jb2x1bW4td2lkdGg6IHN1c3ktZ2V0KGNvbHVtbi13aWR0aCwgJHNwYW4pO1xuICAgIEBpZiAkX21hdGggPT0gc3RhdGljIHtcbiAgICAgICR3aWR0aDogJHNwYW4tc3VtICogdmFsaWQtY29sdW1uLW1hdGgoJF9tYXRoLCAkX2NvbHVtbi13aWR0aCk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkd2lkdGg6IHBlcmNlbnRhZ2UoJHNwYW4tc3VtIC8gJGNvbnRleHQpO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgJHdpZHRoOiAkbjtcbiAgfVxuXG4gIEByZXR1cm4gJHdpZHRoO1xufVxuIiwiLy8gRmxvYXQgU3BhbiBBUElcbi8vID09PT09PT09PT09PT09XG5cbi8vIEZsb2F0IFNwYW4gT3V0cHV0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLVxuLy8gLSAkd2lkdGggICAgICAgICAgICAgOiA8bGVuZ3RoPlxuLy8gLSBbJGZsb2F0XSAgICAgICAgICAgOiBmcm9tIHwgdG9cbi8vIC0gWyRtYXJnaW4tYmVmb3JlXSAgIDogPGxlbmd0aD5cbi8vIC0gWyRtYXJnaW4tYWZ0ZXJdICAgIDogPGxlbmd0aD5cbi8vIC0gWyRwYWRkaW5nLWJlZm9yZV0gIDogPGxlbmd0aD5cbi8vIC0gWyRwYWRkaW5nLWFmdGVyXSAgIDogPGxlbmd0aD5cbi8vIC0gWyRmbG93XSAgICAgICAgICAgIDogbHRyIHwgcnRsXG5AbWl4aW4gZmxvYXQtc3Bhbi1vdXRwdXQoXG4gICR3aWR0aCxcbiAgJGZsb2F0ICAgICAgICAgICAgOiBmcm9tLFxuICAkbWFyZ2luLWJlZm9yZSAgICA6IG51bGwsXG4gICRtYXJnaW4tYWZ0ZXIgICAgIDogbnVsbCxcbiAgJHBhZGRpbmctYmVmb3JlICAgOiBudWxsLFxuICAkcGFkZGluZy1hZnRlciAgICA6IG51bGwsXG4gICRmbG93ICAgICAgICAgICAgIDogbWFwLWdldCgkc3VzeS1kZWZhdWx0cywgZmxvdylcbikge1xuICAkdG8gICAgIDogdG8oJGZsb3cpO1xuICAkZnJvbSAgIDogZnJvbSgkZmxvdyk7XG5cbiAgJG91dHB1dDogKFxuICAgIHdpZHRoOiAkd2lkdGgsXG4gICAgZmxvYXQ6IGlmKCRmbG9hdCA9PSB0bywgJHRvLCBudWxsKSBvciBpZigkZmxvYXQgPT0gZnJvbSwgJGZyb20sIG51bGwpLFxuICAgIG1hcmdpbi0jeyRmcm9tfTogJG1hcmdpbi1iZWZvcmUsXG4gICAgbWFyZ2luLSN7JHRvfTogJG1hcmdpbi1hZnRlcixcbiAgICBwYWRkaW5nLSN7JGZyb219OiAkcGFkZGluZy1iZWZvcmUsXG4gICAgcGFkZGluZy0jeyR0b306ICRwYWRkaW5nLWFmdGVyLFxuICApO1xuXG4gIEBpbmNsdWRlIG91dHB1dCgkb3V0cHV0KTtcbn1cbiIsIi8vIE1hcmdpbiBTeW50YXhcbi8vID09PT09PT09PT09PT1cblxuLy8gUHJlXG4vLyAtLS1cbi8vIEFkZCBzcGFubmluZy1tYXJnaW5zIGJlZm9yZSBhbiBlbGVtZW50LlxuLy8gLSAkc3BhbiAgOiA8c3Bhbj5cbkBtaXhpbiBwcmUoXG4gICRzcGFuXG4pIHtcbiAgJGluc3BlY3Q6ICRzcGFuO1xuICAkc3BhbiAgIDogbWFwLW1lcmdlKChzcHJlYWQ6IHdpZGUpLCBwYXJzZS1zcGFuKCRzcGFuKSk7XG4gICRmbG93ICAgOiBzdXN5LWdldChmbG93LCAkc3Bhbik7XG4gICRzcGxpdCAgOiBpZihzdXN5LWdldChndXR0ZXItcG9zaXRpb24sICRzcGFuKSA9PSBzcGxpdCwgdHJ1ZSwgZmFsc2UpO1xuICAkd2lkdGggIDogaWYoJHNwbGl0LCBzcGFuKCRzcGFuKSArIGd1dHRlcigkc3BhbiksIHNwYW4oJHNwYW4pKTtcblxuICBAaW5jbHVkZSBzdXN5LWluc3BlY3QocHJlLCAkaW5zcGVjdCk7XG4gIEBpbmNsdWRlIG1hcmdpbi1vdXRwdXQoJHdpZHRoLCBudWxsLCAkZmxvdyk7XG59XG5cbi8vIFBvc3Rcbi8vIC0tLS1cbi8vIEFkZCBzcGFubmluZy1tYXJnaW5zIGFmdGVyIGFuIGVsZW1lbnQuXG4vLyAtICRzcGFuICA6IDxzcGFuPlxuQG1peGluIHBvc3QoXG4gICRzcGFuXG4pIHtcbiAgJGluc3BlY3QgIDogJHNwYW47XG4gICRzcGFuICAgICA6IG1hcC1tZXJnZSgoc3ByZWFkOiB3aWRlKSwgcGFyc2Utc3Bhbigkc3BhbikpO1xuICAkZmxvdyAgICAgOiBzdXN5LWdldChmbG93LCAkc3Bhbik7XG4gICRzcGxpdCAgICA6IGlmKHN1c3ktZ2V0KGd1dHRlci1wb3NpdGlvbiwgJHNwYW4pID09IHNwbGl0LCB0cnVlLCBmYWxzZSk7XG4gICR3aWR0aCAgICA6IGlmKCRzcGxpdCwgc3Bhbigkc3BhbikgKyBndXR0ZXIoJHNwYW4pLCBzcGFuKCRzcGFuKSk7XG5cbiAgQGluY2x1ZGUgc3VzeS1pbnNwZWN0KHBvc3QsICRpbnNwZWN0KTtcbiAgQGluY2x1ZGUgbWFyZ2luLW91dHB1dChudWxsLCAkd2lkdGgsICRmbG93KTtcbn1cblxuLy8gUHVzaFxuLy8gLS0tLVxuLy8gU2ltcGxlIHN5bm9ueW1uIGZvciBwcmUuXG4vLyAtICRzcGFuICA6IDxzcGFuPlxuQG1peGluIHB1c2goXG4gICRzcGFuXG4pIHtcbiAgQGluY2x1ZGUgcHJlKCRzcGFuKTtcbn1cblxuLy8gUHVsbFxuLy8gLS0tLVxuLy8gQWRkIG5lZ2F0aXZlIHNwYW5uaW5nLW1hcmdpbnMgYmVmb3JlIGFuIGVsZW1lbnQuXG4vLyAtICRzcGFuICA6IDxzcGFuPlxuQG1peGluIHB1bGwoXG4gICRzcGFuXG4pIHtcbiAgJGluc3BlY3QgIDogJHNwYW47XG4gICRzcGFuICAgICA6IG1hcC1tZXJnZSgoc3ByZWFkOiB3aWRlKSwgcGFyc2Utc3Bhbigkc3BhbikpO1xuICAkZmxvdyAgICAgOiBzdXN5LWdldChmbG93LCAkc3Bhbik7XG4gICRzcGxpdCAgICA6IGlmKHN1c3ktZ2V0KGd1dHRlci1wb3NpdGlvbiwgJHNwYW4pID09IHNwbGl0LCB0cnVlLCBmYWxzZSk7XG4gICR3aWR0aCAgICA6IGlmKCRzcGxpdCwgMCAtIHNwYW4oJHNwYW4pICsgZ3V0dGVyKCRzcGFuKSwgMCAtIHNwYW4oJHNwYW4pKTtcblxuICBAaW5jbHVkZSBzdXN5LWluc3BlY3QocHVsbCwgJGluc3BlY3QpO1xuICBAaW5jbHVkZSBtYXJnaW4tb3V0cHV0KCR3aWR0aCwgbnVsbCwgJGZsb3cpO1xufVxuXG4vLyBTcXVpc2hcbi8vIC0tLS0tLVxuLy8gQWRkIHNwYW5uaW5nLW1hcmdpbnMgYmVmb3JlIGFuZCBhZnRlciBhbiBlbGVtZW50LlxuLy8gLSAkcHJlICAgICA6IDxzcGFuPlxuLy8gLSBbJHBvc3RdICA6IDxzcGFuPlxuQG1peGluIHNxdWlzaChcbiAgJHByZSxcbiAgJHBvc3Q6IGZhbHNlXG4pIHtcbiAgJGluc3BlY3QgICAgICA6ICRwcmUsICRwb3N0O1xuICAkcHJlICAgICAgICAgIDogbWFwLW1lcmdlKChzcHJlYWQ6IHdpZGUpLCBwYXJzZS1zcGFuKCRwcmUpKTtcblxuICBAaWYgJHBvc3Qge1xuICAgICRwb3N0OiBtYXAtbWVyZ2UoKHNwcmVhZDogd2lkZSksIHBhcnNlLXNwYW4oJHBvc3QpKTtcbiAgfSBAZWxzZSB7XG4gICAgJHNwYW46IHN1c3ktZ2V0KHNwYW4sICRwcmUpO1xuICAgIEBpZiBsZW5ndGgoJHNwYW4pID4gMSB7XG4gICAgICAkcHJlOiBtYXAtbWVyZ2UoJHByZSwgKHNwYW46IG50aCgkc3BhbiwgMSkpKTtcbiAgICAgICRwb3N0OiBtYXAtbWVyZ2UoJHByZSwgKHNwYW46IG50aCgkc3BhbiwgMikpKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRwb3N0OiAkcHJlO1xuICAgIH1cbiAgfVxuXG4gIEBpbmNsdWRlIHN1c3ktaW5zcGVjdChzcXVpc2gsICRpbnNwZWN0Li4uKTtcbiAgQGluY2x1ZGUgcHJlKCRwcmUpO1xuICBAaW5jbHVkZSBwb3N0KCRwb3N0KTtcbn1cbiIsIi8vIEZsb2F0IEVuZHMgQVBJXG4vLyA9PT09PT09PT09PT09PVxuXG4vLyBTdXN5IEVuZCBEZWZhdWx0c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS1cbi8vIC0gUFJJVkFURVxuQGluY2x1ZGUgc3VzeS1kZWZhdWx0cygoXG4gIGxhc3QtZmxvdzogdG8sXG4pKTtcblxuLy8gRmxvYXQgTGFzdFxuLy8gLS0tLS0tLS0tLVxuLy8gLSBbJGZsb3ddICA6IGx0ciB8IHJ0bFxuQG1peGluIGZsb2F0LWxhc3QoXG4gICRmbG93OiBtYXAtZ2V0KCRzdXN5LWRlZmF1bHRzLCBmbG93KSxcbiAgJGxhc3QtZmxvdzogbWFwLWdldCgkc3VzeS1kZWZhdWx0cywgbGFzdC1mbG93KSxcbiAgJG1hcmdpbjogMFxuKSB7XG4gICR0bzogdG8oJGZsb3cpO1xuXG4gICRvdXRwdXQ6IChcbiAgICBmbG9hdDogaWYoJGxhc3QtZmxvdyA9PSB0bywgJHRvLCBudWxsKSxcbiAgICBtYXJnaW4tI3skdG99OiAkbWFyZ2luLFxuICApO1xuXG4gIEBpbmNsdWRlIG91dHB1dCgkb3V0cHV0KTtcbn1cblxuLy8gRmxvYXQgRmlyc3Rcbi8vIC0tLS0tLS0tLS0tXG4vLyAtIFskZmxvd10gIDogbHRyIHwgcnRsXG5AbWl4aW4gZmxvYXQtZmlyc3QoXG4gICRmbG93OiBtYXAtZ2V0KCRzdXN5LWRlZmF1bHRzLCBmbG93KVxuKSB7XG4gICRvdXRwdXQ6IChcbiAgICBtYXJnaW4tI3tmcm9tKCRmbG93KX06IDAsXG4gICk7XG5cbiAgQGluY2x1ZGUgb3V0cHV0KCRvdXRwdXQpO1xufVxuIiwiLy8gUm93IFN0YXJ0ICYgRW5kXG4vLyA9PT09PT09PT09PT09PT1cblxuLy8gQnJlYWtcbi8vIC0tLS0tXG4vLyBBcHBseSB0byBhbnkgZWxlbWVudCB0aGF0IHNob3VsZCBmb3JjZSBhIGxpbmUgYnJlYWsuXG5AbWl4aW4gYnJlYWsge1xuICBAaW5jbHVkZSBvdXRwdXQoKGNsZWFyOiBib3RoKSk7XG59XG5cblxuLy8gTm9CcmVha1xuLy8gLS0tLS0tLVxuLy8gQ2FuY2VsIHRoZSBicmVhaygpIGVmZmVjdCwgZS5nLiB3aGVuIHVzaW5nIG1lZGlhIHF1ZXJpZXMuXG5AbWl4aW4gbm9icmVhayB7XG4gIEBpbmNsdWRlIG91dHB1dCgoY2xlYXI6IG5vbmUpKTtcbn1cblxuXG4vLyBGdWxsXG4vLyAtLS0tXG4vLyAtIFskY29udGV4dF06IDxsYXlvdXQgc2hvcnRoYW5kPlxuQG1peGluIGZ1bGwoXG4gICRjb250ZXh0OiAkc3VzeVxuKSB7XG4gICRpbnNwZWN0IDogJGNvbnRleHQ7XG4gIEBpbmNsdWRlIHN1c3ktaW5zcGVjdChmdWxsLCAkaW5zcGVjdCk7XG4gIEBpbmNsdWRlIHNwYW4oZnVsbCBvZiBwYXJzZS1ncmlkKCRjb250ZXh0KSBicmVhayk7XG59XG5cblxuLy8gRmlyc3Rcbi8vIC0tLS0tXG4vLyAtIFskY29udGV4dF06IDxzZXR0aW5ncz5cbkBtaXhpbiBmaXJzdChcbiAgJGNvbnRleHQ6ICRzdXN5XG4pIHtcbiAgJGluc3BlY3QgIDogJGNvbnRleHQ7XG4gICRjb250ZXh0ICA6IHBhcnNlLWdyaWQoJGNvbnRleHQpO1xuICAkZmxvdyAgICAgOiBzdXN5LWdldChmbG93LCAkY29udGV4dCk7XG5cbiAgQGluY2x1ZGUgc3VzeS1pbnNwZWN0KGZpcnN0LCAkaW5zcGVjdCk7XG4gIEBpZiBub3QgaXMtc3BsaXQoJGNvbnRleHQpIHtcbiAgICBAaW5jbHVkZSBmbG9hdC1maXJzdCgkZmxvdyk7XG4gIH1cbn1cblxuQG1peGluIGFscGhhKFxuICAkY29udGV4dDogJHN1c3lcbikge1xuICBAaW5jbHVkZSBmaXJzdCgkY29udGV4dCk7XG59XG5cblxuLy8gTGFzdFxuLy8gLS0tLVxuLy8gLSBbJGNvbnRleHRdOiA8c2V0dGluZ3M+XG5AbWl4aW4gbGFzdChcbiAgJGNvbnRleHQ6ICRzdXN5XG4pIHtcbiAgJGluc3BlY3QgIDogJGNvbnRleHQ7XG4gICRjb250ZXh0ICA6IHBhcnNlLWdyaWQoJGNvbnRleHQpO1xuXG4gIEBpbmNsdWRlIHN1c3ktaW5zcGVjdChsYXN0LCAkaW5zcGVjdCk7XG5cbiAgJG91dHB1dDogKFxuICAgIGZsb3c6IHN1c3ktZ2V0KGZsb3csICRjb250ZXh0KSxcbiAgICBtYXJnaW46IGlmKGlzLXNwbGl0KCRjb250ZXh0KSwgbnVsbCwgMCksXG4gICk7XG5cbiAgQGluY2x1ZGUgZmxvYXQtbGFzdCgkb3V0cHV0Li4uKTtcbn1cblxuQG1peGluIG9tZWdhKFxuICAkY29udGV4dDogJHN1c3lcbikge1xuICBAaW5jbHVkZSBsYXN0KCRjb250ZXh0KTtcbn1cblxuXG4vLyBHZXQgRWRnZVxuLy8gLS0tLS0tLS1cbi8vIENhbGN1bGF0ZSBlZGdlIHZhbHVlIGJhc2VkIG9uIGxvY2F0aW9uLCBpZiBwb3NzaWJsZVxuQGZ1bmN0aW9uIGdldC1lZGdlKFxuICAkc3BhblxuKSB7XG4gICRzcGFuICAgICAgIDogcGFyc2Utc3Bhbigkc3Bhbik7XG4gICRlZGdlICAgICAgIDogc3VzeS1nZXQoZWRnZSwgJHNwYW4pO1xuXG4gIEBpZiBub3QgJGVkZ2Uge1xuICAgICRjb3VudDogc3VzeS1jb3VudChzdXN5LWdldChjb2x1bW5zLCAkc3BhbikpO1xuICAgICRsb2NhdGlvbjogc3VzeS1nZXQobG9jYXRpb24sICRzcGFuKTtcbiAgICAkbjogc3VzeS1nZXQoc3BhbiwgJHNwYW4pO1xuXG4gICAgJG51bWJlcjogaWYodHlwZS1vZigkbG9jYXRpb24pID09IG51bWJlciwgdHJ1ZSwgZmFsc2UpO1xuICAgICRpbmRleDogaWYoJG51bWJlciBhbmQgdW5pdGxlc3MoJGxvY2F0aW9uKSwgdHJ1ZSwgZmFsc2UpO1xuXG4gICAgQGlmICRuID09ICRjb3VudCB7XG4gICAgICAkZWRnZTogZnVsbDtcbiAgICB9IEBlbHNlIGlmICRsb2NhdGlvbiBhbmQgJG4gYW5kICRpbmRleCB7XG4gICAgICBAaWYgJGxvY2F0aW9uID09IDEge1xuICAgICAgICAkZWRnZTogaWYoJG4gPT0gJGNvdW50LCBmdWxsLCBmaXJzdCk7XG4gICAgICB9IEBlbHNlIGlmICRsb2NhdGlvbiArICRuIC0gMSA9PSAkY291bnQge1xuICAgICAgICAkZWRnZTogbGFzdDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAaWYgJGVkZ2UgPT0gYWxwaGEgb3IgJGVkZ2UgPT0gb21lZ2Ege1xuICAgICRlZGdlOiBpZigkZWRnZSA9PSBhbHBoYSwgZmlyc3QsIGxhc3QpO1xuICB9XG5cbiAgQHJldHVybiAkZWRnZTtcbn1cblxuXG4vLyBHZXQgTG9jYXRpb25cbi8vIC0tLS0tLS0tLS0tLVxuLy8gQ2FsY3VsYXRlIGxvY2F0aW9uIHZhbHVlIGJhc2VkIG9uIGVkZ2UsIGlmIHBvc3NpYmxlXG5AZnVuY3Rpb24gZ2V0LWxvY2F0aW9uKFxuICAkc3BhblxuKSB7XG4gICRzcGFuICAgICAgIDogcGFyc2Utc3Bhbigkc3Bhbik7XG4gICRsb2NhdGlvbiAgIDogc3VzeS1nZXQobG9jYXRpb24sICRzcGFuKTtcbiAgJGVkZ2UgICAgICAgOiBnZXQtZWRnZSgkc3Bhbik7XG4gICRuICAgICAgICAgIDogc3VzeS1nZXQoc3BhbiwgJHNwYW4pO1xuXG4gIEBpZiAkZWRnZSBhbmQgbm90ICRsb2NhdGlvbiBhbmQgdHlwZS1vZigkbikgPT0gbnVtYmVyIGFuZCB1bml0bGVzcygkbikge1xuICAgIEBpZiAkZWRnZSA9PSBmaXJzdCB7XG4gICAgICAkbG9jYXRpb246IDE7XG4gICAgfSBAZWxzZSBpZiAkZWRnZSA9PSBsYXN0IHtcbiAgICAgICRsb2NhdGlvbjogc3VzeS1jb3VudChzdXN5LWdldChjb2x1bW5zLCAkc3BhbikpIC0gJG4gKyAxO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gJGxvY2F0aW9uXG59XG4iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qICROQVZJR0FUSU9OXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4kbmF2LWhlaWdodDogNzVweDtcbi5tYWluLW5hdiB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGhlaWdodDogJG5hdi1oZWlnaHQgKiAyO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAvKnBhZGRpbmctYm90dG9tOiAkdHlwZWNzc2V0LWJhc2UtbGluZS1oZWlnaHQ7Ki9cbiAgICAvKkBpbmNsdWRlIGJyZWFrcG9pbnQoJHJldGluYSkgeyovXG4gICAgICAgIC8qaGVpZ2h0OiAkbmF2LWhlaWdodCAqIDQ7Ki9cbiAgICAvKn0qL1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgIC8qZm9udC1zaXplOiAkdHlwZWNzc2V0LWJhc2UtZm9udC1zaXplOyovXG4gICAgICAgIGhlaWdodDogJG5hdi1oZWlnaHQ7XG4gICAgfVxuICAgIGEge1xuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnNpdGUtbG9nbyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgICAgb3JkZXI6IDI7IC8vIFB1dCB0aGUgc2l0ZSBsb2dvIHRvIHRoZSByaWdodCBvbiBtb2JpbGVcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIC8qei1pbmRleDogMjsqL1xuICAgICAgICBpbWcge1xuICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAzNXB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICAgICAgICAvKmxpbmUtaGVpZ2h0OiAkbmF2LWhlaWdodCAqIDI7Ki9cbiAgICAgICAgICAgIG9yZGVyOiAwO1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogJGJhc2Utc3BhY2luZy11bml0O1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIH1cbiAgICB9XG4gICAgLm1haW4tbmF2X190b2dnbGUge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC0kYmFzZS1zcGFjaW5nLXVuaXQ7IC8vIEhhY2sgdG8gYWxpZ24gdGhlIGxvZ28gcHJvcGVybHkgOihcbiAgICAgICAgcGFkZGluZy1yaWdodDogJGJhc2Utc3BhY2luZy11bml0ICogMjtcbiAgICAgICAgd2lkdGg6IDI1JTtcbiAgICAgICAgei1pbmRleDogMjtcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbGFyZ2UpIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmRyb3Bkb3duIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbGFyZ2UpIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5cblxuXG4ubWFpbi1uYXZfX2JyZWFrLXJpZ2h0IHtcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICB9XG59XG5cblxuLm1haW4tbmF2X19tZW51IHtcbiAgICAvKmZvbnQtc2l6ZTogJHR5cGVjc3NldC1oMS1zaXplOyovXG4gICAgbGVmdDogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAkbmF2LWhlaWdodCAqIDIgKyAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgei1pbmRleDogLTE7XG4gICAgLypAaW5jbHVkZSBicmVha3BvaW50KCRyZXRpbmEpIHsqL1xuICAgICAgICAvKmZvbnQtc2l6ZTogJHR5cGVjc3NldC1iYXNlLWZvbnQtc2l6ZSAqIDY7Ki9cbiAgICAvKn0qL1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgIGFuaW1hdGlvbjogbm9uZTtcbiAgICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgei1pbmRleDogMTtcbiAgICB9XG4gICAgPiBhIHtcbiAgICAgICAgQGluY2x1ZGUgYW5pbWF0aW9uLXJlcGVhdGVyKDMsIHNsaWRlLXVwLCAkYW5pbWF0aW9uLXNwZWVkLCAxMDAsXG4gICAgICAgIGZvcndhcmRzKTtcbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGdyZXk7XG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGdyZXk7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtaDEtc2l6ZTtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgcGFkZGluZzogJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbGFyZ2UpIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIGFuaW1hdGlvbi1yZXBlYXRlcigzLCBub25lLCBub25lLCAxMDAsXG4gICAgICAgICAgICBmb3J3YXJkcyk7XG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICAgICAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemU7XG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgcGFkZGluZzogMCAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLm1haW4tbmF2X19zb2NpYWwge1xuICAgIGFuaW1hdGlvbjogc2xpZGUtb3V0LXRvLWxlZnQgJGFuaW1hdGlvbi1zcGVlZCBmb3J3YXJkcztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgIGFuaW1hdGlvbjogbm9uZTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHdpZHRoOiBhdXRvO1xuICAgIH1cbiAgICA+IGEge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogT1BFTiBOQVZJR0FUSU9OXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5tYWluID4gc2VjdGlvbiB7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAkYW5pbWF0aW9uLXNwZWVkO1xuICAgIHotaW5kZXg6IDE7XG59XG5cbi5tYWluLW5hdi0tY2xvc2VkIHtcbiAgICAubWFpbi1uYXZfX21lbnUgYSB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHotaW5kZXg6IC0xO1xuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLm1haW4tbmF2LS1vcGVuIHtcbiAgICAubWFpbi1uYXZfX3NvY2lhbCxcbiAgICAubWFpbi1uYXZfX21lbnUge1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgIH1cbiAgICAubWFpbi1uYXZfX21lbnUgYSB7XG4gICAgICAgIEBpbmNsdWRlIGFuaW1hdGlvbi1yZXBlYXRlcigzLCBzbGlkZS1kb3duLCAkYW5pbWF0aW9uLXNwZWVkLCAxMDAsXG4gICAgICAgIGZvcndhcmRzKTtcbiAgICB9XG4gICAgLm1haW4tbmF2X19zb2NpYWwge1xuICAgICAgICBhbmltYXRpb246IHNsaWRlLWluLWZyb20tbGVmdCAyMDBtcyBmb3J3YXJkcztcbiAgICB9XG4gICAgLnNpdGUtbG9nbyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgID4gc2VjdGlvbiB7XG4gICAgICAgIG9wYWNpdHk6IDAuMTtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyAvLyBOZWVkIHRoaXMgZm9yIHRoZSB6LWluZGV4IHRvIHdvcmtcbiAgICAgICAgei1pbmRleDogLTE7XG4gICAgfVxufVxuIiwiLnNuaXBwZXQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi1ib3R0b206ICR0eXBlY3NzZXQtYmFzZS1saW5lLWhlaWdodDtcbiAgICAuc25pcHBldF9fdGFnbGluZSwgXG4gICAgLnNuaXBwZXRfX2l0ZW0ge1xuICAgIH1cbiAgICAuc25pcHBldF9fdGFnbGluZSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxuICAgIC5zbmlwcGV0X19pdGVtIHtcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIH1cbn1cbiIsIi50YWdsaW5lIHtcbiAgICBmb250LWZhbWlseTogJGZ1bi1mb250O1xuICAgIGZvbnQtd2VpZ2h0OiAkZnVuLWZvbnQtcmVndWxhci13ZWlnaHQ7XG4gICAgZm9udC1zaXplOiAkdHlwZWNzc2V0LWgxLXNpemU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC50YWdsaW5lX19pdGVtIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgfVxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgIGZvbnQtc2l6ZTogJHR5cGVjc3NldC1oMi1zaXplO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIH1cbn1cbiIsIi5hdmF0YXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAkdHlwZWNzc2V0LWJhc2UtbGluZS1oZWlnaHQ7XG4gICAgZm9udC1zaXplOiAkc21hbGwtZm9udDtcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRyZXRpbmEpIHtcbiAgICAgICAgZm9udC1zaXplOiAkc21hbGwtcmV0aW5hLWZvbnQ7XG4gICAgfVxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IGF1dG87XG4gICAgICAgIGZvbnQtc2l6ZTogJHNtYWxsLWZvbnQ7XG4gICAgfVxufVxuXG4gICAgLmF2YXRhcl9faW1hZ2Uge1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIG1heC13aWR0aDogNTAlO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAkdHlwZWNzc2V0LWJhc2UtbGluZS1oZWlnaHQ7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDkwcHg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuYXZhdGFyX19zdW1tYXJ5IHtcbiAgICAgICAgLypmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemU7Ki9cbiAgICAgICAgLypmb250LXNpemU6ICRzbWFsbC1mb250OyovXG4gICAgfVxuXG4gICAgLmF2YXRhcl9fc3VtbWFyeV9faXRlbSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRiYXNlLXNwYWNpbmctdW5pdCAvIDI7XG4gICAgfVxuXG4gICAgLmF2YXRhcl9fc3VtbWFyeV9fcG9zaXRpb24ge1xuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgfVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAkRFJPUERPV05cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4uZHJvcGRvd24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgPiB1bCB7XG4gICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBtYXJnaW46IDA7XG4gICAgbWluLXdpZHRoOiAxMDBweDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgICY6YmVmb3JlLFxuICAgICY6YWZ0ZXIge1xuICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbGFyZ2UpIHtcbiAgICAgICAgYm9yZGVyLXRvcDogJGJhc2Utc3BhY2luZy11bml0IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItYm90dG9tOiAkYmFzZS1zcGFjaW5nLXVuaXQgc29saWQgJHdoaXRlO1xuICAgICAgICBib3JkZXItbGVmdDogJGJhc2Utc3BhY2luZy11bml0IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItcmlnaHQ6ICRiYXNlLXNwYWNpbmctdW5pdCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHJpZ2h0OiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgICAgIHRvcDogLSgkYmFzZS1zcGFjaW5nLXVuaXQgKiAyKTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgfVxuICAgIH1cbiAgICAmOmFmdGVyIHtcbiAgICAgIHRvcDogLSRiYXNlLXNwYWNpbmctdW5pdCAqIDIgLSAxO1xuICAgICAgYm9yZGVyLWJvdHRvbTogJGJhc2Utc3BhY2luZy11bml0IHNvbGlkICRibGFjaztcbiAgICAgIHotaW5kZXg6IC0xO1xuICAgIH1cbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICB0b3A6IDEyNSU7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGJsYWNrO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIH1cbiAgICBsaSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgYSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICAgIHBhZGRpbmc6ICRiYXNlLXNwYWNpbmctdW5pdDtcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogJGJyYW5kLW1haW47XG4gICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgIH1cbiB9XG4gXG4gLmRyb3Bkb3duOmhvdmVyIHVsIHtcbiAgIGRpc3BsYXk6IGJsb2NrO1xufVxuIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBUQUJMRVMhXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG50YWJsZSB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuXG5jYXB0aW9uIHtcbiAgICBmb250LWZhbWlseTogJGhlYWRlci1mb250O1xuICAgIGZvbnQtc2l6ZTogJHR5cGVjc3NldC1oMS1zaXplO1xuICAgIG1hcmdpbi1ib3R0b206ICRiYXNlLXNwYWNpbmctdW5pdDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG50aCB7XG4gICAgYmFja2dyb3VuZDogJGJyYW5kLW1haW47XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcGFkZGluZzogMDtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDIwMG1zO1xuICAgIGEge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwYWRkaW5nOiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4IDAgMCAwO1xuICAgIH1cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwIDNweCAwIDA7XG4gICAgfVxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiBkYXJrZW4oJGJyYW5kLW1haW4sIDEwJSk7XG4gICAgICAgIGEge1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxudGJvZHkge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZ3JleTtcbiAgICB0cjpudGgtY2hpbGQoMm4gLSAxKSB7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoJGdyZXksIDAuMik7XG4gICAgfVxufVxuXG50ZCB7XG59XG5cbi50YWJsZS1yb3ctZW50ZXIge1xuICAgIG9wYWNpdHk6IDAuMDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwcHgsIDAsMCk7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAkYW5pbWF0aW9uLXNwZWVkLCB0cmFuc2Zvcm0gJGFuaW1hdGlvbi1zcGVlZDtcbn1cblxuLnRhYmxlLXJvdy1lbnRlci50YWJsZS1yb3ctZW50ZXItYWN0aXZlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xufVxuXG4udGFibGUtcm93LWxlYXZlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgJGFuaW1hdGlvbi1zcGVlZCwgdHJhbnNmb3JtICRhbmltYXRpb24tc3BlZWQ7XG59XG5cbi50YWJsZS1yb3ctbGVhdmUudGFibGUtcm93LWxlYXZlLWFjdGl2ZSB7XG4gICAgb3BhY2l0eTogMC4wMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDBweCwgMCwgMCk7XG59XG4iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEFMRVJUU1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLmFsZXJ0IHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkYmxhY2s7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luOiAkYmFzZS1zcGFjaW5nLXVuaXQgYXV0bztcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0cmFuc2l0aW9uOiBcbiAgICAgICAgYmFja2dyb3VuZCAkYW5pbWF0aW9uLXNwZWVkLCBcbiAgICAgICAgb3BhY2l0eSAkYW5pbWF0aW9uLXNwZWVkLFxuICAgICAgICBtYXgtaGVpZ2h0ICRhbmltYXRpb24tc3BlZWQ7XG4gICAgYSB7XG4gICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgIH1cbiAgICBhLFxuICAgIGltZyB7XG4gICAgICAgIG1pbi13aWR0aDogMjBweDtcbiAgICAgICAgcGFkZGluZzogJGJhc2Utc3BhY2luZy11bml0O1xuICAgIH1cbiAgICBpbWcge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkYnJhbmQtbWFpbjtcbiAgICB9XG59XG5cblxuXG4uYWxlcnQtLXdhcm5pbmcge1xuICAgIGJhY2tncm91bmQ6ICR3YXJuaW5nO1xuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiBkYXJrZW4oJHdhcm5pbmcsIDEwJSk7XG4gICAgfVxufVxuXG4uYWxlcnQtLWVycm9yIHtcbiAgICBiYWNrZ3JvdW5kOiAkZXJyb3I7XG4gICAgY29sb3I6ICR3aGl0ZTtcbn1cbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogU1VNTUFSWSBMSVNUXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4uc3VtbWFyeS1saXN0IHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKCRncmV5LCAwLjIpO1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgfVxuICAgIGgyIHtcbiAgICAgICAgLypmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemU7Ki9cbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG4gICAgbGkge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBwYWRkaW5nOiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgfVxuICAgIHAge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cbn1cbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogTUVUQVxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLm1ldGEge1xuICAgIEBleHRlbmQgLnNraW5ueTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZvbnQtc2l6ZTogJHNtYWxsLWZvbnQ7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkcmV0aW5hKSB7XG4gICAgICAgIGZvbnQtc2l6ZTogJHJldGluYS1mb250O1xuICAgIH1cbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemU7XG4gICAgfVxufVxuXG4ubWV0YV9faXRlbSB7XG4gICAgLypiYWNrZ3JvdW5kOiByZ2JhKCRncmV5LCAwLjIpOyovXG4gICAgYm9yZGVyLXJhZGl1czogJHJvdW5kO1xuICAgIGZsZXg6IDE7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBtYXJnaW46IDA7XG59XG5cbi5tZXRhX19oZWFkZXIge1xuICAgIGZvbnQtc2l6ZTogJHNtYWxsLWZvbnQ7XG4gICAgbWFyZ2luLWJvdHRvbTogJGJhc2Utc3BhY2luZy11bml0IC8gMjtcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRyZXRpbmEpIHtcbiAgICAgICAgZm9udC1zaXplOiAkcmV0aW5hLWZvbnQ7XG4gICAgfVxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgIGZvbnQtc2l6ZTogJHR5cGVjc3NldC1oMi1zaXplO1xuICAgIH1cbn1cblxuLm1ldGFfX3ZhbHVlIHtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgbWFyZ2luLWJvdHRvbTogJGJhc2Utc3BhY2luZy11bml0O1xufVxuIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBTSU5HTEUgSVRFTVxuKiBUaGlzIGlzIGZvciBsb25nIGZvcm0gaXRlbXMgXG4qIGFzIHNlZW4gaW4gYSBwb3N0IG9yIHByb2plY3RcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5zaW5nbGUtaXRlbSB7XG4gICAgPiBhcnRpY2xlID4gcCxcbiAgICA+IGFydGljbGUgPiB1bCB7XG4gICAgfVxuICAgIGltZyB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICB9XG59XG5cbi8qXG4qIFNpbmdsZSBpdGVtIHNlY3Rpb25zXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4uc2luZ2xlLWl0ZW0ge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGFydGljbGUge1xuICAgICAgICBAZXh0ZW5kIC5za2lubnk7XG4gICAgfVxufVxuXG4uc2luZ2xlLWl0ZW0gaGVhZGVyIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgfVxuICAgIGltZyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtYXJnaW46ICR0eXBlY3NzZXQtYmFzZS1saW5lLWhlaWdodCBhdXRvO1xuICAgIH1cbiAgICAuYXNpZGUtMSxcbiAgICAuYXNpZGUtMiB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGxpOmFmdGVyIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IGluaGVyaXQ7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiBpbmhlcml0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBpbmhlcml0O1xuICAgICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmFzaWRlLTEge1xuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICAgICAgb3JkZXI6IDE7XG4gICAgICAgICAgICBsaTphZnRlciB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmFzaWRlLTIge1xuICAgICAgICBvcmRlcjogMztcbiAgICB9XG4gICAgaDEge1xuICAgICAgICBAZXh0ZW5kIC5za2lubnk7XG4gICAgICAgIEBleHRlbmQgLmdpZ2E7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICAgICAgbWluLXdpZHRoOiA3MDBweDtcbiAgICAgICAgICAgIG9yZGVyOiAyO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiLypcblxuT3JnaW5hbCBTdHlsZSBmcm9tIGV0aGFuc2Nob29ub3Zlci5jb20vc29sYXJpemVkIChjKSBKZXJlbXkgSHVsbFxuPHNvdXJkcnVtc0BnbWFpbC5jb20+XG5cbiAqL1xuXG4uaGxqcyxcbnByZSBjb2RlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIHBhZGRpbmc6IDAuNWVtO1xuICAgIGJhY2tncm91bmQ6ICMwMDJiMzY7XG4gICAgY29sb3I6ICM4Mzk0OTY7XG4gICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lO1xufVxuXG5jb2RlIHtcbiAgICBiYWNrZ3JvdW5kOiAjMDAyYjM2O1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBjb2xvcjogIzgzOTM5NjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZm9udC1zaXplOiAkc21hbGwtZm9udDtcbiAgICBtYXJnaW46IDAgMC4yZW07XG4gICAgcGFkZGluZzogMC4yZW07XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkcmV0aW5hKSB7XG4gICAgICAgIGZvbnQtc2l6ZTogJHNtYWxsLXJldGluYS1mb250O1xuICAgIH1cbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICBmb250LXNpemU6ICRzbWFsbC1mb250O1xuICAgIH1cbn1cblxuLmhsanMtY29tbWVudCxcbi5kaWZmIC5obGpzLWhlYWRlcixcbi5obGpzLWRvY3R5cGUsXG4uaGxqcy1waSxcbi5saXNwIC5obGpzLXN0cmluZyxcbi5obGpzLWphdmFkb2Mge1xuICAgIGNvbG9yOiAjNTg2ZTc1O1xufVxuXG4vKiBTb2xhcml6ZWQgR3JlZW4gKi9cbi5obGpzLWtleXdvcmQsXG4uaGxqcy13aW51dGlscyxcbi5tZXRob2QsXG4uaGxqcy1hZGRpdGlvbixcbi5jc3MgLmhsanMtdGFnLFxuLmhsanMtcmVxdWVzdCxcbi5obGpzLXN0YXR1cyxcbi5uZ2lueCAuaGxqcy10aXRsZSB7XG4gICAgY29sb3I6ICM4NTk5MDA7XG59XG5cbi8qIFNvbGFyaXplZCBDeWFuICovXG4uaGxqcy1udW1iZXIsXG4uaGxqcy1jb21tYW5kLFxuLmhsanMtc3RyaW5nLFxuLmhsanMtdGFnIC5obGpzLXZhbHVlLFxuLmhsanMtcnVsZXMgLmhsanMtdmFsdWUsXG4uaGxqcy1waHBkb2MsXG4uaGxqcy1kYXJ0ZG9jLFxuLnRleCAuaGxqcy1mb3JtdWxhLFxuLmhsanMtcmVnZXhwLFxuLmhsanMtaGV4Y29sb3IsXG4uaGxqcy1saW5rX3VybCB7XG4gICAgY29sb3I6ICMyYWExOTg7XG59XG5cbi8qIFNvbGFyaXplZCBCbHVlICovXG4uaGxqcy10aXRsZSxcbi5obGpzLWxvY2FsdmFycyxcbi5obGpzLWNodW5rLFxuLmhsanMtZGVjb3JhdG9yLFxuLmhsanMtYnVpbHRfaW4sXG4uaGxqcy1pZGVudGlmaWVyLFxuLnZoZGwgLmhsanMtbGl0ZXJhbCxcbi5obGpzLWlkLFxuLmNzcyAuaGxqcy1mdW5jdGlvbiB7XG4gICAgY29sb3I6ICMyNjhiZDI7XG59XG5cbi8qIFNvbGFyaXplZCBZZWxsb3cgKi9cbi5obGpzLWF0dHJpYnV0ZSxcbi5obGpzLXZhcmlhYmxlLFxuLmxpc3AgLmhsanMtYm9keSxcbi5zbWFsbHRhbGsgLmhsanMtbnVtYmVyLFxuLmhsanMtY29uc3RhbnQsXG4uaGxqcy1jbGFzcyAuaGxqcy10aXRsZSxcbi5obGpzLXBhcmVudCxcbi5obGpzLXR5cGUsXG4uaGxqcy1saW5rX3JlZmVyZW5jZSB7XG4gICAgY29sb3I6ICNiNTg5MDA7XG59XG5cbi8qIFNvbGFyaXplZCBPcmFuZ2UgKi9cbi5obGpzLXByZXByb2Nlc3Nvcixcbi5obGpzLXByZXByb2Nlc3NvciAuaGxqcy1rZXl3b3JkLFxuLmhsanMtcHJhZ21hLFxuLmhsanMtc2hlYmFuZyxcbi5obGpzLXN5bWJvbCxcbi5obGpzLXN5bWJvbCAuaGxqcy1zdHJpbmcsXG4uZGlmZiAuaGxqcy1jaGFuZ2UsXG4uaGxqcy1zcGVjaWFsLFxuLmhsanMtYXR0cl9zZWxlY3Rvcixcbi5obGpzLXN1YnN0LFxuLmhsanMtY2RhdGEsXG4uY3NzIC5obGpzLXBzZXVkbyxcbi5obGpzLWhlYWRlciB7XG4gICAgY29sb3I6ICNjYjRiMTY7XG59XG5cbi8qIFNvbGFyaXplZCBSZWQgKi9cbi5obGpzLWRlbGV0aW9uLFxuLmhsanMtaW1wb3J0YW50IHtcbiAgICBjb2xvcjogI2RjMzIyZjtcbn1cblxuLyogU29sYXJpemVkIFZpb2xldCAqL1xuLmhsanMtbGlua19sYWJlbCB7XG4gICAgY29sb3I6ICM2YzcxYzQ7XG59XG5cbi50ZXggLmhsanMtZm9ybXVsYSB7XG4gICAgYmFja2dyb3VuZDogIzA3MzY0Mjtcbn1cbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogRk9STVNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbmZvcm0ge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4gICAgLmZvcm0tcm93IHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJHR5cGVjc3NldC1iYXNlLWxpbmUtaGVpZ2h0O1xuICAgICAgICBsYWJlbCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJHR5cGVjc3NldC1oMi1zaXplO1xuICAgICAgICB9XG4gICAgICAgIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICAgICAgICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sXG4gICAgICAgIHRleHRhcmVhIHtcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmV5O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtYmFzZS1mb250LXNpemU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogJGJvZHktZm9udDtcbiAgICAgICAgICAgIHBhZGRpbmc6ICRiYXNlLXNwYWNpbmctdW5pdDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgICAgIHRleHRhcmVhIHtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDUwMHB4O1xuICAgICAgICB9XG4gICAgfVxuXG4uY2hlY2tib3gge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmNoZWNrYm94IGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgei1pbmRleDogMTAwO1xufVxuXG4uY2hlY2tib3ggaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuLmNoZWNrYm94IGxhYmVsOjpiZWZvcmUge1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIGhlaWdodDogNTBweDtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAwO1xuICAgIG1hcmdpbi10b3A6IC0yNXB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJhY2tncm91bmQ6ICRlcnJvcjtcbn1cblxuLmNoZWNrYm94IGxhYmVsIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IDAgMCAwIDgwcHg7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgY29sb3I6IHJnYmEoJGJsYWNrLCAwLjcpO1xuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3M7XG4gICAgJjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgYm9yZGVyOiA0cHggc29saWQgJGJsYWNrO1xuICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MsIGJhY2tncm91bmQgMjAwbXM7XG4gICAgfVxufVxuXG4uY2hlY2tib3hcbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXTpjaGVja2VkXG4rIGxhYmVsIHtcbiAgICBjb2xvcjpcbiAgICAkYmxhY2s7XG59XG5cbi5jaGVja2JveFxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWRcbisgbGFiZWw6OmJlZm9yZVxue1xuICAgIG9wYWNpdHk6XG4gICAgMC44O1xuICAgIGJhY2tncm91bmQ6ICRzdWNjZXNzO1xufVxuIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBUQUJTXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4udGFicy1uYXZpZ2F0aW9uIHtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIC0ycHggJGdyZXk7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgYSB7XG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTJweCBsaWdodGVuKCRibGFjaywgNDAlKTtcbiAgICAgICAgY29sb3I6IGxpZ2h0ZW4oJGJsYWNrLCA0MCUpO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZmxleDogMTtcbiAgICAgICAgZm9udC1mYW1pbHk6ICRoZWFkZXItZm9udDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgICAgICAgcGFkZGluZzogJGJhc2Utc3BhY2luZy11bml0LzIgJGJhc2Utc3BhY2luZy11bml0O1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcywgYm94LXNoYWRvdyAzMDBtcztcbiAgICAgICAgJjpub3QoLnRhYnMtbWVudS1pdGVtLS1hY3RpdmUpOmhvdmVyIHtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTJweCAkYmxhY2s7XG4gICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICB9XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDIwMHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC50YWJzLW1lbnUtaXRlbS0tYWN0aXZlIHtcbiAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAtMnB4ICRicmFuZC1tYWluO1xuICAgICAgICBjb2xvcjogJGJyYW5kLW1haW47XG4gICAgfVxufVxuXG5cbi50YWJzLW1lbnUtaXRlbSB7XG59XG5cbi50YWJzLW1lbnUtaXRlbSBhIHtcbn1cblxuXG4udGFiLXBhbmVsIHtcbiAgICBwYWRkaW5nOiAkdHlwZWNzc2V0LWJhc2UtbGluZS1oZWlnaHQgMDtcbn1cbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogVEFHU1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLnRhZy1saXN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1hcmdpbi10b3A6ICRiYXNlLXNwYWNpbmctdW5pdDtcbiAgICAudGFnIHtcbiAgICAgICAgYmFja2dyb3VuZDogJHllbGxvdztcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGJsYWNrO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6ICRiYXNlLXNwYWNpbmctdW5pdDtcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMsIHRleHQtZGVjb3JhdGlvbiAzMDBtcztcbiAgICAgICAgbWluLXdpZHRoOiAxMDBweDtcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJGJsYWNrO1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiw5dcIjtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgICAgICAgICAgcGFkZGluZzogMCAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnRhZy0tZGVsZXRlIHtcbiAgICAgICAgY29sb3I6ICRlcnJvcjtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG4gICAgfVxufVxuXG4udGFnLWxpc3QtLWNvbW1hIHtcbiAgICA+IGEge1xuICAgICAgICAvKmZvbnQtc2l6ZTogJHNtYWxsLWZvbnQ7Ki9cbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBjb250ZW50OiBcIixcXDAwYTBcIjtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgfVxuICAgICAgICAmOmxhc3QtY2hpbGQ6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogQlVUVE9OU1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLmJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZDogJGJyYW5kLW1haW47XG4gICAgYm9yZGVyOiAxcHggc29saWQgJGJsYWNrO1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBmb250LWZhbWlseTogJGJvZHktZm9udDtcbiAgICBmb250LXNpemU6ICR0eXBlY3NzZXQtaDQtc2l6ZTtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIHBhZGRpbmc6ICRiYXNlLXNwYWNpbmctdW5pdCAkdHlwZWNzc2V0LWJhc2UtbGluZS1oZWlnaHQ7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAzMDBtcztcbiAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogZGFya2VuKCRicmFuZC1tYWluLCAxMCUpO1xuICAgIH1cbn1cbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogJENMT1VEXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4uY2xvdWQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBhIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBwYWRkaW5nOiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG4gICAgfVxufVxuIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiAkRk9PVEVSXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4kYW5pbTogMzAwbXM7XG4kbWlsbGktc2l6ZTogMTBweDtcbi5mb290ZXItY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6ICRmb290ZXItaGVpZ2h0O1xuICAgIG1hcmdpbi10b3A6ICRiYXNlLXNwYWNpbmctdW5pdDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgLy9iYWNrZ3JvdW5kOiAkd2hpdGU7XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbGFyZ2UpIHtcbiAgICAgICAgJjpob3ZlcjpiZWZvcmUge1xuICAgICAgICAgICAgd2lkdGg6IDgwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkYnJhbmQtbWFpbjtcbiAgICAgICAgfVxuICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiB3aWR0aCAkYW5pbSwgYmFja2dyb3VuZCAkYW5pbTtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIG1hcmdpbjogJGJhc2Utc3BhY2luZy11bml0IGF1dG87XG4gICAgICAgICAgICB3aWR0aDogNTBweDtcbiAgICAgICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJGdyZXk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuLmZvb3RlciB7XG4gICAgLypAaW5jbHVkZSBjbGVhcmZpeDsqL1xuICAgIEBleHRlbmQgLm11dGVkO1xuICAgIG1heC13aWR0aDogMTYwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6ICRzbWFsbC1mb250O1xuICAgIFtkYXRhLWljb25dOmJlZm9yZSB7XG4gICAgICAgIC8qZm9udC1zaXplOiAkdHlwZWNzc2V0LWgzLXNpemU7Ki9cbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRiYXNlLXNwYWNpbmctdW5pdDtcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkbGFyZ2UpIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICAvKmZvbnQtc2l6ZTogJHR5cGVjc3NldC1oNC1zaXplOyovXG4gICAgICAgIH1cbiAgICB9XG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkcmV0aW5hKSB7XG4gICAgICAgIGZvbnQtc2l6ZTogJHJldGluYS1mb250O1xuICAgIH1cbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICBmb250LXNpemU6ICRzbWFsbC1mb250O1xuICAgIH1cbiAgICBhIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHBhZGRpbmc6ICRiYXNlLXNwYWNpbmctdW5pdDtcbiAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGdyZXk7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgcGFkZGluZzogJGJhc2Utc3BhY2luZy11bml0LzI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdWwge1xuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICAvL2Zsb2F0OiByaWdodDtcbiAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAvL3BhZGRpbmc6IDAgMCAwICRiYXNlLXNwYWNpbmctdW5pdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAuZm9vdGVyX19jb3B5cmlnaHQge1xuICAgICAgICBmb250LXNpemU6ICRzbWFsbC1mb250O1xuICAgICAgICBib3JkZXItdG9wOiBub25lO1xuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRyZXRpbmEpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJHNtYWxsLXJldGluYS1mb250O1xuICAgICAgICB9XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxhcmdlKSB7XG4gICAgICAgICAgICBmb250LXNpemU6ICRtaW5pLWZvbnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogTE9BREVSXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4kc2l6ZTogODBweDtcblxuLmxvYWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6YmVmb3JlLCBcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAyMDBtcztcbiAgICB9XG4gICAgJjpiZWZvcmUge1xuICAgICAgICBhbmltYXRpb246IHJvdGF0aW9uIDEuMHMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4gICAgICAgIGJvcmRlci1sZWZ0OiA4cHggc29saWQgJGJsYWNrO1xuICAgICAgICBib3JkZXItcmlnaHQ6IDhweCBzb2xpZCAkYmxhY2s7XG4gICAgICAgIGJvcmRlci10b3A6IDhweCBzb2xpZCAkd2hpdGU7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDhweCBzb2xpZCAkd2hpdGU7XG4gICAgICAgIGhlaWdodDogJHNpemU7XG4gICAgICAgIHdpZHRoOiAkc2l6ZTtcbiAgICB9XG4gICAgJjphZnRlciB7XG4gICAgICAgIGFuaW1hdGlvbjogcm90YXRpb24gMS4wcyA1MDBtcyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDZweCBzb2xpZCAkYmxhY2s7XG4gICAgICAgIGJvcmRlci1yaWdodDogNnB4IHNvbGlkICRibGFjaztcbiAgICAgICAgYm9yZGVyLXRvcDogNnB4IHNvbGlkICR3aGl0ZTtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogNnB4IHNvbGlkICR3aGl0ZTtcbiAgICAgICAgaGVpZ2h0OiAkc2l6ZS8yO1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtKCRzaXplLzQgKyA2KTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6ICRzaXplLzQ7XG4gICAgICAgIHdpZHRoOiAkc2l6ZS8yO1xuICAgIH1cbn1cblxuQGtleWZyYW1lcyByb3RhdGlvbiB7XG4gICAgMCUge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICB9XG59XG5cbiIsIi5ob21lIHtcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZSkge1xuICAgICAgICBAaW5jbHVkZSB0eXBlY3NzZXQtc3BhY2UobWFyZ2luLXRvcCk7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */