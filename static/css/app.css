@charset "UTF-8";
/**
 * Config
 **/
/**********
* SUSY
**********/
/**********
* Breakpoints
**********/
/**********
* Typecsset
**********/
/**********
* Colors
**********/
/*****
 * Spacing
 ****/
/*****
 * Fonts
 ****/
/*****
 * Navigation
 ****/
/*****
 * Navigation
 ****/
/*****
 * Animation
 ****/
/*****
 * Round
 ****/
/**
 * Mixins
 */
@-webkit-keyframes slide-in-from-left {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0); }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0);
    z-index: 1; } }
@keyframes slide-in-from-left {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0); }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0);
    z-index: 1; } }
@-webkit-keyframes slide-out-to-left {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0); }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0);
    z-index: -1; } }
@keyframes slide-out-to-left {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0); }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0);
    z-index: -1; } }
@-webkit-keyframes slide-up {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0%, 0);
            transform: translate3d(0, 0%, 0); }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0);
    z-index: -1; } }
@keyframes slide-up {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0%, 0);
            transform: translate3d(0, 0%, 0); }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0);
    z-index: -1; } }
@-webkit-keyframes slide-down {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0);
    z-index: -1; }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0%, 0);
            transform: translate3d(0, 0%, 0); } }
@keyframes slide-down {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0);
    z-index: -1; }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0%, 0);
            transform: translate3d(0, 0%, 0); } }
@-webkit-keyframes slide-in-from-right {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0);
    z-index: 1; } }
@keyframes slide-in-from-right {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0);
    z-index: 1; } }
@-webkit-keyframes slide-out-to-right {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0); }
  95% {
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0);
    z-index: -1; } }
@keyframes slide-out-to-right {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0); }
  95% {
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(0%, 0, 0);
            transform: translate3d(0%, 0, 0);
    z-index: -1; } }
/*
* REACT ANIMATIONS
******************************/
.fade-enter {
  max-height: 0;
  opacity: 0;
  transition: opacity 300ms, max-heigh 300ms; }

.fade-enter.fade-enter-active {
  opacity: 1;
  max-height: 500px; }

.fade-leave {
  max-height: 500px;
  opacity: 1;
  transition: opacity 300ms, max-heigh 300ms; }

.fade-leave.fade-leave-active {
  max-height: 0;
  opacity: 0; }

/******************************
* Animation delay repeater
******************************/
/**
 * Reset
 */
/* http://meyerweb.com/eric/tools/css/reset/ 
v2.0 | 20110126
License: none (public domain)
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  /*line-height: 1;*/ }

ol, ul {
  /*list-style: none;*/ }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/**
 * Third party
 */
/**
 * Typecsset
 *
 * Typecsset is a small, unopinionated library for creating beautifully set type
 * on the web. Typecsset gives perfect vertical rhythm at any configurable font
 * size, as well as many other typographical niceties.
 */
/*------------------------------------*\
    #SHARED
\*------------------------------------*/
/**
 * A lot of elements in Typecsset need to share some declarations (mainly for
 * vertical rhythm), so we `@extend` some silent classes.
 */
h1, h2, h3, h4, h5, h6, ul, ol, dd, p, address, pre, blockquote, table {
  margin: 0;
  padding: 0; }

h1, h2, h3, h4, h5, h6, ul, ol, dd, p, address, pre, blockquote, table {
  margin-bottom: 36px;
  margin-bottom: 1.5rem; }

/*------------------------------------*\
    #BASE
\*------------------------------------*/
/**
 * 1. Set the base element’s `font-size` to the value of your choosing. Set in
 *    ems, assuming a browser default of 16px.
 * 2. Work out the unitless `line-height` for your project based around your
 *    desired `line-height` (defined previously in pixels), and your project’s
 *    base font size.
 */
html {
  font-size: 1.5em;
  /* [1] */
  line-height: 1.5;
  /* [2] */ }

body {
  margin: 0; }

/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
h1 {
  font-size: 48px;
  font-size: 2rem;
  line-height: 1.5; }

h2 {
  font-size: 36px;
  font-size: 1.5rem;
  line-height: 1; }

h3 {
  font-size: 30px;
  font-size: 1.25rem;
  line-height: 1.2; }

h4 {
  font-size: 24px;
  font-size: 1rem;
  line-height: 1.5; }

h5 {
  font-size: 20px;
  font-size: 0.83333rem;
  line-height: 1.8; }

h6 {
  font-size: 18px;
  font-size: 0.75rem;
  line-height: 2; }

/*------------------------------------*\
    #LISTS
\*------------------------------------*/
ul, ol, dd {
  margin-left: 72px;
  margin-left: 3rem; }

li > ul,
li > ol {
  margin-bottom: 0; }

/*------------------------------------*\
    #PARAGRAPHS
\*------------------------------------*/
/**
 * Not strictly a paragraph, but probably doesn’t need its own section.
 */
/*------------------------------------*\
    #CODE
\*------------------------------------*/
/**
 * 1. Fix an odd quirk whereby, without this, code blocks are rendered at a
 *    font-size smaller than 1em.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* [1] */ }

/*------------------------------------*\
    #QUOTES
\*------------------------------------*/
/**
 * 1. Hang the opening quote of the blockquote.
 */
blockquote {
  text-indent: -0.41em;
  /* [1] */ }

/**
 * Set up quote marks on quoting elements. This is very English-based, so we are
 * using “, ”, ‘, and ’ quotes.
 */
blockquote {
  quotes: "“" "”";
  margin-left: 72px;
  margin-left: 3rem; }
  blockquote p:before {
    content: "“";
    content: open-quote; }
  blockquote p:after {
    content: "";
    content: no-close-quote; }
  blockquote p:last-of-type:after {
    content: "”";
    content: close-quote; }

q {
  quotes: "‘" "’" "“" "”";
  /**
   * If an element opens with an inline quote, let’s hang that.
   */ }
  q:before {
    content: "‘";
    content: open-quote; }
  q:after {
    content: "’";
    content: close-quote; }
  q q:before {
    content: "“";
    content: open-quote; }
  q q:after {
    content: "”";
    content: close-quote; }
  q:first-child {
    display: inline-block;
    text-indent: -0.22em; }

/*------------------------------------*\
    #TABLES
\*------------------------------------*/
/**
 * Crude table styles; tables are very difficult to keep on the baseline.
 */
table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0; }

th,
td {
  padding: 18px; }

/** 
 * Base
 */
body {
  background: #f9f9f9;
  color: #4c4c4c; }

blockquote {
  border-left: 8px solid #d9d9d9;
  color: #666666;
  font-style: italic;
  margin-left: 0;
  padding: 10px 36px;
  text-indent: 0; }

/**
 * Typography
 */
* {
  box-sizing: border-box; }

html, body {
  font-family: "Chronicle Display A", "Chronicle Display B";
  font-weight: 200;
  font-style: normal;
  color: #4c4c4c; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    html, body {
      font-size: 42px; } }
  @media screen and (min-width: 1000px) {
    html, body {
      font-size: 24px; } }

h1, h2, h3,
h4, h5, h6 {
  font-family: "Landmark Regular A", "Landmark Regular B";
  font-weight: 400;
  font-style: normal; }

/*
* $LINKS
******************************/
a {
  text-decoration: none;
  color: inherit; }
  a:hover, a.active {
    color: #ce6d7c; }

.block-link {
  display: block; }

.standout-link {
  border-bottom: 2px solid #4c4c4c; }
  .standout-link:hover {
    border-bottom: 3px solid #ce6d7c; }

.rule {
  border: none;
  outline: none;
  height: 1px;
  background: #d9d9d9;
  /*margin: $typecsset-base-line-height 0;*/
  margin-top: 36px;
  margin-bottom: 36px; }

.rule--small {
  background: #d9d9d9;
  border: none;
  height: 1px;
  margin: 36px auto;
  outline: none;
  width: 100px; }

/******************************
* ICONS
******************************/
.icon {
  width: 55px;
  vertical-align: middle; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .icon {
      width: 110px; } }
  @media screen and (min-width: 1000px) {
    .icon {
      width: 30px; } }

/******************************
* FONT OVERRIDES
******************************/
.fun-font {
  font-family: "Landmark Inline A", "Landmark Inline B";
  font-weight: 400; }

.giga, .single-item header h1 {
  word-wrap: break-word; }

.muted, .footer {
  color: #727272; }

.italic {
  font-style: italic; }

/**
 * Layout
 */
body {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  min-height: 100vh;
  padding: 10px 36px; }

main {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  min-height: 100%;
  width: 100%; }
  main:after {
    content: " ";
    display: block;
    clear: both; }

/******************************
* LAYOUT OVERRIDES
******************************/
.small-margin-bottom {
  margin-bottom: 10px; }

.no-margin-bottom {
  margin-bottom: 0; }

.left-align {
  margin-left: 0; }

.center {
  text-align: center; }

.spacer {
  margin-bottom: 36px; }

/*
* Skinny sections
******************************/
.skinny, .meta, .single-item article, .single-item header h1 {
  margin-left: auto;
  margin-right: auto; }
  @media screen and (min-width: 1000px) {
    .skinny, .meta, .single-item article, .single-item header h1 {
      max-width: 700px; } }

/*
* Article
******************************/
.article {
  margin-bottom: 36px; }

/*
* General Section
******************************/
/**
 * Modules
 */
.grid {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  /*display: map-get($settings, display);*/ }
  .grid:after {
    content: " ";
    display: block;
    clear: both; }

@media screen and (min-width: 1000px) {
  .grid--centered .grid--left {
    text-align: right; } }

@media screen and (min-width: 1000px) {
  .grid--1-4 {
    width: 23.40426%;
    float: left;
    margin-right: 2.12766%;
    line-height: 1; } }

@media screen and (min-width: 1000px) {
  .grid--2-3 {
    width: 65.95745%;
    float: left;
    margin-right: 2.12766%;
    line-height: 1; } }

@media screen and (min-width: 1000px) {
  .grid--1-2 {
    width: 48.93617%;
    float: left;
    margin-right: 2.12766%;
    line-height: 1; } }

@media screen and (min-width: 1000px) {
  .grid--push-1-4 {
    margin-left: 25.53191%; } }

@media screen and (min-width: 1000px) {
  .grid--push-1-3 {
    margin-left: 34.04255%; } }

@media screen and (min-width: 1000px) {
  .grid--last {
    float: right;
    margin-right: 0; } }

/******************************
* $NAVIGATION
******************************/
.main-nav {
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 150px;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  /*padding-bottom: $typecsset-base-line-height;*/
  /*@include breakpoint($retina) {*/
  /*height: $nav-height * 4;*/
  /*}*/ }
  @media screen and (min-width: 1000px) {
    .main-nav {
      /*font-size: $typecsset-base-font-size;*/
      height: 75px; } }
  @media screen and (min-width: 1000px) {
    .main-nav a {
      padding-left: 10px;
      padding-right: 10px;
      text-align: left;
      width: auto; } }
  .main-nav .site-logo {
    display: block;
    text-align: right;
    -webkit-order: 2;
        -ms-flex-order: 2;
            order: 2;
    width: 100%;
    /*z-index: 2;*/ }
    .main-nav .site-logo img {
      -webkit-align-self: flex-start;
          -ms-flex-item-align: start;
              align-self: flex-start; }
      @media screen and (min-width: 1000px) {
        .main-nav .site-logo img {
          max-width: 35px; } }
    @media screen and (min-width: 1000px) {
      .main-nav .site-logo {
        display: inline;
        /*line-height: $nav-height * 2;*/
        -webkit-order: 0;
            -ms-flex-order: 0;
                order: 0;
        padding-right: 10px;
        padding-left: 0;
        width: auto; } }
  .main-nav .main-nav__toggle {
    display: block;
    margin-left: -10px;
    padding-right: 20px;
    width: 25%;
    z-index: 2; }
    @media screen and (min-width: 1000px) {
      .main-nav .main-nav__toggle {
        display: none; } }
  .main-nav .dropdown {
    display: none; }
    @media screen and (min-width: 1000px) {
      .main-nav .dropdown {
        display: block; } }

@media screen and (min-width: 1000px) {
  .main-nav__break-right {
    margin-left: auto; } }

.main-nav__menu {
  /*font-size: $typecsset-h1-size;*/
  left: 0;
  position: absolute;
  top: 160px;
  width: 100%;
  z-index: -1;
  /*@include breakpoint($retina) {*/
  /*font-size: $typecsset-base-font-size * 6;*/
  /*}*/ }
  @media screen and (min-width: 1000px) {
    .main-nav__menu {
      -webkit-animation: none;
              animation: none;
      font-size: inherit;
      opacity: 1;
      position: static;
      width: auto;
      z-index: 1; } }
  .main-nav__menu > a {
    border-bottom: 1px solid #d9d9d9;
    display: block;
    font-size: 48px;
    opacity: 0;
    padding: 36px;
    width: 100%; }
    .main-nav__menu > a:nth-child(1) {
      -webkit-animation-name: slide-up;
              animation-name: slide-up;
      -webkit-animation-duration: 300ms;
              animation-duration: 300ms;
      -webkit-animation-delay: 100ms;
              animation-delay: 100ms;
      -webkit-animation-fill-mode: forwards;
              animation-fill-mode: forwards; }
    .main-nav__menu > a:nth-child(2) {
      -webkit-animation-name: slide-up;
              animation-name: slide-up;
      -webkit-animation-duration: 300ms;
              animation-duration: 300ms;
      -webkit-animation-delay: 200ms;
              animation-delay: 200ms;
      -webkit-animation-fill-mode: forwards;
              animation-fill-mode: forwards; }
    .main-nav__menu > a:nth-child(3) {
      -webkit-animation-name: slide-up;
              animation-name: slide-up;
      -webkit-animation-duration: 300ms;
              animation-duration: 300ms;
      -webkit-animation-delay: 300ms;
              animation-delay: 300ms;
      -webkit-animation-fill-mode: forwards;
              animation-fill-mode: forwards; }
    .main-nav__menu > a:first-child {
      border-top: 1px solid #d9d9d9; }
      @media screen and (min-width: 1000px) {
        .main-nav__menu > a:first-child {
          border: none; } }
    @media screen and (min-width: 1000px) {
      .main-nav__menu > a {
        border: none;
        display: inline;
        font-size: 24px;
        opacity: 1;
        padding: 0 10px;
        width: auto; }
        .main-nav__menu > a:nth-child(1) {
          -webkit-animation-name: none;
                  animation-name: none;
          -webkit-animation-duration: none;
                  animation-duration: none;
          -webkit-animation-delay: 100ms;
                  animation-delay: 100ms;
          -webkit-animation-fill-mode: forwards;
                  animation-fill-mode: forwards; }
        .main-nav__menu > a:nth-child(2) {
          -webkit-animation-name: none;
                  animation-name: none;
          -webkit-animation-duration: none;
                  animation-duration: none;
          -webkit-animation-delay: 200ms;
                  animation-delay: 200ms;
          -webkit-animation-fill-mode: forwards;
                  animation-fill-mode: forwards; }
        .main-nav__menu > a:nth-child(3) {
          -webkit-animation-name: none;
                  animation-name: none;
          -webkit-animation-duration: none;
                  animation-duration: none;
          -webkit-animation-delay: 300ms;
                  animation-delay: 300ms;
          -webkit-animation-fill-mode: forwards;
                  animation-fill-mode: forwards; } }

.main-nav__social {
  -webkit-animation: slide-out-to-left 300ms forwards;
          animation: slide-out-to-left 300ms forwards;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%; }
  @media screen and (min-width: 1000px) {
    .main-nav__social {
      -webkit-animation: none;
              animation: none;
      display: block;
      opacity: 1;
      width: auto; } }
  .main-nav__social > a {
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1;
    text-align: center; }
    @media screen and (min-width: 1000px) {
      .main-nav__social > a {
        display: inline-block;
        width: auto; } }

/******************************
* OPEN NAVIGATION
******************************/
main > section {
  transition: opacity 300ms;
  z-index: 1; }

.main-nav--closed .main-nav__menu a {
  opacity: 1;
  z-index: -1; }
  @media screen and (min-width: 1000px) {
    .main-nav--closed .main-nav__menu a {
      z-index: 1; } }

.main-nav--open .main-nav__social,
.main-nav--open .main-nav__menu {
  z-index: 1; }
.main-nav--open .main-nav__menu a:nth-child(1) {
  -webkit-animation-name: slide-down;
          animation-name: slide-down;
  -webkit-animation-duration: 300ms;
          animation-duration: 300ms;
  -webkit-animation-delay: 100ms;
          animation-delay: 100ms;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }
.main-nav--open .main-nav__menu a:nth-child(2) {
  -webkit-animation-name: slide-down;
          animation-name: slide-down;
  -webkit-animation-duration: 300ms;
          animation-duration: 300ms;
  -webkit-animation-delay: 200ms;
          animation-delay: 200ms;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }
.main-nav--open .main-nav__menu a:nth-child(3) {
  -webkit-animation-name: slide-down;
          animation-name: slide-down;
  -webkit-animation-duration: 300ms;
          animation-duration: 300ms;
  -webkit-animation-delay: 300ms;
          animation-delay: 300ms;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }
.main-nav--open .main-nav__social {
  -webkit-animation: slide-in-from-left 200ms forwards;
          animation: slide-in-from-left 200ms forwards; }
.main-nav--open .site-logo {
  display: none; }
.main-nav--open > section {
  opacity: 0.1;
  position: relative;
  z-index: -1; }

.snippet {
  display: block;
  margin-bottom: 36px; }
  .snippet .snippet__tagline {
    margin-bottom: 0; }
  .snippet .snippet__item {
    font-style: italic; }

.tagline {
  font-family: "Landmark Inline A", "Landmark Inline B";
  font-weight: 400;
  font-size: 48px;
  text-align: center; }
  .tagline .tagline__item {
    margin-bottom: 0;
    line-height: 1; }
  @media screen and (min-width: 1000px) {
    .tagline {
      font-size: 36px;
      text-align: left; } }

.avatar {
  text-align: center;
  margin-bottom: 36px;
  font-size: 16.8px; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .avatar {
      font-size: 29.4px; } }
  @media screen and (min-width: 1000px) {
    .avatar {
      margin-bottom: auto;
      font-size: 16.8px; } }

.avatar__image {
  border-radius: 50%;
  max-width: 50%;
  margin-bottom: 36px; }
  @media screen and (min-width: 1000px) {
    .avatar__image {
      border-radius: 3px;
      margin-bottom: 10px;
      max-width: 90px; } }

.avatar__summary {
  /*font-size: $typecsset-base-font-size;*/
  /*font-size: $small-font;*/ }

.avatar__summary__item {
  margin-bottom: 5px; }

.avatar__summary__position {
  font-style: italic;
  font-weight: normal; }

/*------------------------------------*\
    $DROPDOWN
\*------------------------------------*/
.dropdown {
  position: relative;
  cursor: pointer; }
  .dropdown > ul {
    background: #f9f9f9;
    border-radius: 3px;
    margin: 0;
    min-width: 100px;
    padding: 0;
    right: 0; }
    @media screen and (min-width: 1000px) {
      .dropdown > ul:before, .dropdown > ul:after {
        border-top: 10px solid transparent;
        border-bottom: 10px solid #f9f9f9;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        content: "";
        display: block;
        right: 10px;
        top: -20px;
        position: absolute; } }
    .dropdown > ul:after {
      top: -21px;
      border-bottom: 10px solid #4c4c4c;
      z-index: -1; }
    @media screen and (min-width: 1000px) {
      .dropdown > ul {
        top: 125%;
        display: none;
        position: absolute;
        border: 1px solid #4c4c4c;
        white-space: nowrap; } }
    .dropdown > ul li {
      display: block; }
    .dropdown > ul a {
      display: block;
      line-height: inherit;
      text-align: right; }
      @media screen and (min-width: 1000px) {
        .dropdown > ul a {
          padding-left: 0;
          padding: 10px; }
          .dropdown > ul a:hover {
            background: #ce6d7c;
            color: #f9f9f9; } }

.dropdown:hover ul {
  display: block; }

/******************************
* TABLES!
******************************/
table {
  text-align: left; }

caption {
  font-family: "Landmark Regular A", "Landmark Regular B";
  font-size: 48px;
  margin-bottom: 10px;
  text-align: left; }
  caption a {
    float: right;
    font-family: "Chronicle Display A", "Chronicle Display B";
    font-size: 16.8px; }

th {
  background: #ce6d7c;
  color: #f9f9f9;
  cursor: pointer;
  padding: 0;
  transition: background 200ms; }
  th a {
    cursor: pointer;
    display: block;
    padding: 10px; }
    th a:hover {
      color: #f9f9f9; }
  th:first-child {
    border-radius: 3px 0 0 0; }
  th:last-child {
    border-radius: 0 3px 0 0; }
  th:hover {
    background: #c1475a; }
    th:hover a {
      color: #f9f9f9; }

tbody {
  border-bottom: 1px solid #d9d9d9; }
  tbody tr:nth-child(2n - 1) {
    background: rgba(217, 217, 217, 0.2); }

.table-row-enter {
  opacity: 0.01;
  -webkit-transform: translate3d(-100px, 0, 0);
          transform: translate3d(-100px, 0, 0);
  transition: opacity 300ms, -webkit-transform 300ms;
  transition: opacity 300ms, transform 300ms; }

.table-row-enter.table-row-enter-active {
  opacity: 1;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0); }

.table-row-leave {
  opacity: 1;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  transition: opacity 300ms, -webkit-transform 300ms;
  transition: opacity 300ms, transform 300ms; }

.table-row-leave.table-row-leave-active {
  opacity: 0.01;
  -webkit-transform: translate3d(-100px, 0, 0);
          transform: translate3d(-100px, 0, 0); }

/******************************
* ALERTS
******************************/
.alert {
  border: 1px solid #4c4c4c;
  border-radius: 3px;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 10px auto;
  max-width: 300px;
  text-align: center;
  transition: background 300ms, opacity 300ms, max-height 300ms; }
  .alert a {
    -webkit-align-self: center;
        -ms-flex-item-align: center;
            align-self: center;
    cursor: pointer;
    width: 100%;
    word-wrap: break-word; }
  .alert a,
  .alert img {
    min-width: 20px;
    padding: 10px; }
  .alert img {
    background: #ce6d7c; }

.alert--warning {
  background: #FFFBD3; }
  .alert--warning:hover {
    background: #fff6a0; }

.alert--error {
  background: #a53737;
  color: #f9f9f9; }

/******************************
* SUMMARY LIST
******************************/
.summary-list {
  background: rgba(217, 217, 217, 0.2);
  border-radius: 3px;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  margin: 0;
  padding: 0;
  text-align: center; }
  @media screen and (min-width: 1000px) {
    .summary-list {
      -webkit-flex-direction: row;
          -ms-flex-direction: row;
              flex-direction: row; } }
  .summary-list h2 {
    /*font-size: $typecsset-base-font-size;*/
    margin-bottom: 0; }
  .summary-list li {
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1;
    padding: 10px; }
  .summary-list p {
    margin-bottom: 0; }

/******************************
* META
******************************/
.meta {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 16.8px; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .meta {
      font-size: 42px; } }
  @media screen and (min-width: 1000px) {
    .meta {
      font-size: 24px; } }

.meta__item {
  /*background: rgba($grey, 0.2);*/
  border-radius: 3px;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  list-style: none;
  margin: 0; }

.meta__header {
  font-size: 16.8px;
  margin-bottom: 5px; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .meta__header {
      font-size: 42px; } }
  @media screen and (min-width: 1000px) {
    .meta__header {
      font-size: 36px; } }

.meta__value {
  font-style: italic;
  margin-bottom: 10px; }

/******************************
* SINGLE ITEM
* This is for long form items 
* as seen in a post or project
******************************/
.single-item img {
  display: block;
  margin: 36px auto;
  max-width: 100%; }

/*
* Single item sections
******************************/
.single-item {
  margin: 0 auto; }

.single-item header {
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (min-width: 1000px) {
    .single-item header {
      -webkit-flex-direction: row;
          -ms-flex-direction: row;
              flex-direction: row; } }
  .single-item header img {
    display: block;
    margin: 36px auto; }
  .single-item header .aside-1,
  .single-item header .aside-2 {
    text-align: center;
    width: 100%; }
    @media screen and (min-width: 1000px) {
      .single-item header .aside-1 li:after,
      .single-item header .aside-2 li:after {
        margin-left: inherit;
        margin-right: inherit; } }
    @media screen and (min-width: 1000px) {
      .single-item header .aside-1,
      .single-item header .aside-2 {
        text-align: inherit;
        width: auto; } }
  @media screen and (min-width: 1000px) {
    .single-item header .aside-1 {
      -webkit-order: 1;
          -ms-flex-order: 1;
              order: 1; }
      .single-item header .aside-1 li:after {
        margin-left: auto; } }
  .single-item header .aside-2 {
    -webkit-order: 3;
        -ms-flex-order: 3;
            order: 3; }
  .single-item header h1 {
    line-height: 1;
    text-align: center; }
    @media screen and (min-width: 1000px) {
      .single-item header h1 {
        min-width: 700px;
        -webkit-order: 2;
            -ms-flex-order: 2;
                order: 2; } }

/*

Orginal Style from ethanschoonover.com/solarized (c) Jeremy Hull
<sourdrums@gmail.com>

 */
.hljs,
pre code {
  display: block;
  overflow-x: auto;
  padding: 0.5em;
  background: #002b36;
  color: #839496;
  -webkit-text-size-adjust: none; }

code {
  background: #002b36;
  border-radius: 3px;
  color: #839396;
  display: inline-block;
  font-size: 16.8px;
  margin: 0 0.2em;
  padding: 0.2em; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    code {
      font-size: 29.4px; } }
  @media screen and (min-width: 1000px) {
    code {
      font-size: 16.8px; } }

.hljs-comment,
.diff .hljs-header,
.hljs-doctype,
.hljs-pi,
.lisp .hljs-string,
.hljs-javadoc {
  color: #586e75; }

/* Solarized Green */
.hljs-keyword,
.hljs-winutils,
.method,
.hljs-addition,
.css .hljs-tag,
.hljs-request,
.hljs-status,
.nginx .hljs-title {
  color: #859900; }

/* Solarized Cyan */
.hljs-number,
.hljs-command,
.hljs-string,
.hljs-tag .hljs-value,
.hljs-rules .hljs-value,
.hljs-phpdoc,
.hljs-dartdoc,
.tex .hljs-formula,
.hljs-regexp,
.hljs-hexcolor,
.hljs-link_url {
  color: #2aa198; }

/* Solarized Blue */
.hljs-title,
.hljs-localvars,
.hljs-chunk,
.hljs-decorator,
.hljs-built_in,
.hljs-identifier,
.vhdl .hljs-literal,
.hljs-id,
.css .hljs-function {
  color: #268bd2; }

/* Solarized Yellow */
.hljs-attribute,
.hljs-variable,
.lisp .hljs-body,
.smalltalk .hljs-number,
.hljs-constant,
.hljs-class .hljs-title,
.hljs-parent,
.hljs-type,
.hljs-link_reference {
  color: #b58900; }

/* Solarized Orange */
.hljs-preprocessor,
.hljs-preprocessor .hljs-keyword,
.hljs-pragma,
.hljs-shebang,
.hljs-symbol,
.hljs-symbol .hljs-string,
.diff .hljs-change,
.hljs-special,
.hljs-attr_selector,
.hljs-subst,
.hljs-cdata,
.css .hljs-pseudo,
.hljs-header {
  color: #cb4b16; }

/* Solarized Red */
.hljs-deletion,
.hljs-important {
  color: #dc322f; }

/* Solarized Violet */
.hljs-link_label {
  color: #6c71c4; }

.tex .hljs-formula {
  background: #073642; }

/******************************
* FORMS
******************************/
form {
  width: 100%; }

.form-row {
  margin-bottom: 36px; }
  .form-row label {
    display: block;
    font-size: 36px; }
  .form-row input[type="text"],
  .form-row input[type="password"],
  .form-row textarea {
    border: 1px solid #d9d9d9;
    border-radius: 3px;
    display: block;
    font-size: 24px;
    font-family: "Chronicle Display A", "Chronicle Display B";
    padding: 10px;
    width: 100%; }
  .form-row textarea {
    min-height: 500px; }

.checkbox {
  position: relative; }

.checkbox input[type="checkbox"] {
  opacity: 0;
  -webkit-appearance: none;
  display: inline-block;
  vertical-align: middle;
  z-index: 100; }

.checkbox input[type="checkbox"],
.checkbox label::before {
  width: 50px;
  height: 50px;
  top: 50%;
  left: 0;
  margin-top: -25px;
  position: absolute;
  cursor: pointer;
  border-radius: 50%;
  background: #a53737; }

.checkbox label {
  display: inline-block;
  position: relative;
  padding: 0 0 0 80px;
  vertical-align: top;
  cursor: pointer;
  color: rgba(76, 76, 76, 0.7);
  transition: color 0.3s; }
  .checkbox label:before {
    content: '';
    border: 4px solid #4c4c4c;
    transition: opacity 0.3s, background 200ms; }

.checkbox
input[type="checkbox"]:checked
+ label {
  color: #4c4c4c; }

.checkbox
input[type="checkbox"]:checked
+ label::before {
  opacity: 0.8;
  background: #39ac52; }

/******************************
* TABS
******************************/
.tabs-navigation {
  box-shadow: inset 0 -2px #d9d9d9;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start; }
  .tabs-navigation a {
    box-shadow: inset 0 -2px #b2b2b2;
    color: #b2b2b2;
    display: block;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1;
    font-family: "Landmark Regular A", "Landmark Regular B";
    font-weight: 700;
    letter-spacing: 1px;
    padding: 5px 10px;
    text-align: left;
    text-transform: uppercase;
    transition: color 300ms, box-shadow 300ms; }
    .tabs-navigation a:not(.tabs-menu-item--active):hover {
      box-shadow: inset 0 -2px #4c4c4c;
      color: #4c4c4c; }
    @media screen and (min-width: 1000px) {
      .tabs-navigation a {
        max-width: 200px; } }
  .tabs-navigation .tabs-menu-item--active {
    box-shadow: inset 0 -2px #ce6d7c;
    color: #ce6d7c; }

.tab-panel {
  padding: 36px 0; }

/******************************
* TAGS
******************************/
.tag-list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-top: 10px; }
  .tag-list .tag {
    background: #faead4;
    border: 1px solid #4c4c4c;
    border-radius: 3px;
    cursor: pointer;
    margin-right: 10px;
    padding-right: 10px;
    transition: color 300ms, text-decoration 300ms;
    min-width: 100px; }
    .tag-list .tag:before {
      background: #4c4c4c;
      color: #f9f9f9;
      content: "×";
      display: inline-block;
      margin-right: 5px;
      padding: 0 10px; }
  .tag-list .tag--delete {
    color: #a53737;
    text-decoration: line-through; }

.tag-list--comma > a {
  /*font-size: $small-font;*/ }
  .tag-list--comma > a:after {
    content: ",\00a0";
    display: inline-block; }
  .tag-list--comma > a:last-child:after {
    content: ""; }

/******************************
* BUTTONS
******************************/
.button {
  background: #ce6d7c;
  border: 1px solid #4c4c4c;
  border-radius: 3px;
  color: #f9f9f9;
  cursor: pointer;
  font-family: "Chronicle Display A", "Chronicle Display B";
  font-size: 24px;
  outline: none;
  padding: 10px 36px;
  transition: background 300ms; }
  .button:hover {
    background: #c1475a; }

/******************************
* $CLOUD
******************************/
.cloud {
  text-align: center; }
  .cloud a {
    display: inline-block;
    padding: 10px; }

/******************************
* $FOOTER
******************************/
.footer-container {
  height: 80px;
  margin-top: 10px;
  position: relative; }
  @media screen and (min-width: 1000px) {
    .footer-container:hover:before {
      width: 80px;
      background: #ce6d7c; }
    .footer-container:before {
      transition: width 300ms, background 300ms;
      content: "";
      display: block;
      position: relative;
      margin: 10px auto;
      width: 50px;
      height: 1px;
      background: #d9d9d9; } }

.footer {
  /*@include clearfix;*/
  max-width: 1600px;
  margin: 0 auto;
  text-align: center;
  font-size: 16.8px; }
  .footer [data-icon]:before {
    /*font-size: $typecsset-h3-size;*/
    display: block;
    margin-bottom: 10px; }
    @media screen and (min-width: 1000px) {
      .footer [data-icon]:before {
        display: inline-block;
        margin-bottom: 0;
        /*font-size: $typecsset-h4-size;*/ } }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .footer {
      font-size: 42px; } }
  @media screen and (min-width: 1000px) {
    .footer {
      font-size: 16.8px; } }
  .footer a {
    display: block;
    padding: 10px;
    background: #f9f9f9;
    border-top: 1px solid #d9d9d9; }
    @media screen and (min-width: 1000px) {
      .footer a {
        background: none;
        border: none;
        padding: 5px; } }
  .footer ul {
    list-style: none;
    margin: 0;
    padding: 0; }
    @media screen and (min-width: 1000px) {
      .footer ul li {
        display: inline-block; } }
  .footer .footer__copyright {
    font-size: 16.8px;
    border-top: none; }
    @media screen and (-webkit-min-device-pixel-ratio: 2) {
      .footer .footer__copyright {
        font-size: 29.4px; } }
    @media screen and (min-width: 1000px) {
      .footer .footer__copyright {
        font-size: 12px; } }

/******************************
* LOADER
******************************/
.loader {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-content: center;
      -ms-flex-line-pack: center;
          align-content: center;
  position: relative; }
  .loader:before, .loader:after {
    border-radius: 50%;
    content: '';
    transition: opacity 200ms; }
  .loader:before {
    -webkit-animation: rotation 1.0s infinite ease-in-out;
            animation: rotation 1.0s infinite ease-in-out;
    border-left: 8px solid #4c4c4c;
    border-right: 8px solid #4c4c4c;
    border-top: 8px solid #f9f9f9;
    border-bottom: 8px solid #f9f9f9;
    height: 80px;
    width: 80px; }
  .loader:after {
    -webkit-animation: rotation 1.0s 500ms infinite ease-in-out;
            animation: rotation 1.0s 500ms infinite ease-in-out;
    border-left: 6px solid #4c4c4c;
    border-right: 6px solid #4c4c4c;
    border-top: 6px solid #f9f9f9;
    border-bottom: 6px solid #f9f9f9;
    height: 40px;
    left: 50%;
    margin-left: -26px;
    position: absolute;
    top: 20px;
    width: 40px; }

@-webkit-keyframes rotation {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes rotation {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }
/**
 * Page Specific
 */
@media screen and (min-width: 1000px) {
  .home {
    margin-top: 72px;
    margin-top: 3rem; } }



/*# sourceMappingURL=data:application/json;base64, */